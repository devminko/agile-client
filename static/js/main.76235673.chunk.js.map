{"version":3,"sources":["components-dashboard-client/client-page/client-page.module.scss","components-dashboard/dashboard-menu-section/dashboard-menu-section.module.scss","components-dashboard-client/client-edit/client-edit.module.scss","components-home/home-features/home-features.module.scss","components-dashboard-company/company-edit/company-edit.module.scss","components-dashboard-client/client-create/client-create.module.scss","pages/signup-page/signup-page.module.scss","components-dashboard-company/company-item/company-item.module.scss","components-dashboard-logs/log-item/log-item.module.scss","components-dashboard-company/company-create/company-create.module.scss","components-dashboard-tasks/task-item/task-item.module.scss","components-dashboard-logs/log-all-items/log-all-items.module.scss","pages/signin-page/signin-page.module.scss","components-home/home-landing/home-landing.module.scss","pages/navbar/navbar.module.scss","components-dashboard-logs/log-create/log-create.module.scss","components-dashboard-tasks/task-edit/task-edit.module.scss","pages/navbar-mobile/navbar-mobile.module.scss","components/button/button.module.scss","components-dashboard-client/client-list/client-list.module.scss","components-dashboard-calendar/calendar-date-info/calendar-date-info.module.scss","components-dashboard-tasks/task-create/task-create.module.scss","components-dashboard-logs/log-edit/log-edit.module.scss","components-dashboard-tasks/task-page/task-page.module.scss","pages/404-page/page-not-found.module.scss","components/alert/alert.module.scss","components/form-input/form-input.module.scss","pages/dashboard-page/dashboard-page.module.scss","components/return-container/return-container.module.scss","components-dashboard-calendar/calendar-logs/calendar-logs.module.scss","components-dashboard/dashboard-small-section/dashboard-small-section.module.scss","components-dashboard/dashboard-large-section/dashboard-large-section.module.scss","pages/footer/footer.module.scss","components/form-text-area/form-text-area.module.scss","redux/alert/alert.reducer.js","redux/auth/auth.reducer.js","redux/calendar/calendar.reducer.js","redux/clients/clients.reducer.js","redux/company/company.reducer.js","redux/dashboard/dashboard.reducer.js","redux/log/log.reducer.js","redux/task/task.reducer.js","redux/root-reducer.js","redux/alert/alert.types.js","redux/auth/auth.types.js","redux/calendar/calendar.types.js","redux/clients/clients.types.js","redux/company/company.types.js","redux/dashboard/dashboard.types.js","redux/log/log.types.js","redux/task/task.types.js","redux/store.js","redux/alert/alert.actions.js","redux/auth/auth.actions.js","pages/navbar/Navbar.js","redux/clients/clients.actions.js","redux/calendar/calendar.actions.js","pages/navbar-mobile/NavbarMobile.js","redux/dashboard/dashboard.actions.js","components/private-route/PrivateRoute.js","components/alert/Alert.js","components-home/home-landing/HomeLanding.js","components-home/home-features/HomeFeatures.js","pages/home-page/HomePage.js","components/button/Button.js","components/form-input/FormInput.js","pages/signin-page/SigninPage.js","pages/signup-page/SignupPage.js","pages/404-page/PageNotFound.js","components-dashboard/dashboard-menu-section/DashboardMenuSection.js","components-dashboard-client/client-list/ClientList.js","redux/task/task.actions.js","components/form-text-area/FormTextArea.js","components-dashboard-tasks/task-create/TaskCreate.js","components-dashboard-calendar/calendar-date-info/CalendarDateInfo.js","components-dashboard/dashboard-small-section/DashboardSmallSection.js","redux/company/company.actions.js","components/return-container/ReturnContainer.js","components-dashboard-client/client-edit/ClientEdit.js","components-dashboard-company/company-item/CompanyItem.js","components-dashboard-company/company-create/CompanyCreate.js","components-dashboard-company/company-edit/CompanyEdit.js","redux/log/log.actions.js","components-dashboard-logs/log-item/LogItem.js","components-dashboard-logs/log-create/LogCreate.js","components-dashboard-logs/log-edit/LogEdit.js","components-dashboard-logs/log-all-items/LogAllItems.js","components-dashboard-client/client-page/ClientPage.js","components-dashboard-client/client-create/ClientCreate.js","components-dashboard-tasks/task-item/TaskItem.js","components-dashboard-tasks/task-edit/TaskEdit.js","components-dashboard-tasks/task-page/TaskPage.js","components-dashboard-calendar/calendar-logs/CalendarLogs.js","components-dashboard/dashboard-large-section/DashboardLargeSection.js","pages/dashboard-page/DashboardPage.js","routes/App.js","index.js"],"names":["module","exports","INITIAL_STATE","token","localStorage","getItem","isAuthenticated","loading","user","error","calendarDateLogs","calendarDate","clients","client","companies","currentCompany","homeMenu","isActive","clientsMenu","tasksMenu","calendarMenu","companyMenu","isCreating","isEditing","logMenu","isViewingAllLogs","editingClient","editingTask","logs","clientLogs","currentLog","tasks","task","rootReducer","combineReducers","alert","state","action","type","payload","filter","id","auth","setItem","removeItem","calendar","company","dashboard","log","clientLog","middlewares","thunk","logger","store","createStore","composeWithDevTools","applyMiddleware","setAlert","msg","alertType","timeout","dispatch","uuid","setTimeout","API_URL","deployOnError","err","errors","response","statusText","loginUser","email","password","a","config","headers","body","JSON","stringify","axios","post","res","data","defaults","common","get","connect","logoutUser","history","useHistory","onLogout","push","notAuthLinks","className","style","links","to","link","authLinks","logoutButton","onClick","navbar","innerNavbarContainer","logoContainer","logo","getAClient","toggleHomeMenu","toggleClientsMenu","toggleTasksMenu","toggleCalendarMenu","resetEditTask","resetClient","resetCalendarDateLogs","navbarMobile","content","iconContainer","icon","aria-label","Component","component","otherProps","render","props","length","map","alertItem","key","alertSuccess","alertWarning","alertDanger","HomeLanding","homeLanding","landingContainer","textContainer","title","titleTwo","subtitle","buttonContainer","button","imageContainer","HomeFeatures","homeFeatures","headerOuterContainer","headerContainer","header","subHeader","featuresOuterContainer","featuresContainer","feature","featureHeader","featureText","HomePage","homePage","test-attr","Button","landingPage","signinPage","signupPage","addButton","deleteButton","addCompany","deleteCompany","clientButton","todoButton","children","FormInput","clientInput","signupInput","signinInput","onChange","formInput","useState","formData","setFormData","e","target","name","value","onSubmit","preventDefault","formContainer","formHeader","form","inputContainer","inputLabel","requiredText","placeholder","autoComplete","required","haveAccountText","signinText","signinLandingSection","registerUser","signupLandingSection","termsAndConditionsContainer","termsAndConditionsText","PageNotFound","pageNotFound","textItems","text","dashboardMenuSection","navigationInnerContainer","navigationTitle","navigationMenu","menuContainer","isActiveContainer","isActiveIcon","iconText","isActiveText","logoutContainer","logoutIconContainer","resetCompanyState","resetEditClient","useEffect","search","setSearch","first_name","toLowerCase","includes","last_name","sortedByLastName","letter","sortedClients","i","j","clientsOrderedByLastName","clientListItem","clientName","renderClientList","noClientText","clientList","headerTop","clientListTitle","searchbar","getAllTasks","sortedTasksByDate","sort","b","date_created","updateTask","put","FormTextArea","clientTextArea","formTextArea","createTask","is_complete","bodyJSON","console","date_create","taskCreate","formLabel","inputIcon","getCalendarDateLogs","calendarDateInfo","date","moment","format","loadingText","calendarDateInfoContainer","associated_client","logClient","logType","logText","details","headerDate","dashboardSmallSection","smallInnerContainer","getCompany","companyId","window","confirm","delete","ReturnContainer","returnToClient","returnToTasks","returnContainer","returnIcon","returnText","updateClient","deleteClient","toggleEditClient","phone_number","job_title","notes","updateClientForm","clientEdit","deleteIcon","deleteText","toggleCreateCompany","toggleEditCompany","companyContainer","companyTitle","company_name","companyText","href","website","rel","address","company_number","company_notes","companyTitleTwo","viewIconContainer","viewIcon","viewText","addIconContainer","addIcon","addText","companyItem","createCompany","companyCreate","updateCompany","editCompanyForm","companyEdit","getLog","logId","deleteLog","getClientLogs","clientId","sortedClientLogsByDate","log_date","toggleCreateLog","toggleEditLog","logContainer","navigateToEditLog","slice","logDateText","editIconContainer","editIcon","editText","deleteIconContainer","addLogContainer","addLogText","addButtonContainer","logItem","createLog","resetLogState","removeReturnContainer","logCreate","updateLog","logEditForm","logEdit","clientLogsContainer","clientLogItem","logAllItems","getAllCompanies","toggleAllLogs","client_company","clientHeader","nameContainer","jobTitleContainer","jobTitle","clientInfo","clientPage","sectionContainer","sectionTitle","infoContainer","infoText","noteText","titleHeader","viewAllIconContainer","viewAllIcon","viewAllText","renderClientEdit","renderToScreen","createClient","clientCreate","getTask","deleteTask","toggleEditTask","navigateToEditTask","taskId","isChecked","taskItem","taskContainer","taskType","taskText","taskDateText","isCompleteContainer","checked","checkbox","isCompleteText","iconsContainer","onChangeIsComplete","taskEdit","taskState","renderTaskToPage","pendingTodoContainer","emptyTitle","completedTodoContainer","taskPage","getAllLogs","addCalendarDateLog","setCalendarDate","logDate","calendarLogs","defaultView","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","weekends","events","dateClick","arg","dateStr","height","buttonText","today","eventOrder","eventColor","dashboardLargeSection","largeInnerContainer","getAllClients","sortedClientsByLastName","dashboardPage","dashboardMenuContainer","dashboardSmallContainer","dashboardLargeContainer","App","app","basename","exact","path","SigninPage","SignupPage","DashboardPage","jsx","ReactDOM","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,WAAa,gCAAgC,aAAe,kCAAkC,cAAgB,mCAAmC,WAAa,gCAAgC,kBAAoB,uCAAuC,SAAW,8BAA8B,cAAgB,mCAAmC,SAAW,8BAA8B,SAAW,8BAA8B,iBAAmB,sCAAsC,aAAe,kCAAkC,cAAgB,mCAAmC,KAAO,0BAA0B,SAAW,8BAA8B,SAAW,8BAA8B,YAAc,iCAAiC,qBAAuB,0CAA0C,YAAc,iCAAiC,YAAc,mC,iBCAt3BD,EAAOC,QAAU,CAAC,qBAAuB,qDAAqD,yBAA2B,yDAAyD,gBAAkB,gDAAgD,eAAiB,+CAA+C,cAAgB,8CAA8C,cAAgB,8CAA8C,KAAO,qCAAqC,SAAW,yCAAyC,kBAAoB,kDAAkD,aAAe,6CAA6C,aAAe,6CAA6C,gBAAkB,gDAAgD,oBAAsB,sD,iBCAtyBD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,gBAAkB,qCAAqC,OAAS,4BAA4B,cAAgB,mCAAmC,WAAa,gCAAgC,WAAa,gCAAgC,KAAO,0BAA0B,UAAY,+BAA+B,aAAe,kCAAkC,eAAiB,oCAAoC,UAAY,iC,iBCAteD,EAAOC,QAAU,CAAC,aAAe,oCAAoC,qBAAuB,4CAA4C,gBAAkB,uCAAuC,OAAS,8BAA8B,UAAY,iCAAiC,uBAAyB,8CAA8C,kBAAoB,yCAAyC,QAAU,+BAA+B,cAAgB,qCAAqC,KAAO,4BAA4B,cAAgB,qCAAqC,YAAc,qC,iBCA7lBD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,gBAAkB,sCAAsC,OAAS,6BAA6B,cAAgB,oCAAoC,WAAa,iCAAiC,WAAa,iCAAiC,KAAO,2BAA2B,UAAY,gCAAgC,aAAe,mCAAmC,eAAiB,qCAAqC,UAAY,kC,gBCAlfD,EAAOC,QAAU,CAAC,aAAe,oCAAoC,OAAS,8BAA8B,KAAO,4BAA4B,UAAY,iCAAiC,aAAe,oCAAoC,eAAiB,sCAAsC,UAAY,mC,kBCAlTD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,cAAgB,mCAAmC,WAAa,gCAAgC,KAAO,0BAA0B,eAAiB,oCAAoC,WAAa,gCAAgC,aAAe,kCAAkC,4BAA8B,iDAAiD,uBAAyB,4CAA4C,gBAAkB,qCAAqC,WAAa,gCAAgC,qBAAuB,0CAA0C,eAAiB,sC,gBCA7pBD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,iBAAmB,uCAAuC,aAAe,mCAAmC,gBAAkB,sCAAsC,YAAc,kCAAkC,KAAO,2BAA2B,gBAAkB,sCAAsC,kBAAoB,wCAAwC,SAAW,+BAA+B,SAAW,+BAA+B,iBAAmB,uCAAuC,QAAU,8BAA8B,QAAU,gC,gBCA5mBD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,aAAe,+BAA+B,gBAAkB,kCAAkC,QAAU,0BAA0B,QAAU,0BAA0B,YAAc,8BAA8B,gBAAkB,kCAAkC,kBAAoB,oCAAoC,SAAW,2BAA2B,SAAW,2BAA2B,oBAAsB,sCAAsC,WAAa,6BAA6B,WAAa,6BAA6B,gBAAkB,kCAAkC,WAAa,6BAA6B,mBAAqB,qCAAqC,iBAAmB,mCAAmC,QAAU,0BAA0B,QAAU,4B,gBCAh1BD,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,OAAS,+BAA+B,KAAO,6BAA6B,UAAY,kCAAkC,aAAe,qCAAqC,eAAiB,uCAAuC,UAAY,oC,gBCA1TD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,cAAgB,iCAAiC,gBAAkB,mCAAmC,SAAW,4BAA4B,SAAW,4BAA4B,aAAe,gCAAgC,gBAAkB,mCAAmC,oBAAsB,uCAAuC,SAAW,4BAA4B,eAAiB,kCAAkC,eAAiB,kCAAkC,kBAAoB,qCAAqC,SAAW,4BAA4B,SAAW,4BAA4B,oBAAsB,uCAAuC,WAAa,8BAA8B,WAAa,gC,iBCAvxBD,EAAOC,QAAU,CAAC,YAAc,mCAAmC,oBAAsB,2CAA2C,OAAS,8BAA8B,cAAgB,qCAAqC,gBAAkB,uCAAuC,QAAU,+BAA+B,QAAU,+BAA+B,YAAc,mCAAmC,gBAAkB,uCAAuC,kBAAoB,yCAAyC,SAAW,gCAAgC,SAAW,gCAAgC,oBAAsB,2CAA2C,WAAa,kCAAkC,WAAa,oC,gBCAruBD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,cAAgB,mCAAmC,WAAa,gCAAgC,KAAO,0BAA0B,eAAiB,oCAAoC,WAAa,gCAAgC,aAAe,kCAAkC,gBAAkB,qCAAqC,WAAa,gCAAgC,qBAAuB,0CAA0C,eAAiB,sC,qBCAzgBD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,iBAAmB,uCAAuC,cAAgB,oCAAoC,MAAQ,4BAA4B,SAAW,+BAA+B,SAAW,+BAA+B,gBAAkB,sCAAsC,OAAS,6BAA6B,KAAO,2BAA2B,eAAiB,uC,iBCAzbD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,qBAAuB,qCAAqC,cAAgB,8BAA8B,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,qBAAqB,aAAe,+B,gBCAjQD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,OAAS,2BAA2B,KAAO,yBAAyB,UAAY,8BAA8B,aAAe,iCAAiC,eAAiB,mCAAmC,UAAY,8BAA8B,gBAAkB,oCAAoC,WAAa,+BAA+B,WAAa,iC,gBCAvaD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,OAAS,0BAA0B,KAAO,wBAAwB,UAAY,6BAA6B,aAAe,gCAAgC,eAAiB,kCAAkC,UAAY,6BAA6B,oBAAsB,uCAAuC,SAAW,4BAA4B,eAAiB,oC,gBCApaD,EAAOC,QAAU,CAAC,aAAe,oCAAoC,QAAU,+BAA+B,cAAgB,qCAAqC,KAAO,8B,gBCA1KD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,2BAA2B,UAAY,0BAA0B,aAAe,6BAA6B,WAAa,2BAA2B,cAAgB,8BAA8B,aAAe,6BAA6B,WAAa,6B,gBCA3TD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,OAAS,4BAA4B,UAAY,+BAA+B,gBAAkB,qCAAqC,KAAO,0BAA0B,UAAY,+BAA+B,eAAiB,oCAAoC,OAAS,4BAA4B,WAAa,gCAAgC,aAAe,oC,gBCAxaD,EAAOC,QAAU,CAAC,iBAAmB,6CAA6C,OAAS,mCAAmC,WAAa,uCAAuC,0BAA4B,sDAAsD,UAAY,sCAAsC,QAAU,oCAAoC,QAAU,oCAAoC,YAAc,0C,iBCAhaD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,OAAS,4BAA4B,MAAQ,2BAA2B,KAAO,0BAA0B,UAAY,+BAA+B,aAAe,kCAAkC,eAAiB,oCAAoC,UAAY,iC,gBCArUD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,OAAS,yBAAyB,KAAO,uBAAuB,UAAY,4BAA4B,aAAe,+BAA+B,eAAiB,iCAAiC,UAAY,8B,kBCA1QD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,OAAS,0BAA0B,qBAAuB,wCAAwC,aAAe,gCAAgC,WAAa,8BAA8B,uBAAyB,4C,kBCA9QD,EAAOC,QAAU,CAAC,aAAe,qCAAqC,cAAgB,sCAAsC,UAAY,kCAAkC,OAAS,+BAA+B,KAAO,+B,kBCAzND,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,4BAA4B,YAAc,2BAA2B,aAAe,8B,gBCAlJD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,YAAc,gCAAgC,YAAc,kC,gBCAxHD,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,uBAAyB,+CAA+C,wBAA0B,gDAAgD,wBAA0B,kD,qBCApPD,EAAOC,QAAU,CAAC,gBAAkB,0CAA0C,WAAa,qCAAqC,WAAa,uC,gBCA7ID,EAAOC,QAAU,CAAC,aAAe,oCAAoC,gBAAkB,uCAAuC,OAAS,gC,qBCAvID,EAAOC,QAAU,CAAC,sBAAwB,uDAAuD,oBAAsB,uD,iBCAvHD,EAAOC,QAAU,CAAC,sBAAwB,uDAAuD,oBAAsB,uD,+CCAvHD,EAAOC,QAAU,CAAC,OAAS,yB,kCCA3BD,EAAOC,QAAU,CAAC,aAAe,qCAAqC,eAAiB,yC,8OCCjFC,EAAgB,G,OCGhBA,EAAgB,CACpBC,MAAOC,aAAaC,QAAQ,SAC5BC,iBAAiB,EACjBC,SAAS,EACTC,KAAM,KACNC,MAAO,ICNHP,EAAgB,CACpBQ,iBAAkB,GAClBC,aAAc,GACdJ,SAAS,EACTE,MAAO,ICJHP,EAAgB,CACpBU,QAAS,GACTC,OAAQ,KACRN,SAAS,EACTE,MAAO,ICJHP,EAAgB,CACpBY,UAAW,GACXC,eAAgB,GAChBR,SAAS,EACTE,MAAO,ICJHP,EAAgB,CACpBc,SAAU,CAAEC,UAAU,GACtBC,YAAa,CAAED,UAAU,GACzBE,UAAW,CAAEF,UAAU,GACvBG,aAAc,CAAEH,UAAU,GAC1BI,YAAa,CACXC,YAAY,EACZC,WAAW,GAEbC,QAAS,CACPC,kBAAkB,EAClBH,YAAY,EACZC,WAAW,GAEbG,eAAe,EACfC,aAAa,GCfTzB,EAAgB,CACpB0B,KAAM,GACNC,WAAY,GACZC,WAAY,GACZvB,SAAS,EACTE,MAAO,ICLHP,EAAgB,CACpB6B,MAAO,GACPC,KAAM,KACNzB,SAAS,EACTE,MAAO,ICGIwB,EAAcC,0BAAgB,CACzCC,MRR0B,WAAkC,IAAjCC,EAAgC,uDAA1BlC,EAAemC,EAAW,uCAC3D,OAAOA,EAAOC,MACZ,ISNqB,YTOnB,MAAM,GAAN,mBACKF,GADL,CAEEC,EAAOE,UAEX,ISVwB,eTWtB,OAAOH,EAAMI,QAAO,SAAAL,GAAK,OAAIA,EAAMM,KAAOJ,EAAOE,WACnD,QACE,OAAOH,IQDXM,KPAyB,WAAkC,IAAjCN,EAAgC,uDAA1BlC,EAAemC,EAAW,uCAC1D,OAAOA,EAAOC,MACZ,ISbuB,cTcrB,OAAO,2BACFF,GADL,IAEE9B,iBAAiB,EACjBC,SAAS,EACTC,KAAM6B,EAAOE,UAEjB,IStBgC,uBTuBhC,ISpByB,gBTsBvB,OADAnC,aAAauC,QAAQ,QAASN,EAAOE,QAAQpC,OACtC,uCACFiC,GACAC,EAAOE,SAFZ,IAGEjC,iBAAiB,EACjBC,SAAS,EACTC,KAAK,2BACA4B,EAAM5B,MACN6B,EAAOE,WAGhB,IS/BsB,aTgCtB,IS/BuB,cTgCvB,ISpC6B,oBTqC7B,IShCsB,aTkCpB,OADAnC,aAAawC,WAAW,SACjB,2BACFR,GADL,IAEEjC,MAAO,KACPG,iBAAiB,EACjBC,SAAS,EACTC,KAAM,KACNC,MAAO4B,EAAOE,UAElB,QACE,OAAOH,IOnCXS,SNF6B,WAAkC,IAAjCT,EAAgC,uDAA1BlC,EAAemC,EAAW,uCAC9D,OAAQA,EAAOC,MACb,ISdkC,yBTehC,OAAO,2BACFF,GADL,IAEE1B,iBAAkB0B,EAAM1B,iBACxBH,SAAS,IAEb,ISnBiC,wBToB/B,OAAO,2BACF6B,GADL,IAEE1B,iBAAiB,GAAD,mBAAM0B,EAAM1B,kBAAZ,CAA8B2B,EAAOE,UACrDhC,SAAS,IAEb,ISxBoC,2BTyBlC,OAAO,2BACF6B,GADL,IAEE1B,iBAAkB,GAClBC,aAAc,GAEdJ,SAAS,IAEb,IS/B6B,oBTgC3B,OAAO,2BACF6B,GADL,IAEEzB,aAAc0B,EAAOE,QACrBhC,SAAS,IAEb,ISpC0B,iBTqCxB,OAAO,2BACF6B,GADL,IAEE7B,SAAS,EACTE,MAAO4B,EAAOE,UAElB,QACE,OAAOH,IMhCXxB,QLH4B,WAAkC,IAAjCwB,EAAgC,uDAA1BlC,EAAemC,EAAW,uCAC7D,OAAOA,EAAOC,MACZ,ISd2B,kBTezB,OAAO,2BACFF,GADL,IAEExB,QAASyB,EAAOE,QAChBhC,SAAS,IAEb,ISnBwB,eToBxB,IShByB,gBTiBvB,OAAO,2BACF6B,GADL,IAEEvB,OAAQwB,EAAOE,QACfhC,SAAS,IAEb,ISxByB,gBTyBvB,OAAO,2BACF6B,GADL,IAEExB,QAAQ,GAAD,mBAAMwB,EAAMxB,SAAZ,CAAqByB,EAAOE,UACnChC,SAAS,IAEb,IS7ByB,gBT8BvB,OAAO,2BACF6B,GADL,IAEExB,QAASwB,EAAMxB,QAAQ4B,QAAO,SAAA3B,GAAM,OAAIA,EAAO4B,KAAOJ,EAAOE,WAC7DhC,SAAS,IAEb,ISrCwB,eTsCtB,OAAO,2BACF6B,GADL,IAEEvB,OAAQ,KACRN,SAAS,IAEb,ISvCwB,eTwCtB,OAAO,2BACF6B,GADL,IAEE7B,SAAS,EACTE,MAAO4B,EAAOE,UAElB,QACE,OAAOH,IKpCXU,QJJ4B,WAAkC,IAAjCV,EAAgC,uDAA1BlC,EAAemC,EAAW,uCAC7D,OAAOA,EAAOC,MACZ,ISd6B,oBTe3B,OAAO,2BACFF,GADL,IAEEtB,UAAWuB,EAAOE,QAClBhC,SAAS,IAEb,ISnBuB,cToBvB,ISlB0B,iBTmBxB,OAAO,2BACF6B,GADL,IAEErB,eAAgBsB,EAAOE,QACvBhC,SAAS,IAEb,ISzB0B,iBT0BxB,OAAO,2BACF6B,GADL,IAEEtB,UAAU,GAAD,mBAAMsB,EAAMtB,WAAZ,CAAuBuB,EAAOE,UACvCxB,eAAgBsB,EAAOE,QACvBhC,SAAS,IAEb,IS9B0B,iBT+BxB,OAAO,2BACF6B,GADL,IAEEtB,UAAWsB,EAAMtB,UAAU0B,QAAO,SAAAM,GAAO,OAAIA,EAAQL,KAAOJ,EAAOE,WACnExB,eAAgB,GAChBR,SAAS,IAEb,ISpCyB,gBTqCvB,OAAO,2BACF6B,GADL,IAEE7B,SAAS,EACTE,MAAO4B,EAAOE,UAElB,QACE,OAAOH,II/BXW,UHM8B,WAAkC,IAAjCX,EAAgC,uDAA1BlC,EAAemC,EAAW,uCAC/D,OAAQA,EAAOC,MACb,ISzB4B,mBT0B1B,OAAO,2BACFF,GADL,IAEEpB,SAAU,CAAEC,UAAU,GACtBC,YAAa,CAAED,UAAU,GACzBE,UAAW,CAAEF,UAAU,GACvBG,aAAc,CAAEH,UAAU,KAE9B,IShC+B,sBTiC7B,OAAO,2BACFmB,GADL,IAEEpB,SAAU,CAAEC,UAAU,GACtBC,YAAa,CAAED,UAAU,GACzBE,UAAW,CAAEF,UAAU,GACvBG,aAAc,CAAEH,UAAU,KAE9B,ISvC6B,oBTwC3B,OAAO,2BACFmB,GADL,IAEEpB,SAAU,CAAEC,UAAU,GACtBC,YAAa,CAAED,UAAU,GACzBE,UAAW,CAAEF,UAAU,GACvBG,aAAc,CAAEH,UAAU,KAE9B,IS9CgC,uBT+C9B,OAAO,2BACFmB,GADL,IAEEpB,SAAU,CAAEC,UAAU,GACtBC,YAAa,CAAED,UAAU,GACzBE,UAAW,CAAEF,UAAU,GACvBG,aAAc,CAAEH,UAAU,KAE9B,ISpDiC,wBTqD/B,OAAO,2BACFmB,GADL,IAEEf,YAAa,CACXC,YAAY,EACZC,WAAW,GAEbC,QAAS,CACPC,kBAAkB,EAClBH,YAAY,EACZC,WAAW,KAGjB,IShE+B,sBTiE7B,OAAO,2BACFa,GADL,IAEEf,YAAa,CACXC,YAAY,EACZC,WAAW,GAEbC,QAAS,CACPC,kBAAkB,EAClBH,YAAY,EACZC,WAAW,KAGjB,IS5E+B,sBT6E/B,ISxE2B,kBTyEzB,OAAO,2BACFa,GADL,IAEEf,YAAa,CACXC,YAAY,EACZC,WAAW,GAEbC,QAAS,CACPC,kBAAkB,EAClBH,YAAY,EACZC,WAAW,KAGjB,ISxF2B,kBTyFzB,OAAO,2BACFa,GADL,IAEEf,YAAa,CACXC,YAAY,EACZC,WAAW,GAEbC,QAAS,CACPC,kBAAkB,EAClBH,YAAY,EACZC,WAAW,KAGjB,ISpG6B,oBTqG3B,OAAO,2BACFa,GADL,IAEEf,YAAa,CACXC,YAAY,EACZC,WAAW,GAEbC,QAAS,CACPC,kBAAkB,EAClBH,YAAY,EACZC,WAAW,KAGjB,IShH2B,kBTiHzB,OAAO,2BACFa,GADL,IAEEf,YAAa,CACXC,YAAY,EACZC,WAAW,GAEbC,QAAS,CACPC,kBAAkB,EAClBH,YAAY,EACZC,WAAW,KAGjB,IS1H8B,qBT2H5B,OAAO,2BACFa,GADL,IAEEV,eAAgBU,EAAMV,gBAE1B,IS9H6B,oBT+H3B,OAAO,2BACFU,GADL,IAEEV,eAAe,IAEnB,ISjI4B,mBTkI1B,OAAO,2BACFU,GADL,IAEET,aAAcS,EAAMT,cAExB,ISrI2B,kBTsIzB,OAAO,2BACFS,GADL,IAEET,aAAa,IAEjB,QACE,OAAOS,IG3IXY,IFLwB,WAAkC,IAAjCZ,EAAgC,uDAA1BlC,EAAemC,EAAW,uCACzD,OAAQA,EAAOC,MACb,ISfwB,eTgBtB,OAAO,2BACFF,GADL,IAEER,KAAMS,EAAOE,QACbhC,SAAS,IAEb,ISpB2B,kBTqBzB,OAAO,2BACF6B,GADL,IAEEP,WAAYQ,EAAOE,QACnBhC,SAAS,IAEb,ISzBmB,UT0BnB,ISvBsB,aTwBpB,OAAO,2BACF6B,GADL,IAEEN,WAAYO,EAAOE,QACnBhC,SAAS,IAEb,IS/BsB,aTgCpB,OAAO,2BACF6B,GADL,IAEER,KAAK,GAAD,mBAAMQ,EAAMR,MAAZ,CAAkBS,EAAOE,UAC7BV,WAAW,CAAEQ,EAAOE,SAAV,mBAAsBH,EAAMP,aACtCtB,SAAS,IAEb,ISrCsB,aTsCpB,OAAO,2BACF6B,GADL,IAEER,KAAMQ,EAAMR,KAAKY,QAAO,SAAAQ,GAAG,OAAIA,EAAIP,KAAOJ,EAAOE,WACjDV,WAAYO,EAAMP,WAAWW,QAAO,SAAAS,GAAS,OAAIA,EAAUR,KAAOJ,EAAOE,WACzEhC,SAAS,IAEb,IS1CqB,YT2CnB,OAAO,2BACF6B,GADL,IAEE7B,SAAS,EACTE,MAAO4B,EAAOE,UAElB,QACE,OAAOH,IEpCXJ,KDPyB,WAAkC,IAAjCI,EAAgC,uDAA1BlC,EAAemC,EAAW,uCAC1D,OAAQA,EAAOC,MACb,ISdyB,gBTevB,OAAO,2BACFF,GADL,IAEEL,MAAOM,EAAOE,QACdhC,SAAS,IAEb,ISnBsB,aToBtB,ISjBuB,cTkBrB,OAAO,2BACF6B,GADL,IAEEJ,KAAMK,EAAOE,QACbhC,SAAS,IAEb,ISzBuB,cT0BrB,MAAO,CACLwB,MAAM,GAAD,mBAAMK,EAAML,OAAZ,CAAmBM,EAAOE,UAC/BhC,SAAS,GAEb,IS7BuB,cT8BrB,OAAO,2BACF6B,GADL,IAEEL,MAAOK,EAAML,MAAMS,QAAO,SAAAR,GAAI,OAAIA,EAAKS,KAAOJ,EAAOE,aAEzD,IShCsB,aTiCpB,OAAO,2BACFH,GADL,IAEE3B,MAAO4B,EAAOE,QACdhC,SAAS,IAEb,QACE,OAAO6B,MUrCAc,EAAc,CAACC,IAAOC,KAEtBC,EAAQC,sBAAYrB,EAAasB,8BAAoBC,kBAAe,WAAf,EAAmBN,K,wDCLxEO,EAAW,SAACC,EAAKC,GAAN,IAAiBC,EAAjB,uDAAyB,IAAzB,OAAkC,SAACC,GACzD,IAAMpB,EAAKqB,MAEXD,EAAS,CACPvB,KTRqB,YSSrBC,QAAS,CACPmB,MACAC,YACAlB,QAKJsB,YAAW,kBAAMF,EAAS,CACxBvB,KTjBwB,eSkBxBC,QAASE,MACPmB,KCbAI,EAAU,wBAGVC,EAAgB,SAACC,EAAKL,EAAUH,GACpC,IAAMS,EAASD,EAAIE,SAASC,WAC5BF,GAAUN,EAASJ,EAASC,GAAOS,EAAQ,SAAU,MACrDN,EAAS,CAAEvB,KTZoB,oBSYKC,QAAS4B,KAkElCG,EAAY,SAACC,EAAOC,GAAR,8CAAqB,WAAOX,GAAP,mBAAAY,EAAA,6DACtCC,EAAS,CACbC,QAAS,CACP,eAAgB,qBAIdC,EAAOC,KAAKC,UAAU,CAAEP,QAAOC,aAPO,kBAUxBO,IAAMC,KAAN,UAAchB,EAAd,oBAAyCY,EAAMF,GAVvB,OAUpCO,EAVoC,OAW1CpB,EAAS,CACPvB,KTxFuB,gBSyFvBC,QAAS0C,EAAIC,OAEfrB,EAlEoB,uCAAM,WAAOA,GAAP,iBAAAY,EAAA,6DACxBrE,aAAaD,SAXUA,EAYZC,aAAaD,OAV1B4E,IAAMI,SAASR,QAAQS,OAAvB,cAAiDjF,SAE1C4E,IAAMI,SAASR,QAAQS,OAAvB,eAWHV,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BvE,aAAaD,SARf,kBAaR4E,IAAMM,IAAN,UAAarB,EAAb,iBAAqCU,GAb7B,OAapBO,EAboB,OAc1BpB,EAAS,CACPvB,KTzCqB,cS0CrBC,QAAS0C,EAAIC,OAhBW,gDAmB1BrB,EAAS,CACPvB,KT1CoB,eSsBI,kCAVF,IAACnC,IAUC,oBAAN,uDAmEpB0D,EAASJ,EAAS,mBAAoB,UAAW,MAhBP,kDAkB1CQ,EAAc,EAAD,GAAMJ,EAAU,sBAlBa,0DAArB,uD,iBCHVyB,eATS,SAAClD,GAAD,MAAY,CAClC9B,gBAAiB8B,EAAMM,KAAKpC,gBAC5BE,KAAM4B,EAAMM,KAAKlC,SAGQ,SAACqD,GAAD,MAAe,CACxC0B,WAAY,kBAAM1B,GD6BY,SAACA,GAC/BA,EAAS,CACPvB,KTnGuB,uBUuEZgD,EAlEA,SAAC,GAA2C,IAAzChF,EAAwC,EAAxCA,gBAAuBiF,GAAiB,EAAvB/E,KAAuB,EAAjB+E,YACjCC,EAAUC,cAEVC,EAAQ,uCAAG,sBAAAjB,EAAA,sEACTc,IADS,OAEfC,EAAQG,KAAK,KAFE,2CAAH,qDAKRC,EACJ,wBAAIC,UAAWC,IAAMC,OACnB,4BACE,kBAAC,IAAD,CAASC,GAAG,IAAIH,UAAWC,IAAMG,MAAjC,aAEF,4BACE,kBAAC,IAAD,CAASD,GAAG,UAAUH,UAAWC,IAAMG,MAAvC,YAEF,4BACE,kBAAC,IAAD,CAASD,GAAG,UAAUH,UAAWC,IAAMG,MAAvC,aAKAC,EACJ,wBAAIL,UAAWC,IAAMC,OACnB,4BACE,kBAAC,IAAD,CAASC,GAAG,aAAaH,UAAWC,IAAMG,MAA1C,cAEF,4BACE,0BAAMJ,UAAWC,IAAMK,aAAcC,QAASV,GAA9C,YAKN,OACE,yBAAKG,UAAWC,IAAMO,QAEpB,yBAAKR,UAAWC,IAAMQ,sBACpB,yBAAKT,UAAWC,IAAMS,eACpB,kBAAC,IAAD,CAASP,GAAG,IAAIH,UAAWC,IAAMU,MAAjC,gBAGAlG,EAAkB4F,EAAYN,O,uBC1ClC3B,EAAgB,SAACC,EAAKL,EAAUH,GACpC,IAAMS,EAASD,EAAIE,SAASC,WAC5BF,GAAUN,EAASJ,EAASC,GAAOS,EAAQ,SAAU,MACrDN,EAAS,CAAEvB,KTNe,eSMKC,QAAS4B,KAgC7BsC,EAAa,SAAChE,GAAD,8CAAQ,WAAOoB,GAAP,iBAAAY,EAAA,sEAExBC,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SAJb,SAQZ4E,IAAMM,IAAN,UA9CN,wBA8CM,+BAA2C5C,EAA3C,KAAkDiC,GARtC,OAQxBO,EARwB,OAU9BpB,EAAS,CACPvB,KTtDsB,eSuDtBC,QAAS0C,EAAIC,OAZe,gDAe9BjB,EAAc,EAAD,GAAMJ,GAfW,yDAAR,uDCtCpBI,EAAgB,SAACC,EAAKL,EAAUH,GACpC,IAAMS,EAASD,EAAIE,SAASC,WAC5BF,GAAUN,EAASJ,EAASC,GAAOS,EAAQ,SAAU,MACrDN,EAAS,CAAEvB,KXLiB,iBWKKC,QAAS4B,K,iBC0G7BmB,eAfS,SAAClD,GAAD,MAAY,CAClC9B,gBAAiB8B,EAAMM,KAAKpC,oBAGH,SAACuD,GAAD,MAAe,CACxC6C,eAAgB,kBAAM7C,GCpGY,SAACA,GACnCA,EAAS,CACPvB,KVP4B,yBS0G9BqE,kBAAmB,kBAAM9C,GC9FY,SAACA,GACtCA,EAAS,CACPvB,KVb+B,4BS0GjCsE,gBAAiB,kBAAM/C,GCxFY,SAACA,GACpCA,EAAS,CACPvB,KVnB6B,0BS0G/BuE,mBAAoB,kBAAMhD,GClFY,SAACA,GACvCA,EAAS,CACPvB,KVzBgC,6BS0GlCwE,cAAe,kBAAMjD,GCNY,SAACA,GAClCA,EAAS,CACPvB,KVvF2B,wBS4F7ByE,YAAa,kBAAMlD,GF0BY,SAACA,GAChCA,EAAS,CAAEvB,KTvIe,qBW6G1B0E,sBAAuB,kBAAMnD,GD1EY,SAACA,GAC1CA,EAAS,CACPvB,KXrCoC,iCY8GtCiD,WAAY,kBAAM1B,GJVY,SAACA,GAC/BA,EAAS,CACPvB,KTnGuB,uBa8GZgD,EAjGM,SAAC,GAAgJ,IAA9IhF,EAA6I,EAA7IA,gBAAiBqG,EAA4H,EAA5HA,kBAAmBC,EAAyG,EAAzGA,gBAAiBC,EAAwF,EAAxFA,mBAAoBC,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,sBAAuBzB,EAAiB,EAAjBA,WAC5IC,EAAUC,cAwBVC,EAAQ,uCAAG,sBAAAjB,EAAA,sEACTc,IADS,OAEfC,EAAQG,KAAK,KAFE,2CAAH,qDAMd,OACGrF,EAGG,yBAAKuF,UAAWC,IAAMmB,cAEpB,yBAAKpB,UAAWC,IAAMoB,SAGpB,yBAAKrB,UAAWC,IAAMqB,cAAef,QArCxB,WACrBO,IACAI,IACAD,IACAE,MAkCU,kBAAC,IAAD,CAAuBnB,UAAWC,IAAMsB,KAAMC,aAAW,0BAI3D,yBAAKxB,UAAWC,IAAMqB,cAAef,QAlCvB,WACtBS,IACAE,IACAD,IACAE,MA+BU,kBAAC,IAAD,CAAkBnB,UAAWC,IAAMsB,KAAMC,aAAW,2BAItD,yBAAKxB,UAAWC,IAAMqB,cAAef,QAhC1B,WACnBQ,IACAG,IACAD,IACAE,MA6BU,kBAAC,IAAD,CAASnB,UAAWC,IAAMsB,KAAMC,aAAW,wBAI7C,yBAAKxB,UAAWC,IAAMqB,eACpB,kBAAC,IAAD,CACEtB,UAAWC,IAAMsB,KACjBC,aAAW,SACXjB,QAASV,OA1BjB,iC,gBE5BOJ,eALS,SAAClD,GAAD,MAAY,CAClC9B,gBAAiB8B,EAAMM,KAAKpC,gBAC5BC,QAAS6B,EAAMM,KAAKnC,WAGP+E,EAlBM,SAAC,GAAuE,IAA1DgC,EAAyD,EAApEC,UAAsBjH,EAA8C,EAA9CA,gBAA6BkH,GAAiB,EAA7BjH,QAA6B,0DAC1F,OACE,kBAAC,IAAD,iBACMiH,EADN,CAEEC,OAAQ,SAAAC,GAAK,OAAKpH,EAEb,kBAACgH,EAAcI,GADf,kBAAC,IAAD,CAAU1B,GAAG,a,kBC2BTV,gBAJS,SAAClD,GAAD,MAAY,CAClCD,MAAOC,EAAMD,SAGAmD,EA9BD,SAAC,GAAe,IAAbnD,EAAY,EAAZA,MACf,OACa,OAAVA,GAAkBA,EAAMwF,OAAS,GAElCxF,EAAMyF,KAAI,SAAAC,GAAS,OACjB,yBACEC,IAAKD,EAAUpF,GACfoD,UAAS,sBACmB,YAAxBgC,EAAUlE,UAA0BmC,KAAMiC,aAAe,GADpD,uBAEmB,YAAxBF,EAAUlE,UAA0BmC,KAAMkC,aAAe,GAFpD,uBAGmB,WAAxBH,EAAUlE,UAAyBmC,KAAMmC,YAAc,GAHlD,uBAILnC,KAAM3D,MAJD,eAOP0F,EAAUnE,W,oBCYLwE,GA3BK,WAClB,OACE,6BAASrC,UAAWC,KAAMqC,aAExB,yBAAKtC,UAAWC,KAAMsC,kBACpB,yBAAKvC,UAAWC,KAAMuC,eACpB,wBAAIxC,UAAWC,KAAMwC,OAArB,gBACA,wBAAIzC,UAAWC,KAAMyC,UAArB,iBACA,wBAAI1C,UAAWC,KAAM0C,UAArB,+BAEA,yBAAK3C,UAAWC,KAAM2C,iBACpB,kBAAC,IAAD,CAASzC,GAAG,IAAIH,UAAWC,KAAMG,MAC/B,4BAAQJ,UAAWC,KAAM4C,QAAzB,aAEF,kBAAC,IAAD,CAAS1C,GAAG,UAAUH,UAAWC,KAAMG,MACrC,4BAAQJ,UAAWC,KAAM4C,QAAzB,eAKN,yBAAK7C,UAAWC,KAAM6C,oB,oBCmCfC,GAtDM,WACnB,OACE,6BAAS/C,UAAWC,KAAM+C,cAGxB,yBAAKhD,UAAWC,KAAMgD,sBACpB,yBAAKjD,UAAWC,KAAMiD,iBACpB,wBAAIlD,UAAWC,KAAMkD,QAArB,mDACA,uBAAGnD,UAAWC,KAAMmD,WAApB,oEAOJ,yBAAKpD,UAAWC,KAAMoD,wBACpB,yBAAKrD,UAAWC,KAAMqD,mBAEpB,yBAAKtD,UAAWC,KAAMsD,SACpB,yBAAKvD,UAAWC,KAAMqB,eACpB,kBAAC,IAAD,CAAuBtB,UAAWC,KAAMsB,QAE1C,wBAAIvB,UAAWC,KAAMuD,eAArB,eACA,uBAAGxD,UAAWC,KAAMwD,aAApB,+HAKF,yBAAKzD,UAAWC,KAAMsD,SACpB,yBAAKvD,UAAWC,KAAMqB,eACpB,kBAAC,IAAD,CAAkBtB,UAAWC,KAAMsB,QAErC,wBAAIvB,UAAWC,KAAMuD,eAArB,wBACA,uBAAGxD,UAAWC,KAAMwD,aAApB,sFAKF,yBAAKzD,UAAWC,KAAMsD,SACpB,yBAAKvD,UAAWC,KAAMqB,eACpB,kBAAC,IAAD,CAAStB,UAAWC,KAAMsB,QAE5B,wBAAIvB,UAAWC,KAAMuD,eAArB,gBACA,uBAAGxD,UAAWC,KAAMwD,aAApB,8E,oBC/BGC,GAXE,WACf,OACE,yBAAK1D,UAAWC,KAAM0D,SAAUC,YAAU,sBAExC,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,sCCqBSC,GA5BA,SAAC,GAA6J,IAA3JC,EAA0J,EAA1JA,YAAaC,EAA6I,EAA7IA,WAAYC,EAAiI,EAAjIA,WAAYC,EAAqH,EAArHA,UAAWC,EAA0G,EAA1GA,aAAcC,EAA4F,EAA5FA,WAAYC,EAAgF,EAAhFA,cAAeC,EAAiE,EAAjEA,aAAcC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,SAAUhE,EAA6B,EAA7BA,QAAYoB,EAAiB,kKAC1K,OACE,0CACE3B,UAAS,oBACL8D,EAAc7D,KAAM6D,YAAc,GAD7B,qBAELC,EAAa9D,KAAM8D,WAAa,GAF3B,qBAGLC,EAAa/D,KAAM+D,WAAa,GAH3B,qBAILC,EAAYhE,KAAMgE,UAAY,GAJzB,qBAKLC,EAAejE,KAAMiE,aAAe,GAL/B,qBAMLC,EAAalE,KAAMkE,WAAa,GAN3B,qBAOLC,EAAgBnE,KAAMmE,cAAgB,GAPjC,qBAQLC,EAAepE,KAAMoE,aAAe,GAR/B,qBASLC,EAAarE,KAAMqE,WAAa,GAT3B,qBAULrE,KAAM4C,OAVD,YAYTtC,QAASA,GACLoB,GAEH4C,I,oBCEQC,GApBG,SAAC,GAAwE,IAAtEC,EAAqE,EAArEA,YAAaC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,SAAajD,EAAiB,sEACxF,OACE,yCACE3B,UAAS,oBACLyE,EAAcxE,KAAMwE,YAAc,GAD7B,qBAELC,EAAczE,KAAMyE,YAAc,GAF7B,qBAGLC,EAAc1E,KAAM0E,YAAc,GAH7B,qBAIL1E,KAAM4E,UAJD,YAMTD,SAAUA,GACNjD,K,oBCwFKlC,gBAPS,SAAClD,GAAD,MAAY,CAClC9B,gBAAiB8B,EAAMM,KAAKpC,oBAEH,SAACuD,GAAD,MAAe,CACxCS,UAAW,SAACC,EAAOC,GAAR,OAAqBX,EAASS,EAAUC,EAAOC,QAG7Cc,EA5FI,SAAC,GAAmC,EAAjChF,gBAAkC,IAAjBgE,EAAgB,EAAhBA,UAC/BkB,EAAUC,cADqC,EAEnBkF,mBAAS,CACzCpG,MAAO,GACPC,SAAU,KAJyC,oBAE7CoG,EAF6C,KAEnCC,EAFmC,KAO/CJ,EAAW,SAACK,GAChBD,EAAY,2BACPD,GADM,mBAERE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAIxBC,EAAQ,uCAAG,WAAOJ,GAAP,SAAArG,EAAA,6DACfqG,EAAEK,iBADa,SAET7G,EAAUsG,EAASrG,MAAOqG,EAASpG,UAF1B,OAGfqG,EAAY,CAAEtG,MAAO,GAAIC,SAAU,KACnCgB,EAAQG,KAAK,cAJE,2CAAH,sDAOd,OACE,yBAAKE,UAAWC,KAAM8D,YAGpB,yBAAK/D,UAAWC,KAAMsF,eACpB,wBAAIvF,UAAWC,KAAMuF,YAArB,2BACA,0BAAMxF,UAAWC,KAAMwF,KAAMJ,SAAUA,GACrC,yBAAKrF,UAAWC,KAAMyF,gBACpB,2BAAO1F,UAAWC,KAAM0F,YAAxB,gBAEE,0BAAM3F,UAAWC,KAAM2F,cAAvB,eAEF,kBAAC,GAAD,CACEnJ,KAAK,QACL0I,KAAK,QACLU,YAAY,QACZC,aAAa,MACbV,MAAOL,EAASrG,MAChBkG,SAAUA,EACVmB,UAAQ,EACRrB,aAAW,KAGf,yBAAK1E,UAAWC,KAAMyF,gBACpB,2BAAO1F,UAAWC,KAAM0F,YAAxB,WAEE,0BAAM3F,UAAWC,KAAM2F,cAAvB,eAEF,kBAAC,GAAD,CACEnJ,KAAK,WACL0I,KAAK,WACLU,YAAY,WACZC,aAAa,MACbV,MAAOL,EAASpG,SAChBiG,SAAUA,EACVmB,UAAQ,EACRrB,aAAW,KAIf,kBAAC,GAAD,CAAQjI,KAAK,SAASuH,YAAU,GAAhC,WAEA,uBAAGhE,UAAWC,KAAM+F,iBAApB,kBAEE,0BACEhG,UAAWC,KAAMgG,WACjB1F,QAAS,kBAAMZ,EAAQG,KAAK,aAF9B,cAWN,yBAAKE,UAAWC,KAAMiG,sBACpB,yBAAKlG,UAAWC,KAAM6C,sB,oBCsCfrD,eAAQ,MAJI,SAACzB,GAAD,MAAe,CACxCmI,aAAc,gBAAEzH,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAUwG,EAAnB,EAAmBA,KAAnB,OAA6BnH,EdrEjB,SAAC,GAAD,IAAGU,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUwG,EAApB,EAAoBA,KAApB,8CAA+B,WAAOnH,GAAP,mBAAAY,EAAA,sEAEjDC,EAAS,CACbC,QAAS,CACP,eAAgB,qBAIdC,EAAOC,KAAKC,UAAU,CAAEP,QAAOC,WAAUwG,SARQ,SAUrCjG,IAAMC,KAAN,UAAchB,EAAd,qBAA0CY,EAAMF,GAVX,OAUjDO,EAViD,OAYvDpB,EAAS,CACPvB,KTpE8B,uBSqE9BC,QAAS0C,EAAIC,OAEfrB,EAASS,EAAUC,EAAOC,IAC1BX,EAASJ,EAAS,0BAA2B,UAAW,MAjBD,kDAmBvDQ,EAAc,EAAD,GAAMJ,EAAU,6BAnB0B,0DAA/B,sDcqE0BmI,CAAa,CAACzH,QAAOC,WAAUwG,cAGtE1F,EAnHI,SAAC,GAAsB,IAApB0G,EAAmB,EAAnBA,aAAmB,EACLrB,mBAAS,CACzCpG,MAAO,GACPC,SAAU,GACVwG,KAAM,KAJ+B,oBAC/BJ,EAD+B,KACrBC,EADqB,KAO/BtG,EAA0BqG,EAA1BrG,MAAOC,EAAmBoG,EAAnBpG,SAAUwG,EAASJ,EAATI,KAEnBxF,EAAUC,cAEVgF,EAAW,SAACK,GAChBD,EAAY,2BACPD,GADM,mBAERE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAW9B,OACE,yBAAKpF,UAAWC,KAAM+D,YAGpB,yBAAKhE,UAAWC,KAAMmG,sBACpB,yBAAKpG,UAAWC,KAAM6C,kBAIxB,yBAAK9C,UAAWC,KAAMsF,eACpB,wBAAIvF,UAAWC,KAAMuF,YAArB,4BACA,0BAAMxF,UAAWC,KAAMwF,KAAMJ,SAlBlB,SAACJ,GAChBA,EAAEK,iBACFa,EAAa,CAAEzH,QAAOC,WAAUwG,SAChCH,EAAY,CAACtG,MAAO,GAAIC,SAAU,GAAIwG,KAAM,KAC5CxF,EAAQG,KAAK,gBAeP,yBAAKE,UAAWC,KAAMyF,gBACpB,2BAAO1F,UAAWC,KAAM0F,YAAxB,WAEE,0BAAM3F,UAAWC,KAAM2F,cAAvB,eAEF,kBAAC,GAAD,CACEnJ,KAAK,OACL0I,KAAK,OACLU,YAAY,WACZC,aAAa,MACbV,MAAOD,EACPP,SAAUA,EACVmB,UAAQ,EACRrB,aAAW,KAGf,yBAAK1E,UAAWC,KAAMyF,gBACpB,2BAAO1F,UAAWC,KAAM0F,YAAxB,gBAEE,0BAAM3F,UAAWC,KAAM2F,cAAvB,eAEF,kBAAC,GAAD,CACEnJ,KAAK,QACL0I,KAAK,QACLU,YAAY,QACZC,aAAa,MACbV,MAAO1G,EACPkG,SAAUA,EACVmB,UAAQ,EACRrB,aAAW,KAGf,yBAAK1E,UAAWC,KAAMyF,gBACpB,2BAAO1F,UAAWC,KAAM0F,YAAxB,WAEE,0BAAM3F,UAAWC,KAAM2F,cAAvB,oBAEF,kBAAC,GAAD,CACEnJ,KAAK,WACL0I,KAAK,WACLU,YAAY,WACZC,aAAa,MACbV,MAAOzG,EACPiG,SAAUA,EACVmB,UAAQ,EACRrB,aAAW,KAIf,yBAAK1E,UAAWC,KAAMoG,6BACpB,uBAAGrG,UAAWC,KAAMqG,wBAApB,wFAKF,kBAAC,GAAD,CAAQ7J,KAAK,SAASuH,YAAU,GAAhC,kBAEA,uBAAGhE,UAAWC,KAAM+F,iBAApB,kBAEE,0BACEhG,UAAWC,KAAMgG,WACjB1F,QAAS,kBAAMZ,EAAQG,KAAK,aAF9B,kB,oBC/EGyG,GArBM,WACnB,IAAM5G,EAAUC,cAEhB,OACE,yBAAKI,UAAWC,KAAMuG,cAEpB,yBAAKxG,UAAWC,KAAMuC,eACpB,yBAAKxC,UAAWC,KAAMwG,WACpB,wBAAIzG,UAAWC,KAAMkD,QAArB,kBACA,uBAAGnD,UAAWC,KAAMyG,MAApB,qGAKF,kBAAC,GAAD,CAAQnG,QAAS,kBAAMZ,EAAQG,KAAK,MAAMwE,YAAU,GAApD,gB,oBC0GO7E,gBAlBS,SAAClD,GAAD,MAAY,CAClCpB,SAAUoB,EAAMW,UAAU/B,SAC1BE,YAAakB,EAAMW,UAAU7B,YAC7BC,UAAWiB,EAAMW,UAAU5B,UAC3BC,aAAcgB,EAAMW,UAAU3B,iBAGL,SAACyC,GAAD,MAAe,CACxC6C,eAAgB,kBAAM7C,GXjHY,SAACA,GACnCA,EAAS,CACPvB,KVP4B,yBqBuH9BqE,kBAAmB,kBAAM9C,GX3GY,SAACA,GACtCA,EAAS,CACPvB,KVb+B,4BqBuHjCsE,gBAAiB,kBAAM/C,GXrGY,SAACA,GACpCA,EAAS,CACPvB,KVnB6B,0BqBuH/BuE,mBAAoB,kBAAMhD,GX/FY,SAACA,GACvCA,EAAS,CACPvB,KVzBgC,6BqBuHlCwE,cAAe,kBAAMjD,GXnBY,SAACA,GAClCA,EAAS,CACPvB,KVvF2B,wBqByG7ByE,YAAa,kBAAMlD,GdaY,SAACA,GAChCA,EAAS,CAAEvB,KTvIe,qBuB0H1B0E,sBAAuB,kBAAMnD,GbvFY,SAACA,GAC1CA,EAAS,CACPvB,KXrCoC,iCwB2HtCiD,WAAY,kBAAM1B,GhBvBY,SAACA,GAC/BA,EAAS,CACPvB,KTnGuB,uByB2HZgD,EA9Gc,SAAC,GAA+L,EAA7LtE,SAA8L,IAApLE,EAAmL,EAAnLA,YAAaC,EAAsK,EAAtKA,UAAWC,EAA2J,EAA3JA,aAA8BuF,GAA6H,EAA7ID,eAA6I,EAA7HC,mBAAmBC,EAA0G,EAA1GA,gBAAiBC,EAAyF,EAAzFA,mBAAoBC,EAAqE,EAArEA,cAAeC,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,sBAAuBzB,EAAkB,EAAlBA,WACnMC,EAAUC,cA8BVC,EAAQ,uCAAG,sBAAAjB,EAAA,sEACTc,IADS,OAEfC,EAAQG,KAAK,KAFE,2CAAH,qDAKd,OACE,yBAAKE,UAAWC,KAAM0G,sBAEpB,yBAAK3G,UAAWC,KAAM2G,0BACpB,wBAAI5G,UAAWC,KAAM4G,iBAArB,QAEA,yBAAK7G,UAAWC,KAAM6G,gBACpB,yBAAK9G,UAAWC,KAAM8G,eAEpB,yBAAK/G,UAAWC,KAAMqB,cAAe1E,GAAIvB,EAAYD,SAAW6E,KAAM+G,kBAAoB,GAAIzG,QAnCjF,WACrBO,IACAI,IACAD,IACAE,MAgCU,kBAAC,IAAD,CAAuBnB,UAAWC,KAAMsB,KAAM3E,GAAIvB,EAAYD,SAAW6E,KAAMgH,aAAe,KAC9F,0BAAMjH,UAAWC,KAAMiH,SAAUtK,GAAIvB,EAAYD,SAAW6E,KAAMkH,aAAe,IAAjF,YAGF,yBAAKnH,UAAWC,KAAMqB,cAAe1E,GAAIrB,EAAaH,SAAW6E,KAAM+G,kBAAoB,GAAIzG,QA1BjF,WACtBS,IACAE,IACAD,IACAE,MAuBU,kBAAC,IAAD,CAAkBnB,UAAWC,KAAMsB,KAAM3E,GAAIrB,EAAaH,SAAW6E,KAAMgH,aAAe,KAC1F,0BAAMjH,UAAWC,KAAMiH,SAAUtK,GAAIrB,EAAaH,SAAW6E,KAAMkH,aAAe,IAAlF,aAGF,yBAAKnH,UAAWC,KAAMqB,cAAe1E,GAAItB,EAAUF,SAAW6E,KAAM+G,kBAAoB,GAAIzG,QAtCjF,WACnBQ,IACAG,IACAD,IACAE,MAmCU,kBAAC,IAAD,CAASnB,UAAWC,KAAMsB,KAAM3E,GAAItB,EAAUF,SAAW6E,KAAMgH,aAAe,KAC9E,0BAAMjH,UAAWC,KAAMiH,SAAUtK,GAAItB,EAAUF,SAAW6E,KAAMkH,aAAe,IAA/E,WAKJ,yBAAKnH,UAAWC,KAAMmH,iBACpB,yBAAKpH,UAAWC,KAAMoH,oBAAqB9G,QAASV,GAClD,kBAAC,IAAD,CAAkBG,UAAWC,KAAMsB,OACnC,0BAAMvB,UAAWC,KAAMiH,SAAUtK,GAAItB,EAAUF,SAAW6E,KAAMkH,aAAe,IAA/E,kB,oBCuEC1H,eAAQ,MAPI,SAACzB,GAAD,MAAe,CACxC4C,WAAY,SAAChE,GAAD,OAAQoB,EAAS4C,EAAWhE,KACxCsE,YAAa,kBAAMlD,GfbY,SAACA,GAChCA,EAAS,CAAEvB,KTvIe,qBwBoJ1B6K,kBAAmB,kBAAMtJ,GZvGY,SAACA,GACtCA,EAAS,CACPvB,KV1C+B,4BsBgJjC8K,gBAAiB,kBAAMvJ,GZ9DY,SAACA,GACpCA,EAAS,CACPvB,KV5E6B,6BsB2IlBgD,EA9II,SAAC,GAA8E,IAA5E1E,EAA2E,EAA3EA,QAAS6F,EAAkE,EAAlEA,WAAYM,EAAsD,EAAtDA,YAAaoG,EAAyC,EAAzCA,kBAAmBC,EAAsB,EAAtBA,gBAGzEC,qBAAU,cAEP,CAAC5G,IAGJ,IAR+F,EAejEkE,mBAAS,IAfwD,oBAevF2C,EAfuF,KAe/EC,EAf+E,KAgB/F3M,EAAUA,EAAQ4B,QAAO,SAAA3B,GACvB,OAAQA,EAAO2M,WAAWC,cAAcC,SAASJ,EAAOG,gBAAkB5M,EAAO8M,UAAUF,cAAcC,SAASJ,EAAOG,kBA8C3H,IA1CA,IAYMG,EAAmB,CACvB,CAAEC,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,IAC9B,CAAED,OAAQ,IAAKC,cAAe,KAIvBC,EAAI,EAAGA,EAAInN,EAAQ+G,OAAQoG,IAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAiBjG,OAAQqG,IACvCpN,EAAQmN,GAAGJ,UAAU,KAAOC,EAAiBI,GAAGH,QAClDD,EAAiBI,GAAGF,cAAcnI,KAAK/E,EAAQmN,IAMrD,IAAME,EAA2BL,EAAiBhG,KAAI,SAAAoD,GAAI,OACxDA,EAAK8C,cAAcnG,OAAS,GAExB,yBAAKG,IAAKhE,MAAQ+B,UAAWC,KAAMoI,gBACjC,wBAAIrI,UAAWC,KAAM+H,QAAS7C,EAAK6C,QAClC7C,EAAK8C,cAAclG,KAAI,SAAA/G,GAAM,OAC5B,uBACEiH,IAAKjH,EAAO4B,GACZoD,UAAWC,KAAMqI,WACjB/H,QAAS,kBAvDK3D,EAuDkB5B,EAAO4B,GAtDjDgE,EAAWhE,GACX2K,SACAD,IAHuB,IAAC1K,IAyDb5B,EAAO2M,WALV,IAKuB3M,EAAO8M,kBAQlCS,EACJxN,EAAQ+G,OAAS,EACbsG,EACA,uBAAGpI,UAAWC,KAAMuI,cAApB,2IAKN,OACE,yBAAKxI,UAAWC,KAAMwI,YAGpB,yBAAKzI,UAAWC,KAAMkD,QACpB,yBAAKnD,UAAWC,KAAMyI,WACpB,wBAAI1I,UAAWC,KAAM0I,iBAArB,WACA,kBAAC,IAAD,CAAQ3I,UAAWC,KAAMsB,KAAMC,aAAW,aAAajB,QAAS,kBAjGtEW,IACAoG,SACAC,QAiGI,2BACEvH,UAAWC,KAAM2I,UACjBnM,KAAK,SACLoJ,YAAY,YACZrE,aAAW,6BACX4D,MAAOqC,EACP7C,SA7FS,SAACK,GAChByC,EAAUzC,EAAEC,OAAOE,WAiGfrK,EAAQL,QAAU,yCAAoB6N,MC1HxCnK,GAAgB,SAACC,EAAKL,EAAUH,GACpC,IAAMS,EAASD,EAAIE,SAASC,WAC5BF,GAAUN,EAASJ,EAASC,GAAOS,EAAQ,SAAU,MACrDN,EAAS,CAAEvB,KrBPa,aqBOKC,QAAS4B,KAI3BuK,GAAc,yDAAM,WAAO7K,GAAP,mBAAAY,EAAA,sEAEvBC,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SAJd,SAQX4E,IAAMM,IAAN,UAlBN,wBAkBM,oBAAwCX,GAR7B,OAQvBO,EARuB,OAWvB0J,EAAoB1J,EAAIC,KAAK0J,MAAK,SAACnK,EAAGoK,GAC1C,OAAIpK,EAAEqK,aAAeD,EAAEC,cAAwB,EAC3CrK,EAAEqK,aAAeD,EAAEC,aAAuB,EACvC,KAGTjL,EAAS,CACPvB,KrBlCuB,gBqBmCvBC,QAASoM,IAnBkB,gDAsB7B1K,GAAc,EAAD,GAAMJ,GAtBU,yDAAN,uDA4EdkL,GAAa,SAACtM,EAAImI,GAAL,8CAAkB,WAAO/G,GAAP,iBAAAY,EAAA,sEAElCC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BvE,aAAaD,SALH,SAStB4E,IAAMiK,IAAN,UA/FN,wBA+FM,2BAAuCvM,EAAvC,KAA8CmI,EAAUlG,GATlC,OASlCO,EATkC,OAWxCpB,EAAS,CACPvB,KrBpGqB,cqBqGrBC,QAAS0C,EAAIC,OAEfrB,EAASJ,EAAS,eAAgB,UAAW,MAfL,gDAiBxCQ,GAAc,EAAD,GAAMJ,GAjBqB,yDAAlB,uD,oBC1EXoL,GAbM,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,eAAgBzE,EAA8B,EAA9BA,SAAajD,EAAiB,6CACpE,OACE,4CACE3B,UAAS,oBACLqJ,GAAkC,GAD7B,qBAELpJ,KAAMqJ,aAFD,YAIT1E,SAAUA,GACNjD,K,oBCqFKlC,eAAQ,MAJI,SAACzB,GAAD,MAAe,CACxCuL,WAAY,SAAC9G,EAAO1D,EAAMyK,GAAd,OAA8BxL,EF7BlB,SAACyE,EAAO1D,EAAMyK,GAAd,8CAA8B,WAAOxL,GAAP,mBAAAY,EAAA,sEAE9CC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BvE,aAAaD,SAKrCmP,EAAWzK,KAAKC,UAAU,CAACwD,QAAO1D,OAAMyK,gBAVM,SAYlCtK,IAAMC,KAAN,UAxEN,wBAwEM,oBAAyCsK,EAAU5K,GAZjB,OAY9CO,EAZ8C,OAapDsK,QAAQvM,IAAIiC,GACZpB,EAAS,CACPvB,KrB/EqB,cqBgFrBC,QAAS0C,EAAIC,OAEfrB,EAASJ,EAAS,iBAAkB,UAAW,MAlBK,kDAoBpDQ,GAAc,EAAD,GAAMJ,GApBiC,0DAA9B,sDE6B2BuL,CAAW9G,EAAO1D,EAAMyK,QAG9D/J,EApFI,SAAC,GAAoB,IAAlB8J,EAAiB,EAAjBA,WAAiB,EAEHzE,mBAAS,CACzCrC,MAAO,GACP1D,KAAM,GACNkK,aAAc,GACdO,aAAa,IANsB,oBAE7BzE,EAF6B,KAEnBC,EAFmB,KAS/BJ,EAAW,SAACK,GAChBD,EAAY,2BACPD,GADM,mBAERE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAIxBC,EAAQ,uCAAG,WAAOJ,GAAP,SAAArG,EAAA,6DACfqG,EAAEK,iBADa,SAETiE,EAAWxE,EAAStC,MAAOsC,EAAShG,KAAMgG,EAASyE,aAF1C,OAGfxE,EAAY,CACVvC,MAAO,GACP1D,KAAM,GACN4K,YAAa,GACbH,aAAa,IAPA,2CAAH,sDAWd,OACE,yBAAKxJ,UAAWC,KAAM2J,YAGpB,yBAAK5J,UAAWC,KAAMkD,QACpB,wBAAInD,UAAWC,KAAMwC,OAArB,gBAIF,0BAAMzC,UAAWC,KAAMwF,KAAMJ,SAAUA,GACrC,2BAAOrF,UAAWC,KAAM4J,WAAxB,SACQ,0BAAM7J,UAAWC,KAAM2F,cAAvB,eAER,yBAAK5F,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAS1F,UAAWC,KAAM6J,YAC1B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,QACLU,YAAY,QACZC,aAAa,MACbV,MAAOL,EAAStC,MAChBmC,SAAUA,EACVmB,UAAQ,EACRtB,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,QACA,kBAAC,GAAD,CACEpN,KAAK,WACL0I,KAAK,OACLU,YAAY,OACZC,aAAa,MACbV,MAAOL,EAAShG,KAChB6F,SAAUA,EAEVyE,gBAAc,IAIhB,kBAAC,GAAD,CAAQ5M,KAAK,SAAS4H,cAAY,GAAlC,iB,wCCOO5E,gBAXS,SAAClD,GAAD,MAAY,CAClC1B,iBAAkB0B,EAAMS,SAASnC,iBACjCC,aAAcyB,EAAMS,SAASlC,aAC7BJ,QAAS6B,EAAMS,SAAStC,QACxBK,QAASwB,EAAMxB,QAAQA,YAGE,SAACiD,GAAD,MAAe,CACxC+L,oBAAqB,kBAAM/L,GlBvEY,SAACA,GACxC,IACEA,EAAS,CACPvB,KXjBgC,2BWmBlC,MAAO4B,GACPD,EAAcC,EAAKL,WkBoERyB,EA9EU,SAAC,GAAgF,IAA9E5E,EAA6E,EAA7EA,iBAAkBC,EAA2D,EAA3DA,aAAcJ,EAA6C,EAA7CA,QAASK,EAAoC,EAApCA,QAASgP,EAA2B,EAA3BA,oBAC5EvC,qBAAU,WACRuC,MACC,CAACA,IAEJ,IAEIC,EAFAC,EAAOC,KAAOpP,GAAcqP,OAAO,gBAqCvC,OAhCgC,IAA5BtP,EAAiBiH,QAAiC,KAAjBhH,IACnCkP,EACE,uBAAGhK,UAAWC,KAAMmK,aAApB,mCAK4B,IAA5BvP,EAAiBiH,QAAiC,KAAjBhH,IACnCkP,EACE,uBAAGhK,UAAWC,KAAMmK,aAApB,eAA8CH,EAA9C,MAKApP,EAAiBiH,OAAS,GAAsB,KAAjBhH,IACjCkP,EACEnP,EAAiBkH,KAAI,SAAA5E,GAAG,OACtB,yBAAK8E,IAAK9E,EAAIP,GAAIoD,UAAWC,KAAMoK,2BAG/BtP,EAAQgH,KAAI,SAAA/G,GAAM,OAChBA,EAAO4B,KAAOO,EAAImN,mBACb,uBAAGrI,IAAKjH,EAAO4B,GAAIoD,UAAWC,KAAMsK,WAAYvP,EAAO2M,WAAvD,IAAoE3M,EAAO8M,cAGpF,uBAAG9H,UAAWC,KAAMuK,SAAUrN,EAAIsF,OAClC,uBAAGzC,UAAWC,KAAMwK,SAAUtN,EAAIuN,cAOxC,yBAAK1K,UAAWC,KAAM+J,kBACpB,wBAAIhK,UAAWC,KAAMkD,QAArB,OAEE,0BAAMnD,UAAWC,KAAM0K,YAA8B,KAAjB7P,EAAuBmP,EAAO,KAGlEvP,EACI,uBAAGsF,UAAWC,KAAMmK,aAApB,cACAJ,M,oBCjBGvK,gBAPS,SAAClD,GAAD,MAAY,CAClCpB,SAAUoB,EAAMW,UAAU/B,SAC1BE,YAAakB,EAAMW,UAAU7B,YAC7BC,UAAWiB,EAAMW,UAAU5B,UAC3BC,aAAcgB,EAAMW,UAAU3B,gBAGjBkE,EAjCe,SAAC,GAAiE,IAA/D1E,EAA8D,EAA9DA,QAASI,EAAqD,EAArDA,SAAUE,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAE1E,OACE,yBAAKyE,UAAWC,KAAM2K,uBAEpB,yBAAK5K,UAAWC,KAAM4K,qBAClB1P,EAASC,UAAY,4CACrBC,EAAYD,UAAY,kBAAC,GAAD,CAAYL,QAASA,IAC7CO,EAAUF,UAAY,kBAAC,GAAD,MACtBG,EAAaH,UAAY,kBAAC,GAAD,WCX7BgD,GAAgB,SAACC,EAAKL,EAAUH,GACpC,IAAMS,EAASD,EAAIE,SAASC,WAC5BF,GAAUN,EAASJ,EAASC,GAAOS,EAAQ,SAAU,MACrDN,EAAS,CAAEvB,K7BPgB,gB6BOKC,QAAS4B,KAwB9BwM,GAAa,SAACC,GAAD,8CAAe,WAAO/M,GAAP,iBAAAY,EAAA,sEAE/BC,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SAJN,SAQnB4E,IAAMM,IAAN,UAtCN,wBAsCM,+BAA2CuL,EAA3C,KAAyDlM,GARtC,OAQ/BO,EAR+B,OAUrCpB,EAAS,CACPvB,K7B9CqB,c6B+CrBC,QAAS0C,EAAIC,OAZsB,gDAerCjB,GAAc,EAAD,GAAMJ,GAfkB,yDAAf,uDA8CboG,GAAgB,SAAC2G,GAAD,8CAAe,WAAO/M,GAAP,eAAAY,EAAA,0DACtCoM,OAAOC,QAAQ,iFADuB,iCAGhCpM,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SALL,SAQhC4E,IAAMgM,OAAN,UApFI,wBAoFJ,+BAA8CH,EAA9C,KAA4DlM,GAR5B,OAStCb,EAAS,CACPvB,K7BxFsB,iB6ByFtBC,QAASqO,IAEX/M,EAASJ,EAAS,+BAAgC,UAAW,MAbvB,gDAetCQ,GAAc,EAAD,GAAMJ,GAfmB,yDAAf,uD,oBCvDdmN,GArBS,SAAC,GAAgD,IAGnEzE,EAHqBnG,EAA6C,EAA7CA,QAQzB,OARsE,EAApC6K,iBAKd1E,EAAO,oBAL2C,EAApB2E,gBAM/B3E,EAAO,mBAGxB,yBACE1G,UAAWC,KAAMqL,gBACjB/K,QAASA,GAET,kBAAC,IAAD,CAAkBP,UAAWC,KAAMsL,WAAY/J,aAAW,qBAC1D,uBAAGxB,UAAWC,KAAMuL,YACjB9E,K,oBCuKMjH,gBAbS,SAAClD,GAAD,MAAY,CAClCvB,OAAQuB,EAAMxB,QAAQC,OACtBN,QAAS6B,EAAMxB,QAAQL,YAGE,SAACsD,GAAD,MAAe,CACxC4C,WAAY,SAAChE,GAAD,OAAQoB,EAAS4C,EAAWhE,KACxC6O,aAAc,SAAC7O,EAAImI,GAAL,OAAkB/G,EvBrEN,SAACpB,EAAImI,GAAL,8CAAkB,WAAO/G,GAAP,iBAAAY,EAAA,sEAEpCC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BvE,aAAaD,SALD,SASxB4E,IAAMiK,IAAN,UApHN,wBAoHM,+BAA2CvM,EAA3C,KAAkDmI,EAAUlG,GATpC,OASpCO,EAToC,OAW1CpB,EAAS,CACPvB,KTxHuB,gBSyHvBC,QAAS0C,EAAIC,OAEfrB,EAASJ,EAAS,iBAAkB,UAAW,MAfL,gDAiB3B,KAAIW,SAASC,WAjBc,yDAAlB,sDuBqEeiN,CAAa7O,EAAImI,KAC1D2G,aAAc,SAAC9O,GAAD,OAAQoB,EvB9FI,SAACpB,GAAD,8CAAQ,WAAOoB,GAAP,eAAAY,EAAA,0DAC9BoM,OAAOC,QAAQ,gFADe,iCAGxBpM,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SALb,SASxB4E,IAAMgM,OAAN,UA5FI,wBA4FJ,+BAA8CtO,EAA9C,KAAqDiC,GAT7B,OAW9Bb,EAAS,CACPvB,KTjGqB,gBSkGrBC,QAASE,IAEXoB,EAASJ,EAAS,8BAA+B,UAAW,MAf9B,gDAiB9BQ,EAAc,EAAD,GAAMJ,GAjBW,yDAAR,sDuB8FK0N,CAAa9O,KAC5CsE,YAAa,kBAAMlD,GvBhDY,SAACA,GAChCA,EAAS,CAAEvB,KTvIe,qBgCuL1BkP,iBAAkB,kBAAM3N,GpBvGY,SAACA,GACrCA,EAAS,CACPvB,KVtE8B,8B8B8KnBgD,EA3KI,SAAC,GAAgG,IAA9FzE,EAA6F,EAA7FA,OAAQN,EAAqF,EAArFA,QAASkG,EAA4E,EAA5EA,WAAY6K,EAAgE,EAAhEA,aAAcC,EAAkD,EAAlDA,aAAcxK,EAAoC,EAApCA,YAAayK,EAAuB,EAAvBA,iBAE1FnE,qBAAU,WACR5G,EAAW5F,EAAO4B,IAClB6O,MACC,CAAC7K,EAAY6K,EAAcC,EAAc1Q,EAAO4B,KAL8D,MAQ/EkI,mBAAS,CACzC6C,WAAY3M,EAAO2M,WAAa3M,EAAO2M,WAAa,GACpDG,UAAW9M,EAAO8M,UAAY9M,EAAO8M,UAAY,GACjDpJ,MAAO1D,EAAO0D,MAAQ1D,EAAO0D,MAAQ,GACrCkN,aAAc5Q,EAAO4Q,aAAe5Q,EAAO4Q,aAAe,GAC1DC,UAAW7Q,EAAO6Q,UAAY7Q,EAAO6Q,UAAY,GACjDC,MAAO9Q,EAAO8Q,MAAQ9Q,EAAO8Q,MAAQ,KAd0E,oBAQzG/G,EARyG,KAQ/FC,EAR+F,KAsB3GJ,EAAW,SAACK,GAChBD,EAAY,2BACPD,GADM,mBAERE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAUxB2G,EACJ,yBAAK/L,UAAWC,KAAM+L,YACpB,yBAAKhM,UAAWC,KAAMiD,iBACpB,wBAAIlD,UAAWC,KAAMkD,QAArB,eACA,yBAAKnD,UAAWC,KAAMqB,cAAef,QAtBpB,WACrBmL,EAAa1Q,EAAO4B,IACpBsE,MAqBM,kBAAC,IAAD,CAAiBlB,UAAWC,KAAMgM,WAAYzK,aAAW,kBACzD,0BAAMxB,UAAWC,KAAMiM,YAAvB,mBAIJ,0BAAMlM,UAAWC,KAAMwF,KAAMJ,SAhBhB,SAACJ,GAChBA,EAAEK,iBACFmG,EAAazQ,EAAO4B,GAAImI,KAepB,2BAAO/E,UAAWC,KAAM4J,WAAxB,cACa,0BAAM7J,UAAWC,KAAM2F,cAAvB,eAEb,yBAAK5F,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAU1F,UAAWC,KAAM6J,YAC3B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,aACLU,YAAY,aACZC,aAAa,MACbV,MAAOL,EAAS4C,WAChB/C,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,aACY,0BAAM7J,UAAWC,KAAM2F,cAAvB,eAEZ,yBAAK5F,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAU1F,UAAWC,KAAM6J,YAC3B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,YACLU,YAAY,YACZC,aAAa,MACbV,MAAOL,EAAS+C,UAChBlD,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,SACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAS1F,UAAWC,KAAM6J,YAC1B,kBAAC,GAAD,CACErN,KAAK,QACL0I,KAAK,QACLU,YAAY,QACZC,aAAa,MACbV,MAAOL,EAASrG,MAChBkG,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,gBACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAe1F,UAAWC,KAAM6J,YAChC,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,eACLU,YAAY,eACZC,aAAa,MACbV,MAAOL,EAAS6G,aAChBhH,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,aACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAW1F,UAAWC,KAAM6J,YAC5B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,YACLU,YAAY,YACZC,aAAa,MACbV,MAAOL,EAAS8G,UAChBjH,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,SACA,kBAAC,GAAD,CACEpN,KAAK,WACL0I,KAAK,QACLU,YAAY,QACZC,aAAa,MACbV,MAAOL,EAAS+G,MAChBlH,SAAUA,EACVyE,gBAAc,IAGhB,kBAAC,GAAD,CAAQ5M,KAAK,SAAS4H,cAAY,GAAlC,WAGF,kBAAC,GAAD,CAAiB+G,gBAAc,EAAC7K,QAAS,kBAAMoL,QAKnD,OACc,OAAX3Q,GAAmBN,EAChB,yCACAqR,K,oBC5DOtM,gBAXS,SAAClD,GAAD,MAAY,CAClCrB,eAAgBqB,EAAMU,QAAQ/B,eAC9BR,QAAS6B,EAAMU,QAAQvC,YAGE,SAACsD,GAAD,MAAe,CACxCoG,cAAe,SAAC2G,GAAD,OAAe/M,EAASoG,GAAc2G,KACrDoB,oBAAqB,kBAAMnO,GrB9DY,SAACA,GACxCA,EAAS,CACPvB,KV9BiC,8B+B2FnC2P,kBAAmB,kBAAMpO,GrBxDY,SAACA,GACtCA,EAAS,CACPvB,KVpC+B,+B+B6FpBgD,EAvFK,SAAC,GAAgG,IAA9FzE,EAA6F,EAA7FA,OAAQE,EAAqF,EAArFA,eAAgBR,EAAqE,EAArEA,QAAwByR,GAA6C,EAA5D/H,cAA4D,EAA7C+H,qBAAqBC,EAAwB,EAAxBA,kBAYpFC,EACgB,OAAnBnR,GAA4BA,EAAeoP,oBAAsBtP,EAAO4B,GAErE,yBAAKqF,IAAK/G,EAAe0B,GAAIoD,UAAWC,KAAMoM,kBAC5C,wBAAIrM,UAAWC,KAAMqM,cAAepR,EAAeqR,cACnD,uBAAGvM,UAAWC,KAAMuM,aAClB,uBAAGC,KAAI,kBAAavR,EAAewR,SAAWxH,OAAO,SAASyH,IAAI,sBAAsB3M,UAAWC,KAAMG,MACtGlF,EAAewR,UAGpB,uBAAG1M,UAAWC,KAAMuM,aAActR,EAAe0R,SACjD,uBAAG5M,UAAWC,KAAMuM,aAActR,EAAe2R,gBAE/C3R,EAAe4R,eACZ,wBAAI9M,UAAWC,KAAM8M,iBAArB,UAA8C7R,EAAeqR,aAA7D,KAEL,uBAAGvM,UAAWC,KAAMuM,aAActR,EAAe4R,eACjD,yBAAK9M,UAAWC,KAAM2C,iBACpB,yBACE5C,UAAWC,KAAM+M,kBACjBzM,QAAS,WA5BnB6L,MA8BU,kBAAC,IAAD,CAAgBpM,UAAWC,KAAMgN,SAAUzL,aAAW,iBACtD,0BAAMxB,UAAWC,KAAMiN,UAAvB,mBAKN,yBAAKlN,UAAWC,KAAMoM,kBACpB,uBAAGrM,UAAWC,KAAMuM,aAApB,kFACkFxR,EAAO2M,WADzF,IACsG3M,EAAO8M,WAE7G,yBAAK9H,UAAWC,KAAM2C,iBACpB,yBACE5C,UAAWC,KAAMkN,iBACjB5M,QAAS,WAvCnB4L,MAyCU,kBAAC,IAAD,CAAcnM,UAAWC,KAAMmN,QAAS5L,aAAW,gBACnD,0BAAMxB,UAAWC,KAAMoN,SAAvB,kBAMZ,OACE,yBAAKrN,UAAWC,KAAMqN,aAElB5S,EAAU,yCAAoB2R,M,oBC4EvB5M,eAAQ,MALI,SAACzB,GAAD,MAAe,CACxCuP,cAAe,gBAAGhB,EAAH,EAAGA,aAAcG,EAAjB,EAAiBA,QAASG,EAA1B,EAA0BA,eAAgBD,EAA1C,EAA0CA,QAASE,EAAnD,EAAmDA,cAAexC,EAAlE,EAAkEA,kBAAlE,OAA0FtM,EJtF9E,SAAC,GAAD,IAAGuO,EAAH,EAAGA,aAAcG,EAAjB,EAAiBA,QAASG,EAA1B,EAA0BA,eAAgBD,EAA1C,EAA0CA,QAASE,EAAnD,EAAmDA,cAAexC,EAAlE,EAAkEA,kBAAlE,8CAA0F,WAAOtM,GAAP,mBAAAY,EAAA,sEAE7GC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BvE,aAAaD,SAIrCyE,EAAOC,KAAKC,UAAU,CAAEsN,eAAcG,UAASG,iBAAgBD,UAASE,gBAAexC,sBATsB,SAWjGpL,IAAMC,KAAN,UA9DN,wBA8DM,wBAA6CJ,EAAMF,GAX8C,OAW7GO,EAX6G,OAanHpB,EAAS,CACPvB,K7BrEwB,iB6BsExBC,QAAS0C,EAAIC,OAEfrB,EAASJ,EAAS,oBAAqB,UAAW,MAjBiE,kDAmBnHQ,GAAc,EAAD,GAAMJ,GAnBgG,0DAA1F,sDIsFuFuP,CAAc,CAAEhB,eAAcG,UAASG,iBAAgBD,UAASE,gBAAexC,wBACjMhD,kBAAmB,kBAAMtJ,GtBjGY,SAACA,GACtCA,EAAS,CACPvB,KV1C+B,+BgC4IpBgD,EAnIO,SAAC,GAAkD,IAAhDzE,EAA+C,EAA/CA,OAAQuS,EAAuC,EAAvCA,cAAejG,EAAwB,EAAxBA,kBAAwB,EAGpCxC,mBAAS,CACzCyH,aAAc,GACdG,QAAS,GACTG,eAAgB,GAChBD,QAAS,GACTE,cAAe,GACfxC,kBAAmBtP,EAAO4B,KAT0C,oBAG9DmI,EAH8D,KAGpDC,EAHoD,KAYhEJ,EAAW,SAACK,GAChBD,EAAY,2BACPD,GADM,mBAERE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAIxBC,EAAQ,uCAAG,WAAOJ,GAAP,SAAArG,EAAA,6DACfqG,EAAEK,iBADa,SAETiI,EAAcxI,GAFL,OAGfC,EAAY,CACVuH,aAAc,GACdG,QAAS,GACTG,eAAgB,GAChBD,QAAS,GACTE,cAAe,GACfxC,kBAAmBtP,EAAO4B,KAE5B0K,IAXe,2CAAH,sDAcd,OACE,yBAAKtH,UAAWC,KAAMuN,eACpB,wBAAIxN,UAAWC,KAAMkD,QAArB,kBAEA,0BAAMnD,UAAWC,KAAMwF,KAAMJ,SAAUA,GAErC,2BAAOrF,UAAWC,KAAM4J,WAAxB,gBACe,0BAAM7J,UAAWC,KAAM2F,cAAvB,eAEf,yBAAK5F,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAU1F,UAAWC,KAAM6J,YAC3B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,eACLU,YAAY,eACZC,aAAa,MACbV,MAAOmI,EAAchB,aACrB3H,SAAUA,EACVmB,UAAQ,EACRtB,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,mBACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAO1F,UAAWC,KAAM6J,YACxB,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,UACLU,YAAY,kBACZC,aAAa,MACbV,MAAOmI,EAAcb,QACrB9H,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,kBACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAe1F,UAAWC,KAAM6J,YAChC,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,iBACLU,YAAY,iBACZC,aAAa,MACbV,MAAOmI,EAAcV,eACrBjI,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,mBACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAS1F,UAAWC,KAAM6J,YAC1B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,UACLU,YAAY,kBACZC,aAAa,MACbV,MAAOmI,EAAcX,QACrBhI,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,iBACA,kBAAC,GAAD,CACEpN,KAAK,WACL0I,KAAK,gBACLU,YAAY,gBACZC,aAAa,MACbV,MAAOmI,EAAcT,cACrBlI,SAAUA,EACVyE,gBAAc,IAGhB,kBAAC,GAAD,CAAQ5M,KAAK,SAAS4H,cAAY,GAAlC,WAGF,kBAAC,GAAD,CAAiB+G,gBAAc,EAAC7K,QAAS,kBAAM+G,W,oBCyCtC7H,gBAZS,SAAClD,GAAD,MAAY,CAClCrB,eAAgBqB,EAAMU,QAAQ/B,eAC9BR,QAAS6B,EAAMU,QAAQvC,YAGE,SAACsD,GAAD,MAAe,CACxC8M,WAAY,SAACC,GAAD,OAAe/M,EAAS8M,GAAWC,KAC/C0C,cAAe,SAAC1C,EAAWhG,GAAZ,OAAyB/G,EL5Db,SAAC+M,EAAWhG,GAAZ,8CAAyB,WAAO/G,GAAP,iBAAAY,EAAA,sEAE5CC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BvE,aAAaD,SALO,SAShC4E,IAAMiK,IAAN,UA3GN,wBA2GM,+BAA2C4B,EAA3C,KAAyDhG,EAAUlG,GATnC,OAS5CO,EAT4C,OAWlDpB,EAAS,CACPvB,K7BjHwB,iB6BkHxBC,QAAS0C,EAAIC,OAEfrB,EAASJ,EAAS,kBAAmB,UAAW,MAfE,gDAiBlDQ,GAAc,EAAD,GAAMJ,GAjB+B,yDAAzB,sDK4DsByP,CAAc1C,EAAWhG,KAC1EX,cAAe,SAAC2G,GAAD,OAAe/M,EAASoG,GAAc2G,KACrDzD,kBAAmB,kBAAMtJ,GvBvHY,SAACA,GACtCA,EAAS,CACPvB,KV1C+B,+BiCkKpBgD,EAzJK,SAAC,GAAqG,EAAnGzE,OAAoG,IAA5FE,EAA2F,EAA3FA,eAAgBR,EAA2E,EAA3EA,QAASoQ,EAAkE,EAAlEA,WAAY2C,EAAsD,EAAtDA,cAAerJ,EAAuC,EAAvCA,cAAekD,EAAwB,EAAxBA,kBAGhGE,qBAAU,WACRsD,EAAW5P,EAAe0B,MACzB,CAACkO,IALoH,MAOtFhG,mBAAS,CACzCyH,aAAcrR,EAAeqR,aAAerR,EAAeqR,aAAe,GAC1EG,QAASxR,EAAewR,QAAUxR,EAAewR,QAAU,GAC3DG,eAAgB3R,EAAe2R,eAAiB3R,EAAe2R,eAAiB,GAChFD,QAAS1R,EAAe0R,QAAU1R,EAAe0R,QAAU,GAC3DE,cAAe5R,EAAe4R,cAAgB5R,EAAe4R,cAAgB,GAC7ExC,kBAAmBpP,EAAeoP,kBAAoBpP,EAAeoP,kBAAoB,KAb6B,oBAOhHvF,EAPgH,KAOtGC,EAPsG,KAqBlHJ,EAAW,SAACK,GAChBD,EAAY,2BACPD,GADM,mBAERE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAIxBC,EAAQ,uCAAG,WAAOJ,GAAP,SAAArG,EAAA,6DACfqG,EAAEK,iBADa,SAETmI,EAAcvS,EAAe0B,GAAImI,GAFxB,2CAAH,sDAKR2I,EACJ,yBAAK1N,UAAWC,KAAM0N,aACpB,yBAAK3N,UAAWC,KAAMiD,iBACpB,wBAAIlD,UAAWC,KAAMkD,QAArB,kBACA,yBAAKnD,UAAWC,KAAMqB,cAAef,QArBnB,WACtB6D,EAAclJ,EAAe0B,IAC7B0K,MAoBM,kBAAC,IAAD,CAAiBtH,UAAWC,KAAMgM,WAAYzK,aAAW,kBACzD,0BAAMxB,UAAWC,KAAMiM,YAAvB,oBAIJ,0BAAMlM,UAAWC,KAAMwF,KAAMJ,SAAUA,GACrC,2BAAOrF,UAAWC,KAAM4J,WAAxB,gBACe,0BAAM7J,UAAWC,KAAM2F,cAAvB,eAEf,yBAAK5F,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAU1F,UAAWC,KAAM6J,YAC3B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,eACLU,YAAY,eACZC,aAAa,MACbV,MAAOL,EAASwH,aAChB3H,SAAUA,EACVmB,UAAQ,EACRtB,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,mBACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAO1F,UAAWC,KAAM6J,YACxB,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,UACLU,YAAY,kBACZC,aAAa,MACbV,MAAOL,EAAS2H,QAChB9H,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,kBACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAe1F,UAAWC,KAAM6J,YAChC,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,iBACLU,YAAY,iBACZC,aAAa,MACbV,MAAOL,EAAS8H,eAChBjI,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,mBACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAS1F,UAAWC,KAAM6J,YAC1B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,UACLU,YAAY,kBACZC,aAAa,MACbV,MAAOL,EAAS6H,QAChBhI,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,iBACA,kBAAC,GAAD,CACEpN,KAAK,WACL0I,KAAK,gBACLU,YAAY,gBACZC,aAAa,MACbV,MAAOL,EAAS+H,cAChBlI,SAAUA,EACVyE,gBAAc,IAGhB,kBAAC,GAAD,CAAQ5M,KAAK,SAAS4H,cAAY,GAAlC,WAGF,kBAAC,GAAD,CAAiB+G,gBAAc,EAAC7K,QAAS,kBAAM+G,QAKnD,OACGpM,IAAmB,IAAMR,EACtB,yCACAgT,KCpIFtP,GAAgB,SAACC,EAAKL,EAAUH,GACpC,IAAMS,EAASD,EAAIE,SAASC,WAC5BF,GAAUN,EAASJ,EAASC,GAAOS,EAAQ,SAAU,MACrDN,EAAS,CAAEvB,KjCNY,YiCMKC,QAAS4B,KAqD1BsP,GAAS,SAACC,GAAD,8CAAW,WAAO7P,GAAP,iBAAAY,EAAA,sEAEvBC,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SAJd,SAQX4E,IAAMM,IAAN,UAnEN,wBAmEM,4BAAwCqO,EAAxC,KAAkDhP,GARvC,OAQvBO,EARuB,OAU7BpB,EAAS,CACPvB,KjC1EiB,UiC2EjBC,QAAS0C,EAAIC,OAZc,gDAe7BjB,GAAc,EAAD,GAAMJ,GAfU,yDAAX,uDA6CT8P,GAAY,SAACD,GAAD,8CAAW,WAAO7P,GAAP,eAAAY,EAAA,0DAC9BoM,OAAOC,QAAQ,6EADe,iCAGxBpM,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SALb,SASxB4E,IAAMgM,OAAN,UAjHI,wBAiHJ,4BAA2C2C,EAA3C,KAAqDhP,GAT7B,OAW9Bb,EAAS,CACPvB,KjCtHkB,aiCuHlBC,QAASmR,IAEX7P,EAASJ,EAAS,2BAA4B,UAAW,MAf3B,gDAiB9BQ,GAAc,EAAD,GAAMJ,GAjBW,yDAAX,uD,oBCGVyB,gBAdS,SAAClD,GAAD,MAAY,CAClCvB,OAAQuB,EAAMxB,QAAQC,OACtBgB,WAAYO,EAAMY,IAAInB,WACtBtB,QAAS6B,EAAMY,IAAIzC,YAGM,SAACsD,GAAD,MAAe,CACxC+P,cAAe,SAACC,GAAD,OAAchQ,EDrEF,SAACgQ,GAAD,8CAAc,WAAOhQ,GAAP,mBAAAY,EAAA,sEAEjCC,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SAJJ,SAQrB4E,IAAMM,IAAN,UAvCN,wBAuCM,+CAA2DwO,GAAYnP,GARlD,OAQjCO,EARiC,OAWjC6O,EAAyB7O,EAAIC,KAAK0J,MAAK,SAACnK,EAAGoK,GAC/C,OAAIpK,EAAEsP,SAAWlF,EAAEkF,UAAoB,EACnCtP,EAAEsP,SAAWlF,EAAEkF,SAAmB,EAC/B,KAGTlQ,EAAS,CACPvB,KjCtDyB,kBiCuDzBC,QAASuR,IAnB4B,gDAsBvC7P,GAAc,EAAD,GAAMJ,GAtBoB,yDAAd,sDCqEW+P,CAAcC,KACpDJ,OAAQ,SAACC,GAAD,OAAW7P,EAAS4P,GAAOC,KACnCC,UAAW,SAACD,GAAD,OAAW7P,EAAS8P,GAAUD,KACzCM,gBAAiB,kBAAMnQ,GzBhDY,SAACA,GACpCA,EAAS,CACPvB,KVrD6B,0BmCoG/B2R,cAAe,kBAAMpQ,GzB1CY,SAACA,GAClCA,EAAS,CACPvB,KV3D2B,2BmCsGhBgD,EApGC,SAAC,GAAuG,IAArGzE,EAAoG,EAApGA,OAAQN,EAA4F,EAA5FA,QAASsB,EAAmF,EAAnFA,WAAY4R,EAAuE,EAAvEA,OAAQG,EAA+D,EAA/DA,cAAeD,EAAgD,EAAhDA,UAAWK,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,cACjG5G,qBAAU,WACRuG,EAAc/S,EAAO4B,MACpB,CAACmR,EAAe/S,EAAO4B,GAAIgR,IAG9B,IASIS,EATEC,EAAiB,uCAAG,WAAOT,GAAP,SAAAjP,EAAA,sEAClBgP,EAAOC,GADW,OAExBO,IAFwB,2CAAH,sDAwDvB,OA3CEC,EADErS,EAAW8F,OAAS,EAEpB9F,EAAWuS,MAAM,EAAG,GAAGxM,KAAI,SAAA5E,GAAG,OAC5B,yBAAK8E,IAAK9E,EAAIP,GAAIoD,UAAWC,KAAMoO,cACjC,yBAAKrO,UAAWC,KAAMiD,iBACpB,wBAAIlD,UAAWC,KAAMuK,SAAUrN,EAAIV,OAErC,uBAAGuD,UAAWC,KAAMwK,SAAUtN,EAAIuN,SAClC,uBAAG1K,UAAWC,KAAMuO,aAActE,KAAO/M,EAAI+Q,UAAU/D,OAAO,iBAG9D,yBAAKnK,UAAWC,KAAM2C,iBACpB,yBAAK5C,UAAWC,KAAMwO,kBAAmBlO,QAAS,kBAAM+N,EAAkBnR,EAAIP,MAC5E,kBAAC,IAAD,CAAQoD,UAAWC,KAAMyO,SAAUlN,aAAW,aAC9C,0BAAMxB,UAAWC,KAAM0O,UAAvB,SAEF,yBAAK3O,UAAWC,KAAM2O,oBAAqBrO,QAAS,kBAAMuN,EAAU3Q,EAAIP,MACtE,kBAAC,IAAD,CAAiBoD,UAAWC,KAAMgM,WAAYzK,aAAW,eACzD,0BAAMxB,UAAWC,KAAMiM,YAAvB,gBAQR,yBAAKlM,UAAWC,KAAM4O,iBACpB,uBAAG7O,UAAWC,KAAM6O,YAApB,2EAC2E9T,EAAO2M,WADlF,IAC+F3M,EAAO8M,WAEtG,yBAAK9H,UAAWC,KAAM8O,oBACpB,yBACE/O,UAAWC,KAAMkN,iBACjB5M,QAAS,WAvCjB4N,MAyCQ,kBAAC,IAAD,CAAcnO,UAAWC,KAAMmN,QAAS5L,aAAW,YACnD,0BAAMxB,UAAWC,KAAMoN,SAAvB,kBASR,yBAAKrN,UAAWC,KAAM+O,SAElBtU,EACI,yCACA2T,M,oBC6CG5O,gBATS,SAAClD,GAAD,MAAY,CAClCvB,OAAQuB,EAAMxB,QAAQC,WAGG,SAACgD,GAAD,MAAe,CACxCiR,UAAW,gBAAExS,EAAF,EAAEA,KAAMiO,EAAR,EAAQA,QAASJ,EAAjB,EAAiBA,kBAAjB,OAAwCtM,EFnC5B,SAAC,GAAD,IAAGvB,EAAH,EAAGA,KAAMiO,EAAT,EAASA,QAASJ,EAAlB,EAAkBA,kBAAlB,8CAA0C,WAAOtM,GAAP,mBAAAY,EAAA,sEAEzDC,EAAS,CACb,QAAW,CACT,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BtE,aAAaD,SAIrCyE,EAAOC,KAAKC,UAAU,CAAExC,OAAMiO,UAASJ,sBATkB,SAU7CpL,IAAMC,KAAN,UA1FN,wBA0FM,qBAA0CJ,EAAMF,GAVH,OAUzDO,EAVyD,OAY/DpB,EAAS,CACPvB,KjChGoB,aiCiGpBC,QAAS0C,EAAIC,OAEfrB,EAASJ,EAAS,gBAAiB,UAAW,MAhBiB,kDAkB/DQ,GAAc,EAAD,GAAMJ,GAlB4C,0DAA1C,sDEmCqCiR,CAAU,CAACxS,OAAMiO,UAASJ,wBACtF4E,cAAe,kBAAMlR,G1B/CY,SAACA,GAClCA,EAAS,CACPvB,KVjE2B,2BoCiHhBgD,EA7GG,SAAC,GAAiE,IAA/D0P,EAA8D,EAA9DA,sBAAuBnU,EAAuC,EAAvCA,OAAQiU,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAAoB,EAE/CpK,mBAAS,CACzCrI,KAAM,GACNiO,QAAS,GACTwD,SAAU,GACV5D,kBAAmBtP,EAAO4B,KANqD,oBAEzEmI,EAFyE,KAE/DC,EAF+D,KAS3EJ,EAAW,SAACK,GAChBD,EAAY,2BACPD,GADM,mBAERE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAIxBC,EAAQ,uCAAG,WAAOJ,GAAP,SAAArG,EAAA,6DACfqG,EAAEK,iBADa,SAET2J,EAAUlK,GAFD,OAGfC,EAAY,CACVvI,KAAM,GACNiO,QAAS,GACTwD,SAAU,GACV5D,kBAAmBtP,EAAO4B,KAPb,2CAAH,sDAWd,OACE,yBAAKoD,UAAWC,KAAMmP,WACpB,wBAAIpP,UAAWC,KAAMkD,QAArB,cAEA,0BAAMnD,UAAWC,KAAMwF,KAAMJ,SAAUA,GAErC,2BAAOrF,UAAWC,KAAM4J,WAAxB,YACW,0BAAM7J,UAAWC,KAAM2F,cAAvB,eAEX,yBAAK5F,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAe1F,UAAWC,KAAM6J,YAChC,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,OACLU,YAAY,OACZC,aAAa,MACbV,MAAOL,EAAStI,KAChBmI,SAAUA,EACVmB,UAAQ,EACRtB,aAAW,KAiBf,2BAAOzE,UAAWC,KAAM4J,WAAxB,WACA,kBAAC,GAAD,CACEpN,KAAK,WACL0I,KAAK,UACLU,YAAY,UACZC,aAAa,MACbV,MAAOL,EAAS2F,QAChB9F,SAAUA,EACVyE,gBAAc,IAGhB,kBAAC,GAAD,CAAQ5M,KAAK,SAAS4H,cAAY,GAAlC,WAKA8K,EACI,GAEA,yBAAKnP,UAAWC,KAAMqL,gBAAiB/K,QAAS,kBAAM2O,MACpD,kBAAC,IAAD,CAAkBlP,UAAWC,KAAMsL,WAAY/J,aAAW,qBAC1D,uBAAGxB,UAAWC,KAAMuL,YAApB,yB,oBCsBC/L,gBAXS,SAAClD,GAAD,MAAY,CAClCN,WAAYM,EAAMY,IAAIlB,WACtBvB,QAAS6B,EAAMY,IAAIzC,YAGM,SAACsD,GAAD,MAAe,CACxC4P,OAAQ,SAACC,GAAD,OAAW7P,EAAS4P,GAAOC,KACnCwB,UAAW,SAACxB,EAAO9I,GAAR,OAAqB/G,EHgBT,SAAC6P,EAAO9I,GAAR,8CAAqB,WAAO/G,GAAP,iBAAAY,EAAA,sEAEpCC,EAAS,CACb,QAAW,CACT,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BtE,aAAaD,SALD,SASxB4E,IAAMiK,IAAN,UAzIN,wBAyIM,4BAAwC0E,EAAxC,KAAkD9I,EAAUlG,GATpC,OASpCO,EAToC,OAW1CpB,EAAS,CACPvB,KjC7IoB,aiC8IpBC,QAAS0C,EAAIC,OAEfrB,EAASJ,EAAS,cAAe,UAAW,MAfF,gDAiB1CQ,GAAc,EAAD,GAAMJ,GAjBuB,yDAArB,sDGhBkBqR,CAAUxB,EAAO9I,KAC1DmK,cAAe,kBAAMlR,G3B5CY,SAACA,GAClCA,EAAS,CACPvB,KVjE2B,2BqC8GhBgD,EAzGC,SAAC,GAA+D,IAA7DxD,EAA4D,EAA5DA,WAAYvB,EAAgD,EAAhDA,QAASkT,EAAuC,EAAvCA,OAAQyB,EAA+B,EAA/BA,UAAWH,EAAoB,EAApBA,cACzD1H,qBAAU,WACRoG,EAAO3R,EAAWW,MACjB,CAACgR,IAHyE,MAK3C9I,mBAAS,CACzCrI,KAAMR,EAAWQ,KAAOR,EAAWQ,KAAO,GAC1CiO,QAASzO,EAAWyO,QAAUzO,EAAWyO,QAAU,GACnDwD,SAAUjS,EAAWiS,SAAWjS,EAAWiS,SAAW,GACtD5D,kBAAmBrO,EAAWqO,kBAAoBrO,EAAWqO,kBAAoB,KATN,oBAKrEvF,EALqE,KAK3DC,EAL2D,KAYvEJ,EAAW,SAACK,GAChBD,EAAY,2BACPD,GADM,mBAERE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAIxBC,EAAQ,uCAAG,WAAOJ,GAAP,SAAArG,EAAA,6DACfqG,EAAEK,iBADa,SAET+J,EAAUpT,EAAWW,GAAImI,GAFhB,2CAAH,sDAKRuK,EACJ,yBAAKtP,UAAWC,KAAMsP,SACpB,wBAAIvP,UAAWC,KAAMkD,QAArB,cAEA,0BAAMnD,UAAWC,KAAMwF,KAAMJ,SAAUA,GAErC,2BAAOrF,UAAWC,KAAM4J,WAAxB,YACW,0BAAM7J,UAAWC,KAAM2F,cAAvB,eAEX,yBAAK5F,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAe1F,UAAWC,KAAM6J,YAChC,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,OACLU,YAAY,OACZC,aAAa,MACbV,MAAOL,EAAStI,KAChBmI,SAAUA,EACVmB,UAAQ,EACRtB,aAAW,KAiBf,2BAAOzE,UAAWC,KAAM4J,WAAxB,WACA,kBAAC,GAAD,CACEpN,KAAK,WACL0I,KAAK,UACLU,YAAY,UACZC,aAAa,MACbV,MAAOL,EAAS2F,QAChB9F,SAAUA,EACVyE,gBAAc,IAGhB,kBAAC,GAAD,CAAQ5M,KAAK,SAAS4H,cAAY,GAAlC,WAGF,kBAAC,GAAD,CAAiB+G,gBAAc,EAAC7K,QAAS,kBAAM2O,QAInD,OACGjT,IAAe,IAAMvB,EAClB,yCACA4U,K,oBChBO7P,gBAXS,SAAClD,GAAD,MAAY,CAClCP,WAAYO,EAAMY,IAAInB,eAGG,SAACgC,GAAD,MAAe,CACxC4P,OAAQ,SAACC,GAAD,OAAW7P,EAAS4P,GAAOC,KACnCC,UAAW,SAACD,GAAD,OAAW7P,EAAS8P,GAAUD,KACzCO,cAAe,kBAAMpQ,G5BVY,SAACA,GAClCA,EAAS,CACPvB,KV3D2B,wBsCoE7ByS,cAAe,kBAAMlR,G5BJY,SAACA,GAClCA,EAAS,CACPvB,KVjE2B,2BsCsEhBgD,EAnEK,SAAC,GAAqE,IAAnEzD,EAAkE,EAAlEA,WAAY4R,EAAsD,EAAtDA,OAAQE,EAA8C,EAA9CA,UAAWM,EAAmC,EAAnCA,cAAec,EAAoB,EAApBA,cAG7DZ,EAAiB,uCAAG,WAAOT,GAAP,SAAAjP,EAAA,sEAClBgP,EAAOC,GADW,OAExBO,IAFwB,2CAAH,sDAMjBoB,EACJxT,EAAW+F,KAAI,SAAA3E,GAAS,OACtB,yBAAK4C,UAAWC,KAAMwP,cAAexN,IAAK7E,EAAUR,IAChD,yBAAKoD,UAAWC,KAAMiD,iBACpB,wBAAIlD,UAAWC,KAAMuK,SAAUpN,EAAUX,OAE3C,uBAAGuD,UAAWC,KAAMwK,SAAUrN,EAAUsN,SAExC,uBAAG1K,UAAWC,KAAMuO,aAActE,KAAO9M,EAAU8Q,UAAU/D,OAAO,iBAEpE,yBAAKnK,UAAWC,KAAM2C,iBACpB,yBAAK5C,UAAWC,KAAMwO,kBAAmBlO,QAAS,kBAAM+N,EAAkBlR,EAAUR,MAClF,kBAAC,IAAD,CAAQoD,UAAWC,KAAMyO,SAAUlN,aAAW,aAC9C,0BAAMxB,UAAWC,KAAM0O,UAAvB,SAEF,yBAAK3O,UAAWC,KAAM2O,oBAAqBrO,QAAS,kBAAMuN,EAAU1Q,EAAUR,MAC5E,kBAAC,IAAD,CAAiBoD,UAAWC,KAAMgM,WAAYzK,aAAW,eACzD,0BAAMxB,UAAWC,KAAMiM,YAAvB,gBAOZ,OACE,yBAAKlM,UAAWC,KAAMyP,aAEpB,kBAAC,GAAD,CAAWP,uBAAqB,IAEhC,yBAAKnP,UAAWC,KAAMuP,qBACpB,wBAAIxP,UAAWC,KAAMkD,QAArB,YACEqM,GAGJ,kBAAC,GAAD,CAAiBpE,gBAAc,EAAC7K,QAAS,kBAAM2O,W,mBC8JtCzP,gBAhBS,SAAClD,GAAD,MAAY,CAClCtB,UAAWsB,EAAMU,QAAQhC,UACzBe,WAAYO,EAAMY,IAAInB,WACtBR,YAAae,EAAMW,UAAU1B,YAC7BG,QAASY,EAAMW,UAAUvB,QACzBE,cAAeU,EAAMW,UAAUrB,kBAGN,SAACmC,GAAD,MAAe,CACxC2R,gBAAiB,kBAAM3R,EXjMM,uCAAM,WAAOA,GAAP,iBAAAY,EAAA,sEAE3BC,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SAJV,SAQf4E,IAAMM,IAAN,UAlBN,wBAkBM,wBAA4CX,GAR7B,OAQ3BO,EAR2B,OASjCpB,EAAS,CACPvB,K7B1B2B,oB6B2B3BC,QAAS0C,EAAIC,OAXkB,gDAcjCjB,GAAc,EAAD,GAAMJ,GAdc,yDAAN,wDWkM7B8M,WAAY,SAACC,GAAD,OAAe/M,EAAS8M,GAAWC,KAC/CzD,kBAAmB,kBAAMtJ,G7BpKY,SAACA,GACtCA,EAAS,CACPvB,KV1C+B,4BuC6MjCkP,iBAAkB,kBAAM3N,G7BlIY,SAACA,GACrCA,EAAS,CACPvB,KVtE8B,2BuCuMhCmT,cAAe,kBAAM5R,G7B/JY,SAACA,GAClCA,EAAS,CACPvB,KV/C2B,2BuC+MhBgD,EApMI,SAAC,GAA8J,IAA5JzE,EAA2J,EAA3JA,OAAQC,EAAmJ,EAAnJA,UAAWe,EAAwI,EAAxIA,WAAYR,EAA4H,EAA5HA,YAAaG,EAA+G,EAA/GA,QAASE,EAAsG,EAAtGA,cAAe8T,EAAuF,EAAvFA,gBAAiB7E,EAAsE,EAAtEA,WAAYxD,EAA0D,EAA1DA,kBAAmBqE,EAAuC,EAAvCA,iBAAkBiE,EAAqB,EAArBA,cAE9IjI,GAAgG3M,EAApG4B,GAAoG5B,EAAhG2M,YAAYG,EAAoF9M,EAApF8M,UAAWpJ,EAAyE1D,EAAzE0D,MAAOkN,EAAkE5Q,EAAlE4Q,aAAcC,EAAoD7Q,EAApD6Q,UAAWC,EAAyC9Q,EAAzC8Q,MAA6BpR,GAAYM,EAAlC6U,eAAkC7U,EAAlBe,KAAkBf,EAAZN,SAQhG8M,qBAAU,WACRmI,MACC,IAGH1U,EAAU8G,KAAI,SAAA9E,GACRA,EAAQqN,oBAAsBtP,EAAO4B,IACvCkO,EAAW7N,EAAQL,OAMvB,IAAMkT,EACJ,yBAAK9P,UAAWC,KAAM6P,cACpB,yBAAK9P,UAAWC,KAAM8P,eACpB,wBAAI/P,UAAWC,KAAMqI,YAAaX,EAAlC,IAA+CG,GAC/C,yBAAK9H,UAAWC,KAAM+P,mBACpB,uBAAGhQ,UAAWC,KAAMgQ,UAAWpE,GAC/B,yBAAK7L,UAAWC,KAAMqB,cAAef,QAAS,kBAvBpD+G,SACAqE,OAwBW9P,GACD,oCACE,kBAAC,IAAD,CAAQmE,UAAWC,KAAMyO,WACzB,0BAAM1O,UAAWC,KAAM0O,UAAvB,aAUVuB,EACF,yBAAKlQ,UAAWC,KAAMkQ,YAElBL,EAEF,yBAAK9P,UAAWC,KAAMmQ,kBACpB,wBAAIpQ,UAAWC,KAAMoQ,cAArB,gBACA,yBAAKrQ,UAAWC,KAAMqQ,eACpB,kBAAC,IAAD,CAAe9O,aAAW,eAAexB,UAAWC,KAAMsB,OAC1D,uBAAGvB,UAAWC,KAAMsQ,UACjB3E,GAA8B,QAGnC,yBAAK5L,UAAWC,KAAMqQ,eACpB,kBAAC,IAAD,CAAS9O,aAAW,gBAAgBxB,UAAWC,KAAMsB,OACrD,uBAAGvB,UAAWC,KAAMsQ,UACjB7R,GAAgB,SAKvB,yBAAKsB,UAAWC,KAAMmQ,kBACpB,wBAAIpQ,UAAWC,KAAMoQ,cAArB,SACA,uBAAGrQ,UAAWC,KAAMuQ,UAChB1E,GAAgB,6BAItB,yBAAK9L,UAAWC,KAAMmQ,kBACpB,wBAAIpQ,UAAWC,KAAMoQ,cAArB,gBACA,kBAAC,GAAD,CAAarV,OAAQA,KAGvB,yBAAKgF,UAAWC,KAAMmQ,kBAEjBpU,EAAW8F,OAAS,EAEjB,yBAAK9B,UAAWC,KAAMwQ,aACpB,wBAAIzQ,UAAWC,KAAMoQ,cAArB,eACA,yBAAKrQ,UAAWC,KAAMyQ,qBAAsBnQ,QAAS,kBAAMqP,MACzD,kBAAC,IAAD,CAAgB5P,UAAWC,KAAM0Q,cACjC,0BAAM3Q,UAAWC,KAAM2Q,aAAvB,qBAGJ,wBAAI5Q,UAAWC,KAAMoQ,cAArB,eAEN,kBAAC,GAAD,QAMF7U,EAAYC,aACdyU,EACE,yBAAKlQ,UAAWC,KAAMkQ,YAClBL,EACF,kBAAC,GAAD,CAAe9U,OAAQA,MAMzBQ,EAAYE,YACdwU,EACE,yBAAKlQ,UAAWC,KAAMkQ,YAClBL,EACF,kBAAC,GAAD,QAMFnU,EAAQF,aACVyU,EACE,yBAAKlQ,UAAWC,KAAMkQ,YAClBL,EACF,kBAAC,GAAD,QAMFnU,EAAQD,YACVwU,EACE,yBAAKlQ,UAAWC,KAAMkQ,YAClBL,EACF,kBAAC,GAAD,QAMFnU,EAAQC,mBACVsU,EACE,yBAAKlQ,UAAWC,KAAMkQ,YAClBL,EACF,kBAAC,GAAD,QAMN,IAAMe,EACJ,yBAAK7Q,UAAWC,KAAMkQ,YAClBL,EAEF,kBAAC,GAAD,CAAY9U,OAAQA,KAKlB8V,EACJjV,EAAgBgV,EAAmBX,EAGrC,OACExV,EAAU,yCAAoBoW,K,oBCzBnBrR,eAAQ,MAJI,SAACzB,GAAD,MAAe,CACxC+S,aAAc,gBAAEpJ,EAAF,EAAEA,WAAYG,EAAd,EAAcA,UAAWpJ,EAAzB,EAAyBA,MAAOkN,EAAhC,EAAgCA,aAAcC,EAA9C,EAA8CA,UAAWC,EAAzD,EAAyDA,MAAzD,OAAoE9N,EjCvFxD,SAAC,GAAD,IAAG2J,EAAH,EAAGA,WAAYG,EAAf,EAAeA,UAAWpJ,EAA1B,EAA0BA,MAAOkN,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,UAAWC,EAA1D,EAA0DA,MAA1D,8CAAsE,WAAO9N,GAAP,mBAAAY,EAAA,sEAExFC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BvE,aAAaD,SAIrCyE,EAAOC,KAAKC,UAAU,CAAE0I,aAAYG,YAAWpJ,QAAOkN,eAAcC,YAAWC,UATS,SAU5E5M,IAAMC,KAAN,UArEN,wBAqEM,wBAA6CJ,EAAMF,GAVyB,OAUxFO,EAVwF,OAY9FpB,EAAS,CACPvB,KT3EuB,gBS4EvBC,QAAS0C,EAAIC,OAEfrB,EAASJ,EAAS,mBAAoB,UAAW,MAhB6C,kDAkB9FQ,EAAc,EAAD,GAAMJ,GAlB2E,0DAAtE,sDiCuFiE+S,CAAa,CAACpJ,aAAYG,YAAWpJ,QAAOkN,eAAcC,YAAWC,eAGnJrM,EA5IM,SAAC,GAAsB,IAApBsR,EAAmB,EAAnBA,aAAmB,EACPjM,mBAAS,CACzC6C,WAAY,GACZG,UAAW,GACXpJ,MAAO,GACPkN,aAAc,GACdC,UAAW,GACXC,MAAO,KAPgC,oBACjC/G,EADiC,KACvBC,EADuB,KAUnCJ,EAAW,SAACK,GAChBD,EAAY,2BACPD,GADM,mBAERE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAIxBC,EAAQ,uCAAG,WAAOJ,GAAP,SAAArG,EAAA,6DACfqG,EAAEK,iBADa,SAETyL,EAAahM,GAFJ,OAGfC,EAAY,CACV2C,WAAY,GACZG,UAAW,GACXpJ,MAAO,GACPkN,aAAc,GACdC,UAAW,GACXC,MAAO,KATM,2CAAH,sDAad,OACE,yBAAK9L,UAAWC,KAAM+Q,cACpB,wBAAIhR,UAAWC,KAAMkD,QAArB,kBAEA,0BAAMnD,UAAWC,KAAMwF,KAAMJ,SAAUA,GAErC,2BAAOrF,UAAWC,KAAM4J,WAAxB,cACa,0BAAM7J,UAAWC,KAAM2F,cAAvB,eAEb,yBAAK5F,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAU1F,UAAWC,KAAM6J,YAC3B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,aACLU,YAAY,aACZC,aAAa,MACbV,MAAOL,EAAS4C,WAChB/C,SAAUA,EACVmB,UAAQ,EACRtB,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,aACY,0BAAM7J,UAAWC,KAAM2F,cAAvB,eAEZ,yBAAK5F,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAU1F,UAAWC,KAAM6J,YAC3B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,YACLU,YAAY,YACZC,aAAa,MACbV,MAAOL,EAAS+C,UAChBlD,SAAUA,EACVmB,UAAQ,EACRtB,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,SACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAS1F,UAAWC,KAAM6J,YAC1B,kBAAC,GAAD,CACErN,KAAK,QACL0I,KAAK,QACLU,YAAY,QACZC,aAAa,MACbV,MAAOL,EAASrG,MAChBkG,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,gBACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAe1F,UAAWC,KAAM6J,YAChC,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,eACLU,YAAY,eACZC,aAAa,MACbV,MAAOL,EAAS6G,aAChBhH,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,aACA,yBAAK7J,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAW1F,UAAWC,KAAM6J,YAC5B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,YACLU,YAAY,YACZC,aAAa,MACbV,MAAOL,EAAS8G,UAChBjH,SAAUA,EACVH,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,SACA,kBAAC,GAAD,CACEpN,KAAK,WACL0I,KAAK,QACLU,YAAY,QACZC,aAAa,MACbV,MAAOL,EAAS+G,MAChBlH,SAAUA,EACVyE,gBAAc,IAGhB,kBAAC,GAAD,CAAQ5M,KAAK,SAAS4H,cAAY,GAAlC,mB,oBC9CO5E,eAAQ,MAPI,SAACzB,GAAD,MAAe,CACxCiT,QAAS,SAACrU,GAAD,OAAQoB,ElB1CI,SAACpB,GAAD,8CAAQ,WAAOoB,GAAP,iBAAAY,EAAA,sEAErBC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BvE,aAAaD,SALhB,SAST4E,IAAMM,IAAN,UA/CN,wBA+CM,2BAAuC5C,GAAMiC,GATpC,OASrBO,EATqB,OAW3BpB,EAAS,CACPvB,KrBvDoB,aqBwDpBC,QAAS0C,EAAIC,OAbY,gDAgB3BjB,GAAc,EAAD,GAAMJ,GAhBQ,yDAAR,sDkB0CKiT,CAAQrU,KAClCsM,WAAY,SAACtM,EAAImI,GAAL,OAAkB/G,EAASkL,GAAWtM,EAAImI,KACtDmM,WAAY,SAACtU,GAAD,OAAQoB,ElB2BI,SAACpB,GAAD,8CAAQ,WAAOoB,GAAP,eAAAY,EAAA,0DAC5BoM,OAAOC,QAAQ,uEADa,iCAGtBpM,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SALf,SAStB4E,IAAMgM,OAAN,UAtHI,wBAsHJ,2BAA0CtO,EAA1C,KAAiDiC,GAT3B,OAW5Bb,EAAS,CACPvB,KrB5HmB,cqB6HnBC,QAASE,IAEXoB,EAASJ,EAAS,4BAA6B,UAAW,MAf9B,gDAiB5BQ,GAAc,EAAD,GAAMJ,GAjBS,yDAAR,sDkB3BKkT,CAAWtU,KACxCuU,eAAgB,kBAAMnT,G/BOY,SAACA,GACnCA,EAAS,CACPvB,KVjF4B,4ByC2EjBgD,EAhFE,SAAC,GAA+D,IAA7DtD,EAA4D,EAA5DA,KAAM8U,EAAsD,EAAtDA,QAAS/H,EAA6C,EAA7CA,WAAYgI,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,eACjDvU,EAA+CT,EAA/CS,GAAI6F,EAA2CtG,EAA3CsG,MAAO1D,EAAoC5C,EAApC4C,KAAMkK,EAA8B9M,EAA9B8M,aAAcO,EAAgBrN,EAAhBqN,YAEvChC,qBAAU,WACRyJ,EAAQrU,KACP,CAACqU,EAASrU,IALiE,MAO5CkI,mBAAS,CACzCrC,MAAOA,EACP1D,KAAMA,EACNkK,aAAcA,EACdO,YAAaA,IAX+D,oBAOtEzE,EAPsE,KAO5DC,EAP4D,KAexEoM,EAAkB,uCAAG,WAAOC,GAAP,SAAAzS,EAAA,sEACnBqS,EAAQI,GADW,OAEzBF,IAFyB,2CAAH,sDAKlBvM,EAAQ,uCAAG,4BAAAhG,EAAA,6DACT0S,EAAYvM,EAASyE,aAAezE,EAASyE,YACnDxE,EAAY,2BACPD,GADM,IAETyE,YAAa8H,KAJA,SAMTpI,EAAWtM,EAAImI,GANN,2CAAH,qDASd,OACE,yBAAK/E,UAAWC,KAAMsR,UACpB,yBAAKtP,IAAKrF,EAAIoD,UAAWC,KAAMuR,eAC3B,yBAAKxR,UAAWC,KAAMiD,iBACpB,wBAAIlD,UAAWC,KAAMwR,UAAWhP,IAElC,uBAAGzC,UAAWC,KAAMyR,UAAW3S,GAC/B,uBAAGiB,UAAWC,KAAM0R,cAAezH,KAAOjB,GAAckB,OAAO,iBAC/D,yBAAKnK,UAAWC,KAAM2C,iBACpB,yBAAK5C,UAAWC,KAAM2R,qBACpB,2BACEnV,KAAK,WACL0I,KAAK,cACL0M,QAAS9M,EAASyE,YAClB5E,SAAUA,EACV5E,UAAWC,KAAM6R,WAEnB,2BAAO9R,UAAWC,KAAM8R,gBAAxB,cAEF,yBAAK/R,UAAWC,KAAM+R,gBACpB,yBAAKhS,UAAWC,KAAMwO,kBAAmBlO,QAAS,kBAAM6Q,EAAmBxU,KACzE,kBAAC,IAAD,CAAQoD,UAAWC,KAAMyO,SAAUlN,aAAW,cAC9C,0BAAMxB,UAAWC,KAAM0O,UAAvB,SAEF,yBAAK3O,UAAWC,KAAM2O,oBAAqBrO,QAAS,kBAAM2Q,EAAWtU,KACnE,kBAAC,IAAD,CAAiBoD,UAAWC,KAAMgM,WAAYzK,aAAW,gBACzD,0BAAMxB,UAAWC,KAAMiM,YAAvB,kB,oBCgEDzM,gBAVS,SAAClD,GAAD,MAAY,CAClCJ,KAAMI,EAAMJ,KAAKA,SAGQ,SAAC6B,GAAD,MAAe,CACxC6K,YAAa,kBAAM7K,EAAS6K,OAC5BK,WAAY,SAACmI,EAAQtM,GAAT,OAAsB/G,EAASkL,GAAWmI,EAAQtM,KAC9D9D,cAAe,kBAAMjD,GhCzBY,SAACA,GAClCA,EAAS,CACPvB,KVvF2B,2B0CiHhBgD,EAnHE,SAAC,GAAsD,IAApDtD,EAAmD,EAAnDA,KAAM0M,EAA6C,EAA7CA,YAAaK,EAAgC,EAAhCA,WAAYjI,EAAoB,EAApBA,cAAoB,EACnC6D,mBAAS,CACzCrC,MAAOtG,EAAKsG,MAAQtG,EAAKsG,MAAQ,GACjC1D,KAAM5C,EAAK4C,KAAO5C,EAAK4C,KAAO,GAC9BkK,aAAc9M,EAAK8M,aACnBO,YAAarN,EAAKqN,cALiD,oBAC7DzE,EAD6D,KACnDC,EADmD,KAQ/DiN,EAAkB,uCAAG,4BAAArT,EAAA,sDACnB0S,EAAYvM,EAASyE,aAAezE,EAASyE,YACnDxE,EAAY,2BACPD,GADM,IAETyE,YAAa8H,KAJU,2CAAH,qDAQlB1M,EAAW,SAACK,GAChBD,EAAY,2BACPD,GADM,mBAERE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAIxBC,EAAQ,uCAAG,WAAOJ,GAAP,SAAArG,EAAA,6DACfqG,EAAEK,iBADa,SAET4D,EAAW/M,EAAKS,GAAImI,GAFX,OAGf8D,IAHe,2CAAH,sDAMd,OACE,yBAAK7I,UAAWC,KAAMiS,UAEpB,wBAAIlS,UAAWC,KAAMkD,QAArB,eAEA,0BAAMnD,UAAWC,KAAMwF,KAAMJ,SAAUA,GACrC,2BAAOrF,UAAWC,KAAM4J,WAAxB,SACQ,0BAAM7J,UAAWC,KAAM2F,cAAvB,eAER,yBAAK5F,UAAWC,KAAMyF,gBACpB,kBAAC,IAAD,CAAS1F,UAAWC,KAAM6J,YAC1B,kBAAC,GAAD,CACErN,KAAK,OACL0I,KAAK,QACLU,YAAY,QACZC,aAAa,MACbV,MAAOL,EAAStC,MAChBmC,SAAUA,EACVmB,UAAQ,EACRtB,aAAW,KAIf,2BAAOzE,UAAWC,KAAM4J,WAAxB,WACA,kBAAC,GAAD,CACEpN,KAAK,WACL0I,KAAK,OACLU,YAAY,OACZC,aAAa,MACbV,MAAOL,EAAShG,KAChB6F,SAAUA,EACVyE,gBAAc,IAgBhB,yBAAKrJ,UAAWC,KAAM2R,qBACpB,2BACEnV,KAAK,WACL0I,KAAK,cACL0M,QAAS9M,EAASyE,YAClB5E,SAAUqN,EACVjS,UAAWC,KAAM6R,WAEnB,2BAAO9R,UAAWC,KAAM8R,gBAAxB,cAIF,kBAAC,GAAD,CAAQtV,KAAK,SAAS4H,cAAY,GAAlC,WAGF,kBAAC,GAAD,CAAiB+G,gBAAc,EAAC7K,QAAS,kBAAMU,W,oBC9BtCxB,gBATS,SAAClD,GAAD,MAAY,CAClC4V,UAAW5V,EAAMJ,KACjBL,YAAaS,EAAMW,UAAUpB,gBAGJ,SAACkC,GAAD,MAAe,CACxC6K,YAAa,kBAAM7K,EAAS6K,UAGfpJ,EAjEE,SAAC,GAA6C,IAA3C0S,EAA0C,EAA1CA,UAAWrW,EAA+B,EAA/BA,YAAa+M,EAAkB,EAAlBA,YAClC3M,EAAgCiW,EAAhCjW,MAAaxB,GAAmByX,EAAzBhW,KAAyBgW,EAAnBzX,SAAmByX,EAAVvX,MAE9B4M,qBAAU,WACRqB,MACC,CAACA,IAEJ,IAAIuJ,EACF,oCACE,yBAAKpS,UAAWC,KAAMoS,sBAClBnW,EAAM4F,OAAS,EACb,wBAAI9B,UAAWC,KAAMoQ,cAArB,iBACA,wBAAIrQ,UAAWC,KAAMqS,YAArB,iEAMFpW,EAAM6F,KAAI,SAAA5F,GAAI,OACXA,EAAKqN,aAAe,kBAAC,GAAD,CAAUvH,IAAK9F,EAAKS,GAAIT,KAAMA,QAMvDD,EAAM4F,OAAS,GACf,yBAAK9B,UAAWC,KAAMsS,wBACpB,wBAAIvS,UAAWC,KAAMoQ,cAArB,sBAEEnU,EAAM6F,KAAI,SAAA5F,GAAI,OACdA,EAAKqN,aAAe,kBAAC,GAAD,CAAUvH,IAAK9F,EAAKS,GAAIT,KAAMA,SAW5D,OAJIL,IACFsW,EAAmB,kBAAC,GAAD,OAInB,yBAAKpS,UAAWC,KAAMuS,UACpB,wBAAIxS,UAAWC,KAAMkD,QAArB,aACEzI,EAAU,yCAAoB0X,M,wDCmCvB3S,gBAXS,SAAClD,GAAD,MAAY,CAClCR,KAAMQ,EAAMY,IAAIpB,SAGS,SAACiC,GAAD,MAAe,CACxCyU,WAAY,kBAAMzU,EVrEM,uCAAM,WAAOA,GAAP,iBAAAY,EAAA,sEAEtBC,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SAJf,SAQV4E,IAAMM,IAAN,UAlBN,wBAkBM,qBAAyCX,GAR/B,OAQtBO,EARsB,OAU5BpB,EAAS,CACPvB,KjC3BsB,eiC4BtBC,QAAS0C,EAAIC,OAZa,gDAe5BjB,GAAc,EAAD,GAAMJ,GAfS,yDAAN,wDUsExB0U,mBAAoB,SAACvV,GAAD,OAASa,EpC7DG,SAACb,GAAD,OAAS,SAACa,GAC1C,IACEA,EAAS,CACPvB,KX3B+B,wBW4B/BC,QAASS,IAEX,MAAOkB,GACPD,EAAcC,EAAKL,KoCsDiB0U,CAAmBvV,KACzDgE,sBAAuB,kBAAMnD,GpClDY,SAACA,GAC1CA,EAAS,CACPvB,KXrCoC,iC+CsFtCkW,gBAAiB,SAACC,GAAD,OAAa5U,EpC5CD,SAAC4U,GAAD,OAAa,SAAC5U,GAC3CA,EAAS,CACPvB,KX3C6B,oBW4C7BC,QAASkW,KoCyC4BD,CAAgBC,QAG1CnT,EA3EM,SAAC,GAAuF,IAArF1D,EAAoF,EAApFA,KAAM0W,EAA8E,EAA9EA,WAAYC,EAAkE,EAAlEA,mBAAoBvR,EAA8C,EAA9CA,sBAAuBwR,EAAuB,EAAvBA,gBACnFnL,qBAAU,WACRiL,MACC,CAACE,IAEJ,IAAI5N,EAAW,GAGfhJ,EAAKgG,KAAI,SAAA5E,GAAG,OACV4H,EAASjF,KAAK,CACZlD,GAAIO,EAAIP,GACR6F,MAAOtF,EAAIV,KACXiO,QAASvN,EAAIuN,QACbT,KAAMC,KAAO/M,EAAI+Q,UAAU/D,OAAO,cAClCG,kBAAmBnN,EAAImN,uBAc3B,OACE,yBAAKtK,UAAWC,KAAM4S,cAGpB,yBAAK7S,UAAWC,KAAMiD,iBACpB,wBAAIlD,UAAWC,KAAMkD,QAArB,kBAIF,kBAAC,KAAD,CACE2P,YAAY,eACZC,QAAS,CAAEC,KAAeC,KAAgBC,MAC1CC,UAAU,EACVC,OAAQrO,EAASjD,OAAS,EAAIiD,EAAW,GACzCsO,UAvBc,SAACC,GACnBnS,IACAwR,EAAgBW,EAAIC,SACpBxO,EAAShD,KAAI,SAAA5E,GAAG,OACdA,EAAI8M,OAASqJ,EAAIC,SACZb,EAAmBvV,OAmBtBqW,OAAQ,OACRC,WAAY,CACVC,MAAO,SAETC,WAAY,QACZC,WAAY,gB,oBChBLnU,gBAPS,SAAClD,GAAD,MAAY,CAClCpB,SAAUoB,EAAMW,UAAU/B,SAC1BE,YAAakB,EAAMW,UAAU7B,YAC7BC,UAAWiB,EAAMW,UAAU5B,UAC3BC,aAAcgB,EAAMW,UAAU3B,gBAGjBkE,EApCe,SAAC,GAAgE,IAA9DzE,EAA6D,EAA7DA,OAAQG,EAAqD,EAArDA,SAAUE,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAEzE,OACE,yBAAKyE,UAAWC,KAAM4T,uBAEpB,yBAAK7T,UAAWC,KAAM6T,qBAClB3Y,EAASC,UAAY,4CAIrBC,EAAYD,WACA,OAAXJ,EAAkB,kBAAC,GAAD,CAAYA,OAAQA,IAAa,kBAAC,GAAD,OAGpDM,EAAUF,UAAY,kBAAC,GAAD,MAEtBG,EAAaH,UAAY,kBAAC,GAAD,W,oBC6BpBqE,gBAVS,SAAClD,GAAD,MAAY,CAClCxB,QAASwB,EAAMxB,QAAQA,QACvBC,OAAQuB,EAAMxB,QAAQC,OACtBN,QAAS6B,EAAMxB,QAAQL,YAGE,SAACsD,GAAD,MAAe,CACxC+V,cAAe,kBAAM/V,EvCtCM,uCAAM,WAAOA,GAAP,mBAAAY,EAAA,sEAEzBC,EAAS,CACbC,QAAS,CACP,cAAgB,SAAhB,OAA0BvE,aAAaD,SAJZ,SAQb4E,IAAMM,IAAN,UAlBN,wBAkBM,wBAA4CX,GAR/B,OAQzBO,EARyB,OAWzB4U,EAA0B5U,EAAIC,KAAK0J,MAAK,SAACnK,EAAGoK,GAChD,OAAIpK,EAAEkJ,UAAU,GAAKkB,EAAElB,UAAU,IAAc,EAC3ClJ,EAAEkJ,UAAU,GAAKkB,EAAElB,UAAU,GAAa,EACvC,KAGT9J,EAAS,CACPvB,KTlCyB,kBSmCzBC,QAASsX,IAnBoB,gDAsB/B5V,EAAc,EAAD,GAAMJ,GAtBY,yDAAN,2DuCyCdyB,EA5CO,SAAC,GAAiD,IAA/C1E,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,OAAiB+Y,GAAoB,EAA7BrZ,QAA6B,EAApBqZ,eAKjD,OAJAvM,qBAAU,WACRuM,MACC,IAGD,yBAAK/T,UAAWC,KAAMgU,eAGpB,yBAAKjU,UAAWC,KAAMiU,wBACpB,kBAAC,GAAD,OAGF,yBAAKlU,UAAWC,KAAMkU,yBACpB,kBAAC,GAAD,CAAuBpZ,QAASA,KAGlC,yBAAKiF,UAAWC,KAAMmU,yBACpB,kBAAC,GAAD,CAAuBpZ,OAAQA,S,oBC4BxBqZ,GAlCH,WACV,OACE,kBAAC,IAAD,CAAU7W,MAAOA,GAEf,yBAAKwC,UAAWC,KAAMqU,KACpB,kBAAC,IAAD,CAAeC,SAAS,iBAEtB,yBAAKvU,UAAWC,KAAMoB,SACpB,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmT,OAAK,EAACC,KAAK,IAAI/S,UAAWgC,KACjC,kBAAC,IAAD,CAAO8Q,OAAK,EAACC,KAAK,UAAU/S,UAAWgT,KACvC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAU/S,UAAWiT,KAGvC,kBAAC,EAAD,CAAcH,OAAK,EAACC,KAAK,aAAa/S,UAAWkT,KAGjD,kBAAC,IAAD,CAAOlT,UAAW6E,OAKtB,kBAAC,EAAD,UC3CJsO,GACJ,kBAAC,GAAD,MAGFC,IAASlT,OAAOiT,GAAKE,SAASC,eAAe,W","file":"static/js/main.76235673.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clientPage\":\"client-page_clientPage__3Putc\",\"clientHeader\":\"client-page_clientHeader__1ma9Q\",\"nameContainer\":\"client-page_nameContainer__17fdB\",\"clientName\":\"client-page_clientName__1e0rG\",\"jobTitleContainer\":\"client-page_jobTitleContainer__3E3d1\",\"jobTitle\":\"client-page_jobTitle__3CsCD\",\"iconContainer\":\"client-page_iconContainer__3jho-\",\"editIcon\":\"client-page_editIcon__3Rzy3\",\"editText\":\"client-page_editText__1eyYy\",\"sectionContainer\":\"client-page_sectionContainer__Be7Rr\",\"sectionTitle\":\"client-page_sectionTitle__3azhk\",\"infoContainer\":\"client-page_infoContainer__2LMvf\",\"icon\":\"client-page_icon__1h7iH\",\"infoText\":\"client-page_infoText__1Zm17\",\"noteText\":\"client-page_noteText__2520Q\",\"titleHeader\":\"client-page_titleHeader__2XSnQ\",\"viewAllIconContainer\":\"client-page_viewAllIconContainer__1jdeZ\",\"viewAllIcon\":\"client-page_viewAllIcon__23jXQ\",\"viewAllText\":\"client-page_viewAllText__34Orp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardMenuSection\":\"dashboard-menu-section_dashboardMenuSection__3dmNX\",\"navigationInnerContainer\":\"dashboard-menu-section_navigationInnerContainer__1QrVU\",\"navigationTitle\":\"dashboard-menu-section_navigationTitle__1cwe1\",\"navigationMenu\":\"dashboard-menu-section_navigationMenu__3KLfj\",\"menuContainer\":\"dashboard-menu-section_menuContainer__23-DI\",\"iconContainer\":\"dashboard-menu-section_iconContainer__2zTpZ\",\"icon\":\"dashboard-menu-section_icon__2cssW\",\"iconText\":\"dashboard-menu-section_iconText__2OU14\",\"isActiveContainer\":\"dashboard-menu-section_isActiveContainer__147Q9\",\"isActiveIcon\":\"dashboard-menu-section_isActiveIcon__1_cS1\",\"isActiveText\":\"dashboard-menu-section_isActiveText__AxI69\",\"logoutContainer\":\"dashboard-menu-section_logoutContainer__1svOH\",\"logoutIconContainer\":\"dashboard-menu-section_logoutIconContainer__z0FuD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clientEdit\":\"client-edit_clientEdit__1ALlo\",\"headerContainer\":\"client-edit_headerContainer__3olh5\",\"header\":\"client-edit_header__xRyg_\",\"iconContainer\":\"client-edit_iconContainer__2fK9R\",\"deleteIcon\":\"client-edit_deleteIcon__198Vk\",\"deleteText\":\"client-edit_deleteText__WPsBT\",\"form\":\"client-edit_form__2qdbw\",\"formLabel\":\"client-edit_formLabel__4C_Jf\",\"requiredText\":\"client-edit_requiredText__2gt8t\",\"inputContainer\":\"client-edit_inputContainer__L9UKk\",\"inputIcon\":\"client-edit_inputIcon__2Z8le\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeFeatures\":\"home-features_homeFeatures__tX0Vk\",\"headerOuterContainer\":\"home-features_headerOuterContainer__gwTDI\",\"headerContainer\":\"home-features_headerContainer__15NbC\",\"header\":\"home-features_header__QdpAC\",\"subHeader\":\"home-features_subHeader__ya4bI\",\"featuresOuterContainer\":\"home-features_featuresOuterContainer__11hH8\",\"featuresContainer\":\"home-features_featuresContainer__2KkXT\",\"feature\":\"home-features_feature__r-O1a\",\"iconContainer\":\"home-features_iconContainer__FLJLb\",\"icon\":\"home-features_icon__8oS7Y\",\"featureHeader\":\"home-features_featureHeader__qhp57\",\"featureText\":\"home-features_featureText__2gSY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"companyEdit\":\"company-edit_companyEdit__iIWbQ\",\"headerContainer\":\"company-edit_headerContainer__EDh0P\",\"header\":\"company-edit_header__2uDR2\",\"iconContainer\":\"company-edit_iconContainer__3pK8a\",\"deleteIcon\":\"company-edit_deleteIcon__3liwt\",\"deleteText\":\"company-edit_deleteText__1DHyR\",\"form\":\"company-edit_form__2QoFa\",\"formLabel\":\"company-edit_formLabel__2BhJb\",\"requiredText\":\"company-edit_requiredText__3lZs7\",\"inputContainer\":\"company-edit_inputContainer__2iLXA\",\"inputIcon\":\"company-edit_inputIcon__2Yh40\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clientCreate\":\"client-create_clientCreate__13gJ3\",\"header\":\"client-create_header___PIlG\",\"form\":\"client-create_form__13mkV\",\"formLabel\":\"client-create_formLabel__2h-mi\",\"requiredText\":\"client-create_requiredText__3l5-u\",\"inputContainer\":\"client-create_inputContainer__c_TwN\",\"inputIcon\":\"client-create_inputIcon__30ReS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signupPage\":\"signup-page_signupPage__PXf83\",\"formContainer\":\"signup-page_formContainer__qOn06\",\"formHeader\":\"signup-page_formHeader__1iw9E\",\"form\":\"signup-page_form__3oX3V\",\"inputContainer\":\"signup-page_inputContainer__Gz2Yc\",\"inputLabel\":\"signup-page_inputLabel__2jFNA\",\"requiredText\":\"signup-page_requiredText__24YOS\",\"termsAndConditionsContainer\":\"signup-page_termsAndConditionsContainer__3Zf4S\",\"termsAndConditionsText\":\"signup-page_termsAndConditionsText__2lAlJ\",\"haveAccountText\":\"signup-page_haveAccountText__12vXv\",\"signinText\":\"signup-page_signinText__1VDIt\",\"signupLandingSection\":\"signup-page_signupLandingSection__3UvtG\",\"imageContainer\":\"signup-page_imageContainer__2VsYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"companyItem\":\"company-item_companyItem__1cn-q\",\"companyContainer\":\"company-item_companyContainer__1fJRn\",\"companyTitle\":\"company-item_companyTitle__NFGc7\",\"companyTitleTwo\":\"company-item_companyTitleTwo__3jDSr\",\"companyText\":\"company-item_companyText__Z7nhA\",\"link\":\"company-item_link__1VKuB\",\"buttonContainer\":\"company-item_buttonContainer__PzJCj\",\"viewIconContainer\":\"company-item_viewIconContainer__9q7q-\",\"viewIcon\":\"company-item_viewIcon__3Hygs\",\"viewText\":\"company-item_viewText__3IeR0\",\"addIconContainer\":\"company-item_addIconContainer__2Su5g\",\"addIcon\":\"company-item_addIcon__iQWgJ\",\"addText\":\"company-item_addText__1ZfJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logItem\":\"log-item_logItem__2pVJs\",\"logContainer\":\"log-item_logContainer__3UoTw\",\"headerContainer\":\"log-item_headerContainer__3mhro\",\"logType\":\"log-item_logType__ruaUv\",\"logText\":\"log-item_logText__1SIH0\",\"logDateText\":\"log-item_logDateText__1riTY\",\"buttonContainer\":\"log-item_buttonContainer__w48P1\",\"editIconContainer\":\"log-item_editIconContainer__1lRb-\",\"editIcon\":\"log-item_editIcon__1ZtoC\",\"editText\":\"log-item_editText__dUgar\",\"deleteIconContainer\":\"log-item_deleteIconContainer__wUZlZ\",\"deleteIcon\":\"log-item_deleteIcon__cf2LA\",\"deleteText\":\"log-item_deleteText__jwNUK\",\"addLogContainer\":\"log-item_addLogContainer__1JjvK\",\"addLogText\":\"log-item_addLogText__346RC\",\"addButtonContainer\":\"log-item_addButtonContainer__26uoL\",\"addIconContainer\":\"log-item_addIconContainer__JyJo4\",\"addIcon\":\"log-item_addIcon__3eL5y\",\"addText\":\"log-item_addText__3KFz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"companyCreate\":\"company-create_companyCreate__lecil\",\"header\":\"company-create_header__1cDWM\",\"form\":\"company-create_form__ls3_L\",\"formLabel\":\"company-create_formLabel__3iNzu\",\"requiredText\":\"company-create_requiredText__3Zf0v\",\"inputContainer\":\"company-create_inputContainer__1W3m1\",\"inputIcon\":\"company-create_inputIcon__1PZeO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskItem\":\"task-item_taskItem__K2kEq\",\"taskContainer\":\"task-item_taskContainer__1U_Zr\",\"headerContainer\":\"task-item_headerContainer__2Sx6r\",\"taskType\":\"task-item_taskType__1bklQ\",\"taskText\":\"task-item_taskText__pM7Ci\",\"taskDateText\":\"task-item_taskDateText__1WuRu\",\"buttonContainer\":\"task-item_buttonContainer__34Yu3\",\"isCompleteContainer\":\"task-item_isCompleteContainer__3Grqa\",\"checkbox\":\"task-item_checkbox__4EH5U\",\"isCompleteText\":\"task-item_isCompleteText__3Xh4L\",\"iconsContainer\":\"task-item_iconsContainer__2-pUv\",\"editIconContainer\":\"task-item_editIconContainer__2ELjh\",\"editIcon\":\"task-item_editIcon__3WwKz\",\"editText\":\"task-item_editText__1Ulrj\",\"deleteIconContainer\":\"task-item_deleteIconContainer__1U21C\",\"deleteIcon\":\"task-item_deleteIcon__4ArDv\",\"deleteText\":\"task-item_deleteText__3UagV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logAllItems\":\"log-all-items_logAllItems__3D7IK\",\"clientLogsContainer\":\"log-all-items_clientLogsContainer__2pb2k\",\"header\":\"log-all-items_header__CCb1D\",\"clientLogItem\":\"log-all-items_clientLogItem__MnbED\",\"headerContainer\":\"log-all-items_headerContainer__3HzRR\",\"logType\":\"log-all-items_logType__3z0u-\",\"logText\":\"log-all-items_logText__1eRhT\",\"logDateText\":\"log-all-items_logDateText__3qlmL\",\"buttonContainer\":\"log-all-items_buttonContainer__2sBPa\",\"editIconContainer\":\"log-all-items_editIconContainer__2oyw8\",\"editIcon\":\"log-all-items_editIcon__BghHz\",\"editText\":\"log-all-items_editText__3lJHi\",\"deleteIconContainer\":\"log-all-items_deleteIconContainer__1gaiY\",\"deleteIcon\":\"log-all-items_deleteIcon__6AJ-r\",\"deleteText\":\"log-all-items_deleteText__IHV4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signinPage\":\"signin-page_signinPage__2joq_\",\"formContainer\":\"signin-page_formContainer__UTTHW\",\"formHeader\":\"signin-page_formHeader__8ugxx\",\"form\":\"signin-page_form__2Qq3g\",\"inputContainer\":\"signin-page_inputContainer__3gWsx\",\"inputLabel\":\"signin-page_inputLabel__1ngkI\",\"requiredText\":\"signin-page_requiredText__2IMQP\",\"haveAccountText\":\"signin-page_haveAccountText__UA1hd\",\"signinText\":\"signin-page_signinText__26d1Z\",\"signinLandingSection\":\"signin-page_signinLandingSection__1k_Xs\",\"imageContainer\":\"signin-page_imageContainer__2qEKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeLanding\":\"home-landing_homeLanding__3Qjvt\",\"landingContainer\":\"home-landing_landingContainer__2my7s\",\"textContainer\":\"home-landing_textContainer__Iqob0\",\"title\":\"home-landing_title__2WIAC\",\"titleTwo\":\"home-landing_titleTwo__1y57A\",\"subtitle\":\"home-landing_subtitle__1uuks\",\"buttonContainer\":\"home-landing_buttonContainer__rbe2T\",\"button\":\"home-landing_button__MOIck\",\"link\":\"home-landing_link__3ZPqs\",\"imageContainer\":\"home-landing_imageContainer__1bB7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__20Nxu\",\"innerNavbarContainer\":\"navbar_innerNavbarContainer__17naj\",\"logoContainer\":\"navbar_logoContainer__hJhzc\",\"logo\":\"navbar_logo__1G7tl\",\"links\":\"navbar_links__390R1\",\"link\":\"navbar_link__1vMp5\",\"logoutButton\":\"navbar_logoutButton__32Gik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logCreate\":\"log-create_logCreate__3fK-n\",\"header\":\"log-create_header__2kxSW\",\"form\":\"log-create_form__3Lysp\",\"formLabel\":\"log-create_formLabel__B3Owg\",\"requiredText\":\"log-create_requiredText__HYT1q\",\"inputContainer\":\"log-create_inputContainer__3viMj\",\"inputIcon\":\"log-create_inputIcon__26cHn\",\"returnContainer\":\"log-create_returnContainer__D9sZ6\",\"returnIcon\":\"log-create_returnIcon__mkAvA\",\"returnText\":\"log-create_returnText__2zJb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskEdit\":\"task-edit_taskEdit__1FNwr\",\"header\":\"task-edit_header__1SwWh\",\"form\":\"task-edit_form__E6595\",\"formLabel\":\"task-edit_formLabel__wonCx\",\"requiredText\":\"task-edit_requiredText__4ZXYe\",\"inputContainer\":\"task-edit_inputContainer__Go2rV\",\"inputIcon\":\"task-edit_inputIcon__2tS7l\",\"isCompleteContainer\":\"task-edit_isCompleteContainer__X9kru\",\"checkbox\":\"task-edit_checkbox__3Wkhz\",\"isCompleteText\":\"task-edit_isCompleteText__1aFpm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarMobile\":\"navbar-mobile_navbarMobile__2WTTL\",\"content\":\"navbar-mobile_content__1DHIg\",\"iconContainer\":\"navbar-mobile_iconContainer__NLC1H\",\"icon\":\"navbar-mobile_icon__2sh2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2Enh_\",\"signupPage\":\"button_signupPage__2y1rb\",\"addButton\":\"button_addButton__2e6s2\",\"deleteButton\":\"button_deleteButton__1HF9f\",\"addCompany\":\"button_addCompany__redZR\",\"deleteCompany\":\"button_deleteCompany__105vP\",\"clientButton\":\"button_clientButton__1W428\",\"todoButton\":\"button_todoButton__2s2a8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clientList\":\"client-list_clientList__3K57M\",\"header\":\"client-list_header__3tHv_\",\"headerTop\":\"client-list_headerTop__28vmy\",\"clientListTitle\":\"client-list_clientListTitle__uCsrw\",\"icon\":\"client-list_icon__Wmyjm\",\"searchbar\":\"client-list_searchbar__1nf5q\",\"clientListItem\":\"client-list_clientListItem__2qTiC\",\"letter\":\"client-list_letter__12R_O\",\"clientName\":\"client-list_clientName__im2CN\",\"noClientText\":\"client-list_noClientText__KwdBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarDateInfo\":\"calendar-date-info_calendarDateInfo__2F_pE\",\"header\":\"calendar-date-info_header__Ml2aB\",\"headerDate\":\"calendar-date-info_headerDate__IQs2B\",\"calendarDateInfoContainer\":\"calendar-date-info_calendarDateInfoContainer__3xktm\",\"logClient\":\"calendar-date-info_logClient__1vDCg\",\"logType\":\"calendar-date-info_logType__13Wbo\",\"logText\":\"calendar-date-info_logText__38W2p\",\"loadingText\":\"calendar-date-info_loadingText__3FUWe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskCreate\":\"task-create_taskCreate__Db6YE\",\"header\":\"task-create_header__UOxEe\",\"title\":\"task-create_title__29zNo\",\"form\":\"task-create_form__2sUpj\",\"formLabel\":\"task-create_formLabel__2fng7\",\"requiredText\":\"task-create_requiredText__12AdC\",\"inputContainer\":\"task-create_inputContainer__3_8yn\",\"inputIcon\":\"task-create_inputIcon__hGaSK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logEdit\":\"log-edit_logEdit__3WnQB\",\"header\":\"log-edit_header__vckfL\",\"form\":\"log-edit_form__1zBNJ\",\"formLabel\":\"log-edit_formLabel__nxk8_\",\"requiredText\":\"log-edit_requiredText__NvHrK\",\"inputContainer\":\"log-edit_inputContainer__oJUvZ\",\"inputIcon\":\"log-edit_inputIcon__6myfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskPage\":\"task-page_taskPage__1duTn\",\"header\":\"task-page_header__1s6vQ\",\"pendingTodoContainer\":\"task-page_pendingTodoContainer__3Nxoj\",\"sectionTitle\":\"task-page_sectionTitle__306Dh\",\"emptyTitle\":\"task-page_emptyTitle__CNYX-\",\"completedTodoContainer\":\"task-page_completedTodoContainer__3QhLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNotFound\":\"page-not-found_pageNotFound__3XHV1\",\"textContainer\":\"page-not-found_textContainer__23ptl\",\"textItems\":\"page-not-found_textItems__3TnIu\",\"header\":\"page-not-found_header__3rnrf\",\"text\":\"page-not-found_text__2Bdgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__1grBf\",\"alertSuccess\":\"alert_alertSuccess__qqk6v\",\"alertDanger\":\"alert_alertDanger__yDh1k\",\"alertWarning\":\"alert_alertWarning__3nty1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"form-input_formInput__39LPe\",\"clientInput\":\"form-input_clientInput__2JpyE\",\"signupInput\":\"form-input_signupInput__1KYMq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardPage\":\"dashboard-page_dashboardPage__2Gw6f\",\"dashboardMenuContainer\":\"dashboard-page_dashboardMenuContainer__2xAfq\",\"dashboardSmallContainer\":\"dashboard-page_dashboardSmallContainer__2FZ4K\",\"dashboardLargeContainer\":\"dashboard-page_dashboardLargeContainer__AHDUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"returnContainer\":\"return-container_returnContainer__2G_et\",\"returnIcon\":\"return-container_returnIcon__1q77o\",\"returnText\":\"return-container_returnText__CjlX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarLogs\":\"calendar-logs_calendarLogs__39cNC\",\"headerContainer\":\"calendar-logs_headerContainer__2yhip\",\"header\":\"calendar-logs_header__1WIW9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardSmallSection\":\"dashboard-small-section_dashboardSmallSection__FaDTc\",\"smallInnerContainer\":\"dashboard-small-section_smallInnerContainer__33J3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardLargeSection\":\"dashboard-large-section_dashboardLargeSection__1Had1\",\"largeInnerContainer\":\"dashboard-large-section_largeInnerContainer__1vLfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__28WFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formTextArea\":\"form-text-area_formTextArea__VM4Nx\",\"clientTextArea\":\"form-text-area_clientTextArea__2LkgZ\"};","import { SET_ALERT, REMOVE_ALERT } from './alert.types';\r\n\r\nconst INITIAL_STATE = [];\r\n\r\nexport const alertReducer = (state=INITIAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case SET_ALERT:\r\n      return [\r\n        ...state,\r\n        action.payload,\r\n      ];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  };\r\n};","import { \r\n  REGISTRATION_SUCCESS, REGISTRATION_FAIL, \r\n  USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_USER, AUTH_ERROR,\r\n} from './auth.types';\r\n\r\nconst INITIAL_STATE = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  user: null,\r\n  error: {},\r\n};\r\n\r\nexport const authReducer = (state=INITIAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case REGISTRATION_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: {\r\n          ...state.user,\r\n          ...action.payload,\r\n        }\r\n      };\r\n    case LOGIN_FAIL:\r\n    case LOGOUT_USER:\r\n    case REGISTRATION_FAIL:\r\n    case AUTH_ERROR:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { \r\n  GET_CALENDAR_DATE_LOGS, ADD_CALENDAR_DATE_LOG, RESET_CALENDAR_DATE_LOGS, SET_CALENDAR_DATE, CALENDAR_ERROR \r\n} from './calendar.types';\r\n\r\nconst INITIAL_STATE = {\r\n  calendarDateLogs: [],\r\n  calendarDate: '',\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\n// *************************** CALENDAR REDUCER *************************** //\r\nexport const calendarReducer = (state=INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_CALENDAR_DATE_LOGS:\r\n      return {\r\n        ...state,\r\n        calendarDateLogs: state.calendarDateLogs,\r\n        loading: false,\r\n      };\r\n    case ADD_CALENDAR_DATE_LOG:\r\n      return {\r\n        ...state,\r\n        calendarDateLogs: [...state.calendarDateLogs, action.payload],\r\n        loading: false,\r\n      };\r\n    case RESET_CALENDAR_DATE_LOGS:\r\n      return {\r\n        ...state,\r\n        calendarDateLogs: [],\r\n        calendarDate: '',\r\n        // loading: true,\r\n        loading: false,\r\n      };\r\n    case SET_CALENDAR_DATE:\r\n      return {\r\n        ...state,\r\n        calendarDate: action.payload,\r\n        loading: false,\r\n      };\r\n    case CALENDAR_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import {\r\n  GET_ALL_CLIENTS, GET_A_CLIENT, RESET_CLIENT, CLIENT_ERROR, DELETE_CLIENT, UPDATE_CLIENT, CREATE_CLIENT\r\n} from './clients.types';\r\n\r\nconst INITIAL_STATE = {\r\n  clients: [],\r\n  client: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\n// *************************** CLIENTS REDUCER *************************** //\r\nexport const clientsReducer = (state=INITIAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case GET_ALL_CLIENTS:\r\n      return {\r\n        ...state,\r\n        clients: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_A_CLIENT:\r\n    case UPDATE_CLIENT:\r\n      return {\r\n        ...state,\r\n        client: action.payload,\r\n        loading: false,\r\n      };\r\n    case CREATE_CLIENT:\r\n      return {\r\n        ...state,\r\n        clients: [...state.clients, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_CLIENT:\r\n      return {\r\n        ...state,\r\n        clients: state.clients.filter(client => client.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case RESET_CLIENT:\r\n      return {\r\n        ...state,\r\n        client: null,\r\n        loading: false,\r\n      };\r\n    case CLIENT_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { \r\n  GET_ALL_COMPANIES, GET_COMPANY, CREATE_COMPANY, UPDATE_COMPANY, DELETE_COMPANY, COMPANY_ERROR \r\n} from './company.types';\r\n\r\nconst INITIAL_STATE = {\r\n  companies: [],\r\n  currentCompany: {},\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\n// *************************** COMPANY REDUCER *************************** //\r\nexport const companyReducer = (state=INITIAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case GET_ALL_COMPANIES:\r\n      return {\r\n        ...state,\r\n        companies: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_COMPANY:\r\n    case UPDATE_COMPANY:\r\n      return {\r\n        ...state,\r\n        currentCompany: action.payload,\r\n        loading: false,\r\n      };\r\n    case CREATE_COMPANY:\r\n      return {\r\n        ...state,\r\n        companies: [...state.companies, action.payload],\r\n        currentCompany: action.payload,\r\n        loading: false,\r\n      };\r\n    case DELETE_COMPANY:\r\n      return {\r\n        ...state,\r\n        companies: state.companies.filter(company => company.id !== action.payload),\r\n        currentCompany: {},\r\n        loading: false,\r\n      };\r\n    case COMPANY_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { \r\n  TOGGLE_HOME_MENU, TOGGLE_CLIENTS_MENU, TOGGLE_TASKS_MENU, TOGGLE_CALENDAR_MENU, TOGGLE_CREATE_COMPANY, TOGGLE_EDIT_COMPANY, RESET_COMPANY_STATE, TOGGLE_ALL_LOGS, TOGGLE_CREATE_LOG, TOGGLE_EDIT_LOG, RESET_LOG_STATE, TOGGLE_EDIT_CLIENT, RESET_EDIT_CLIENT, TOGGLE_EDIT_TASK, RESET_EDIT_TASK,\r\n} from './dashboard.types';\r\n\r\nconst INITIAL_STATE = {\r\n  homeMenu: { isActive: false },\r\n  clientsMenu: { isActive: true },\r\n  tasksMenu: { isActive: false },\r\n  calendarMenu: { isActive: false },\r\n  companyMenu: {\r\n    isCreating: false,\r\n    isEditing: false,\r\n  },\r\n  logMenu: {\r\n    isViewingAllLogs: false,\r\n    isCreating: false,\r\n    isEditing: false,\r\n  },\r\n  editingClient: false,\r\n  editingTask: false,\r\n};\r\n\r\n// *************************** DASHBOARD REDUCER *************************** //\r\nexport const dashboardReducer = (state=INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_HOME_MENU:\r\n      return {\r\n        ...state,\r\n        homeMenu: { isActive: true },\r\n        clientsMenu: { isActive: false },\r\n        tasksMenu: { isActive: false },\r\n        calendarMenu: { isActive: false },\r\n      };\r\n    case TOGGLE_CLIENTS_MENU:\r\n      return {\r\n        ...state,\r\n        homeMenu: { isActive: false },\r\n        clientsMenu: { isActive: true },\r\n        tasksMenu: { isActive: false },\r\n        calendarMenu: { isActive: false },\r\n      };\r\n    case TOGGLE_TASKS_MENU:\r\n      return {\r\n        ...state,\r\n        homeMenu: { isActive: false },\r\n        clientsMenu: { isActive: false },\r\n        tasksMenu: { isActive: true },\r\n        calendarMenu: { isActive: false },\r\n      };\r\n    case TOGGLE_CALENDAR_MENU:\r\n      return {\r\n        ...state,\r\n        homeMenu: { isActive: false },\r\n        clientsMenu: { isActive: false },\r\n        tasksMenu: { isActive: false },\r\n        calendarMenu: { isActive: true },\r\n      };\r\n    case TOGGLE_CREATE_COMPANY:\r\n      return {\r\n        ...state,\r\n        companyMenu: {\r\n          isCreating: true,\r\n          isEditing: false,\r\n        },\r\n        logMenu: {\r\n          isViewingAllLogs: false,\r\n          isCreating: false,\r\n          isEditing: false,\r\n        },\r\n      };\r\n    case TOGGLE_EDIT_COMPANY:\r\n      return {\r\n        ...state,\r\n        companyMenu: {\r\n          isCreating: false,\r\n          isEditing: true,\r\n        },\r\n        logMenu: {\r\n          isViewingAllLogs: false,\r\n          isCreating: false,\r\n          isEditing: false,\r\n        },\r\n      };\r\n    case RESET_COMPANY_STATE:\r\n    case RESET_LOG_STATE:\r\n      return {\r\n        ...state,\r\n        companyMenu: {\r\n          isCreating: false,\r\n          isEditing: false,\r\n        },\r\n        logMenu: {\r\n          isViewingAllLogs: false,\r\n          isCreating: false,\r\n          isEditing: false,\r\n        },\r\n      };\r\n    case TOGGLE_ALL_LOGS:\r\n      return {\r\n        ...state,\r\n        companyMenu: {\r\n          isCreating: false,\r\n          isEditing: false,\r\n        },\r\n        logMenu: {\r\n          isViewingAllLogs: true,\r\n          isCreating: false,\r\n          isEditing: false,\r\n        },\r\n      };\r\n    case TOGGLE_CREATE_LOG:\r\n      return {\r\n        ...state,\r\n        companyMenu: { \r\n          isCreating: false, \r\n          isEditing: false, \r\n        },\r\n        logMenu: {\r\n          isViewingAllLogs: false,\r\n          isCreating: true,\r\n          isEditing: false,\r\n        },\r\n      };\r\n    case TOGGLE_EDIT_LOG:\r\n      return {\r\n        ...state,\r\n        companyMenu: { \r\n          isCreating: false, \r\n          isEditing: false, \r\n        },\r\n        logMenu: {\r\n          isViewingAllLogs: false,\r\n          isCreating: false,\r\n          isEditing: true,\r\n        },\r\n      };\r\n    case TOGGLE_EDIT_CLIENT:\r\n      return {\r\n        ...state,\r\n        editingClient: !state.editingClient,\r\n      };\r\n    case RESET_EDIT_CLIENT:\r\n      return {\r\n        ...state,\r\n        editingClient: false,\r\n      };\r\n    case TOGGLE_EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        editingTask: !state.editingTask,\r\n      };\r\n    case RESET_EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        editingTask: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { \r\n  GET_ALL_LOGS, GET_CLIENT_LOGS, GET_LOG, CREATE_LOG, DELETE_LOG, UPDATE_LOG, LOG_ERROR\r\n} from './log.types';\r\n\r\nconst INITIAL_STATE = {\r\n  logs: [],\r\n  clientLogs: [],\r\n  currentLog: {},\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\n// *************************** LOG REDUCER *************************** //\r\nexport const logReducer = (state=INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_CLIENT_LOGS:\r\n      return {\r\n        ...state,\r\n        clientLogs: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_LOG:\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        currentLog: action.payload,\r\n        loading: false,\r\n      };\r\n    case CREATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        clientLogs: [action.payload, ...state.clientLogs],\r\n        loading: false,\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter(log => log.id !== action.payload),\r\n        clientLogs: state.clientLogs.filter(clientLog => clientLog.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case LOG_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { \r\n  GET_ALL_TASKS, GET_A_TASK, CREATE_TASK, UPDATE_TASK, DELETE_TASK, TASK_ERROR \r\n} from './task.types';\r\n\r\nconst INITIAL_STATE = {\r\n  tasks: [],\r\n  task: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\n// *************************** TASK REDUCER *************************** //\r\nexport const taskReducer = (state=INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_TASKS:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_A_TASK:\r\n    case UPDATE_TASK:\r\n      return {\r\n        ...state,\r\n        task: action.payload,\r\n        loading: false,\r\n      };\r\n    case CREATE_TASK:\r\n      return {\r\n        tasks: [...state.tasks, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(task => task.id !== action.payload)\r\n      };\r\n    case TASK_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\n\r\nimport { alertReducer } from './alert/alert.reducer';\r\nimport { authReducer } from './auth/auth.reducer';\r\nimport { calendarReducer } from './calendar/calendar.reducer';\r\nimport { clientsReducer } from './clients/clients.reducer';\r\nimport { companyReducer } from './company/company.reducer';\r\nimport { dashboardReducer } from './dashboard/dashboard.reducer';\r\nimport { logReducer } from './log/log.reducer';\r\nimport { taskReducer } from './task/task.reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  alert: alertReducer,\r\n  auth: authReducer,\r\n  calendar: calendarReducer,\r\n  clients: clientsReducer,\r\n  company: companyReducer,\r\n  dashboard: dashboardReducer,\r\n  log: logReducer,\r\n  task: taskReducer,\r\n});","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';","export const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS';\r\nexport const REGISTRATION_FAIL = 'REGISTRATION_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';","export const GET_CALENDAR_DATE_LOGS = 'GET_CALENDAR_DATE_LOGS';\r\nexport const ADD_CALENDAR_DATE_LOG = 'ADD_CALENDAR_DATE_LOG';\r\nexport const RESET_CALENDAR_DATE_LOGS = 'RESET_CALENDAR_DATE_LOGS';\r\nexport const SET_CALENDAR_DATE = 'SET_CALENDAR_DATE';\r\nexport const CALENDAR_ERROR = 'CALENDAR_ERROR';","export const GET_ALL_CLIENTS = 'GET_ALL_CLIENTS';\r\nexport const GET_A_CLIENT = 'GET_A_CLIENT';\r\nexport const RESET_CLIENT = 'RESET_CLIENT';\r\nexport const CREATE_CLIENT = 'CREATE_CLIENT';\r\nexport const DELETE_CLIENT = 'DELETE_CLIENT';\r\nexport const UPDATE_CLIENT = 'UPDATE_CLIENT';\r\nexport const CLIENT_ERROR = 'CLIENT_ERROR';","export const GET_ALL_COMPANIES = 'GET_ALL_COMPANIES';\r\nexport const GET_COMPANY = 'GET_COMPANY';\r\nexport const CREATE_COMPANY = 'CREATE_COMPANY';\r\nexport const UPDATE_COMPANY = 'UPDATE_COMPANY';\r\nexport const DELETE_COMPANY = 'DELETE_COMPANY';\r\nexport const COMPANY_ERROR = 'COMPANY_ERROR';\r\n","export const TOGGLE_HOME_MENU = 'TOGGLE_HOME_MENU';\r\nexport const TOGGLE_CLIENTS_MENU = 'TOGGLE_CLIENTS_MENU';\r\nexport const TOGGLE_TASKS_MENU = 'TOGGLE_TASKS_MENU';\r\nexport const TOGGLE_CALENDAR_MENU = 'TOGGLE_CALENDAR_MENU';\r\n\r\nexport const TOGGLE_CREATE_COMPANY = 'TOGGLE_CREATE_COMPANY';\r\nexport const TOGGLE_EDIT_COMPANY = 'TOGGLE_EDIT_COMPANY';\r\nexport const RESET_COMPANY_STATE = 'RESET_COMPANY_STATE';\r\n\r\nexport const TOGGLE_ALL_LOGS = 'TOGGLE_ALL_LOGS';\r\nexport const TOGGLE_CREATE_LOG = 'TOGGLE_CREATE_LOG';\r\nexport const TOGGLE_EDIT_LOG = 'TOGGLE_EDIT_LOG';\r\nexport const RESET_LOG_STATE = 'RESET_LOG_STATE';\r\n\r\nexport const TOGGLE_EDIT_CLIENT = 'TOGGLE_EDIT_CLIENT';\r\nexport const RESET_EDIT_CLIENT = 'RESET_EDIT_CLIENT';\r\n\r\nexport const TOGGLE_EDIT_TASK = 'TOGGLE_EDIT_TASK';\r\nexport const RESET_EDIT_TASK = 'RESET_EDIT_TASK';","export const GET_ALL_LOGS = 'GET_ALL_LOGS';\r\nexport const GET_CLIENT_LOGS = 'GET_CLIENT_LOGS';\r\nexport const GET_LOG = 'GET_LOG';\r\nexport const CREATE_LOG = 'CREATE_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const LOG_ERROR = 'LOG_ERROR';","export const GET_ALL_TASKS = 'GET_ALL_TASKS';\r\nexport const GET_A_TASK = 'GET_A_TASK';\r\nexport const CREATE_TASK = 'CREATE_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const TASK_ERROR = 'TASK_ERROR';","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport { rootReducer } from './root-reducer';\r\n\r\nexport const middlewares = [thunk, logger];\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)));","import uuid from 'uuid/dist/v4';\r\nimport { SET_ALERT, REMOVE_ALERT } from './alert.types';\r\n\r\n// *************************** SET / REMOVE ALERT *************************** //\r\nexport const setAlert = (msg, alertType, timeout=2000) => (dispatch) => {\r\n  const id = uuid()\r\n\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: {\r\n      msg,\r\n      alertType,\r\n      id\r\n    }\r\n  });\r\n\r\n  // Removes ALERT after assigned 'timeout' length\r\n  setTimeout(() => dispatch({\r\n    type: REMOVE_ALERT,\r\n    payload: id,\r\n  }), timeout);\r\n};\r\n","import axios from 'axios';\r\nimport { setAlert } from '../alert/alert.actions';\r\nimport { \r\n  REGISTRATION_SUCCESS, REGISTRATION_FAIL, \r\n  USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_USER, AUTH_ERROR, \r\n} from './auth.types';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n// const API_URL = 'http://45.55.46.165:8000';\r\n\r\nconst deployOnError = (err, dispatch, msg) => {\r\n  const errors = err.response.statusText;\r\n  errors && dispatch(setAlert(msg || errors, 'danger', 2000));\r\n  dispatch({ type: REGISTRATION_FAIL, payload: errors });\r\n};\r\n\r\n\r\n// *************************** SET AUTH TOKEN *************************** //\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\n\r\n// *************************** LOAD USER *************************** //\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Token ${localStorage.token}`,\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(`${API_URL}/api/user/me/`, config);\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n// *************************** REGISTER USER *************************** //\r\nexport const registerUser = ({ email, password, name }) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    };\r\n    \r\n    const body = JSON.stringify({ email, password, name });\r\n\r\n    const res = await axios.post(`${API_URL}/api/user/create/`, body, config);\r\n\r\n    dispatch({\r\n      type: REGISTRATION_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loginUser(email, password));\r\n    dispatch(setAlert('Registration Successful', 'success', 2000));\r\n  } catch (err) {\r\n    deployOnError(err, dispatch, 'Registration Unsuccessful');\r\n  }\r\n};\r\n\r\n// *************************** LOGIN USER *************************** //\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(`${API_URL}/api/user/token/`, body, config)\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n    dispatch(setAlert('Login Successful', 'success', 2000));\r\n  } catch (err) {\r\n    deployOnError(err, dispatch, 'Login Unsuccessful');\r\n  }\r\n};\r\n\r\n// *************************** LOGOUT USER *************************** //\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT_USER,\r\n  });\r\n};","import React, { } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { logoutUser } from '../../redux/auth/auth.actions';\r\n\r\nimport style from './navbar.module.scss';\r\n\r\n// *************************** NAVBAR PAGE COMPONENT *************************** //\r\nconst Navbar = ({ isAuthenticated, user, logoutUser }) => {\r\n  const history = useHistory()\r\n\r\n  const onLogout = async () => {\r\n    await logoutUser();\r\n    history.push('/');\r\n  };\r\n\r\n  const notAuthLinks = (\r\n    <ul className={style.links}>\r\n      <li>\r\n        <NavLink to='/' className={style.link}>Features</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to='/signup' className={style.link}>Sign Up</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to='/signin' className={style.link}>Sign In</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const authLinks = (\r\n    <ul className={style.links}>\r\n      <li>\r\n        <NavLink to='/dashboard' className={style.link}>Dashboard</NavLink>\r\n      </li>\r\n      <li>\r\n        <span className={style.logoutButton} onClick={onLogout}>Logout</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className={style.navbar}>\r\n\r\n      <div className={style.innerNavbarContainer}>\r\n        <div className={style.logoContainer}>\r\n          <NavLink to='/' className={style.logo}>AgileClient</NavLink>\r\n        </div>\r\n        {\r\n          isAuthenticated ? authLinks : notAuthLinks\r\n        }\r\n      </div>\r\n\r\n    </nav>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nNavbar.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  user: PropTypes.object,\r\n  logoutUser: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logoutUser: () => dispatch(logoutUser()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import axios from 'axios';\r\nimport { setAlert } from '../alert/alert.actions';\r\nimport {\r\n  GET_ALL_CLIENTS, GET_A_CLIENT, RESET_CLIENT, CLIENT_ERROR, DELETE_CLIENT, UPDATE_CLIENT, CREATE_CLIENT\r\n} from './clients.types';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n// const API_URL = 'http://45.55.46.165:8000';\r\n\r\nconst deployOnError = (err, dispatch, msg) => {\r\n  const errors = err.response.statusText;\r\n  errors && dispatch(setAlert(msg || errors, 'danger', 2000));\r\n  dispatch({ type: CLIENT_ERROR, payload: errors });\r\n};\r\n\r\n// *************************** GET ALL CLIENTS *************************** //\r\nexport const getAllClients = () => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n\r\n    const res = await axios.get(`${API_URL}/api/client/clients/`, config);\r\n\r\n    // Sort 'clients' in alphabetical order by LAST_NAME\r\n    const sortedClientsByLastName = res.data.sort((a, b) => {\r\n      if (a.last_name[0] < b.last_name[0]) { return -1 }\r\n      if (a.last_name[0] > b.last_name[0]) { return 1}\r\n      return 0\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_ALL_CLIENTS,\r\n      payload: sortedClientsByLastName,\r\n    });\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** GET A CLIENT *************************** //\r\nexport const getAClient = (id) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n\r\n    const res = await axios.get(`${API_URL}/api/client/clients/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: GET_A_CLIENT,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** CREATE CLIENT *************************** //\r\nexport const createClient = ({ first_name, last_name, email, phone_number, job_title, notes }) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.token}`\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({ first_name, last_name, email, phone_number, job_title, notes });\r\n    const res = await axios.post(`${API_URL}/api/client/clients/`, body, config);\r\n\r\n    dispatch({\r\n      type: CREATE_CLIENT,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('New Client Added', 'success', 2000));\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** DELETE CLIENT *************************** //\r\nexport const deleteClient = (id) => async (dispatch) => {\r\n  if (window.confirm('Please confirm you want to delete this client. This action cannot be undone.')) {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Authorization': `Token ${localStorage.token}`,\r\n        }\r\n      };\r\n  \r\n      await axios.delete(`${API_URL}/api/client/clients/${id}/`, config);\r\n  \r\n      dispatch({\r\n        type: DELETE_CLIENT,\r\n        payload: id\r\n      });\r\n      dispatch(setAlert('Client Deleted Successfully', 'success', 2000));\r\n    } catch (err) {\r\n      deployOnError(err, dispatch);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// *************************** UPDATE CLIENT *************************** //\r\nexport const updateClient = (id, formData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.token}`\r\n      }\r\n    };\r\n\r\n    const res = await axios.put(`${API_URL}/api/client/clients/${id}/`, formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_CLIENT,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Client Updated', 'success', 2000));\r\n  } catch (err) {\r\n    const errors = err.response.statusText;\r\n  }\r\n};\r\n\r\n\r\n// *************************** RESET CLIENT *************************** //\r\nexport const resetClient = () => (dispatch) => {\r\n  dispatch({ type: RESET_CLIENT });\r\n};","import { \r\n  GET_CALENDAR_DATE_LOGS, ADD_CALENDAR_DATE_LOG, RESET_CALENDAR_DATE_LOGS, SET_CALENDAR_DATE, CALENDAR_ERROR \r\n} from './calendar.types';\r\nimport { setAlert } from '../alert/alert.actions';\r\n\r\n\r\nconst deployOnError = (err, dispatch, msg) => {\r\n  const errors = err.response.statusText;\r\n  errors && dispatch(setAlert(msg || errors, 'danger', 2000));\r\n  dispatch({ type: CALENDAR_ERROR, payload: errors });\r\n};\r\n\r\n\r\n// *************************** GET CALENDAR DATE LOGS *************************** //\r\nexport const getCalendarDateLogs = () => (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_CALENDAR_DATE_LOGS,\r\n    });\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  };\r\n};\r\n\r\n// *************************** ADD CALENDAR DATE LOG *************************** //\r\nexport const addCalendarDateLog = (log) => (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ADD_CALENDAR_DATE_LOG,\r\n      payload: log,\r\n    });\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  };\r\n};\r\n\r\n// *************************** RESET CALENDAR DATE LOGS *************************** //\r\nexport const resetCalendarDateLogs = () => (dispatch) => {\r\n  dispatch({\r\n    type: RESET_CALENDAR_DATE_LOGS,\r\n  });\r\n};\r\n\r\n// *************************** SET CALENDAR DATE *************************** //\r\nexport const setCalendarDate = (logDate) => (dispatch) => {\r\n  dispatch({ \r\n    type: SET_CALENDAR_DATE,\r\n    payload: logDate, \r\n  });\r\n};","import React, { } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { FaTasks, FaRegCalendarAlt } from 'react-icons/fa';\r\nimport { MdPermContactCalendar } from 'react-icons/md';\r\nimport { RiLogoutBoxRLine } from 'react-icons/ri';\r\n\r\nimport { \r\n  toggleHomeMenu, toggleClientsMenu, toggleTasksMenu, toggleCalendarMenu, resetEditTask, \r\n} from '../../redux/dashboard/dashboard.actions';\r\nimport { resetClient } from '../../redux/clients/clients.actions';\r\nimport { resetCalendarDateLogs } from '../../redux/calendar/calendar.actions';\r\nimport { logoutUser } from '../../redux/auth/auth.actions';\r\n\r\nimport style from './navbar-mobile.module.scss';\r\n\r\n// *************************** NAVBAR MOBILE COMPONENT *************************** //\r\nconst NavbarMobile = ({ isAuthenticated, toggleClientsMenu, toggleTasksMenu, toggleCalendarMenu, resetEditTask, resetClient, resetCalendarDateLogs, logoutUser }) => {\r\n  const history = useHistory();\r\n\r\n  const setClientsMenu = () => {\r\n    toggleClientsMenu();\r\n    resetClient();\r\n    resetEditTask();\r\n    resetCalendarDateLogs();\r\n  };\r\n\r\n  \r\n  const setCalendarMenu = () => {\r\n    toggleCalendarMenu();\r\n    resetClient();\r\n    resetEditTask();\r\n    resetCalendarDateLogs();\r\n  };\r\n  \r\n  const setTasksMenu = () => {\r\n    toggleTasksMenu();\r\n    resetClient();\r\n    resetEditTask();\r\n    resetCalendarDateLogs();\r\n  };\r\n\r\n  const onLogout = async () => {\r\n    await logoutUser();\r\n    history.push('/');\r\n  };\r\n\r\n  // If authenticated, render the dashboard navbar-mobile setup\r\n  return (\r\n    !isAuthenticated \r\n      ? <nav></nav>\r\n      :\r\n        <nav className={style.navbarMobile}>\r\n\r\n          <div className={style.content}>   \r\n\r\n            {/* CLIENTS */}\r\n            <div className={style.iconContainer} onClick={setClientsMenu}>\r\n              <MdPermContactCalendar className={style.icon} aria-label='Open Clients Section' />\r\n            </div>\r\n\r\n            {/* CALENDAR */}\r\n            <div className={style.iconContainer} onClick={setCalendarMenu}>\r\n              <FaRegCalendarAlt className={style.icon} aria-label='Open Calendar Section' />\r\n            </div>\r\n\r\n            {/* TASKS */}\r\n            <div className={style.iconContainer} onClick={setTasksMenu}>\r\n              <FaTasks className={style.icon} aria-label='Open Tasks Section' />\r\n            </div>\r\n\r\n            {/* LOGOUT */}\r\n            <div className={style.iconContainer}>\r\n              <RiLogoutBoxRLine \r\n                className={style.icon}\r\n                aria-label='Logout'\r\n                onClick={onLogout} \r\n              />\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </nav>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nNavbarMobile.propTypes = {\r\n  toggleHomeMenu: PropTypes.func.isRequired,\r\n  toggleClientsMenu: PropTypes.func.isRequired,\r\n  toggleTasksMenu: PropTypes.func.isRequired,\r\n  toggleCalendarMenu: PropTypes.func.isRequired,\r\n  resetEditTask: PropTypes.func.isRequired,\r\n  resetClient: PropTypes.func.isRequired,\r\n  resetCalendarDateLogs: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleHomeMenu: () => dispatch(toggleHomeMenu()),\r\n  toggleClientsMenu: () => dispatch(toggleClientsMenu()),\r\n  toggleTasksMenu: () => dispatch(toggleTasksMenu()),\r\n  toggleCalendarMenu: () => dispatch(toggleCalendarMenu()),\r\n  resetEditTask: () => dispatch(resetEditTask()),\r\n  resetClient: () => dispatch(resetClient()),\r\n  resetCalendarDateLogs: () => dispatch(resetCalendarDateLogs()),\r\n  logoutUser: () => dispatch(logoutUser()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarMobile);","import { \r\n  TOGGLE_HOME_MENU, TOGGLE_CLIENTS_MENU, TOGGLE_TASKS_MENU, TOGGLE_CALENDAR_MENU, TOGGLE_CREATE_COMPANY, TOGGLE_EDIT_COMPANY, RESET_COMPANY_STATE, TOGGLE_ALL_LOGS, TOGGLE_CREATE_LOG, TOGGLE_EDIT_LOG, RESET_LOG_STATE, TOGGLE_EDIT_CLIENT, RESET_EDIT_CLIENT, TOGGLE_EDIT_TASK, RESET_EDIT_TASK,\r\n} from './dashboard.types';\r\n\r\n// *************************** TOGGLE HOME MENU *************************** //\r\nexport const toggleHomeMenu = () => (dispatch) => {\r\n  dispatch({\r\n    type: TOGGLE_HOME_MENU,\r\n  });\r\n};\r\n\r\n// *************************** TOGGLE CLIENTS MENU *************************** //\r\nexport const toggleClientsMenu = () => (dispatch) => {\r\n  dispatch({\r\n    type: TOGGLE_CLIENTS_MENU,\r\n  });\r\n};\r\n\r\n// *************************** TOGGLE TASKS MENU *************************** //\r\nexport const toggleTasksMenu = () => (dispatch) => {\r\n  dispatch({\r\n    type: TOGGLE_TASKS_MENU,\r\n  });\r\n};\r\n\r\n// *************************** TOGGLE CALENDAR MENU *************************** //\r\nexport const toggleCalendarMenu = () => (dispatch) => {\r\n  dispatch({\r\n    type: TOGGLE_CALENDAR_MENU,\r\n  });\r\n};\r\n\r\n// *************************** TOGGLE CREATE COMPANY *************************** //\r\nexport const toggleCreateCompany = () => (dispatch) => {\r\n  dispatch({\r\n    type: TOGGLE_CREATE_COMPANY,\r\n  });\r\n};\r\n\r\n// *************************** TOGGLE EDIT COMPANY *************************** //\r\nexport const toggleEditCompany = () => (dispatch) => {\r\n  dispatch({\r\n    type: TOGGLE_EDIT_COMPANY,\r\n  });\r\n};\r\n\r\n// *************************** RESET COMPANY STATE *************************** //\r\nexport const resetCompanyState = () => (dispatch) => {\r\n  dispatch({\r\n    type: RESET_COMPANY_STATE,\r\n  });\r\n};\r\n\r\n// *************************** TOGGLE ALL LOGS *************************** //\r\nexport const toggleAllLogs = () => (dispatch) => {\r\n  dispatch({\r\n    type: TOGGLE_ALL_LOGS,\r\n  });\r\n};\r\n\r\n// *************************** TOGGLE CREATE LOG *************************** //\r\nexport const toggleCreateLog = () => (dispatch) => {\r\n  dispatch({\r\n    type: TOGGLE_CREATE_LOG,\r\n  });\r\n};\r\n\r\n// *************************** TOGGLE EDIT LOG *************************** //\r\nexport const toggleEditLog = () => (dispatch) => {\r\n  dispatch({\r\n    type: TOGGLE_EDIT_LOG,\r\n  });\r\n};\r\n\r\n// *************************** RESET LOG STATE *************************** //\r\nexport const resetLogState = () => (dispatch) => {\r\n  dispatch({\r\n    type: RESET_LOG_STATE,\r\n  });\r\n};\r\n\r\n// *************************** TOGGLE EDIT CLIENT *************************** //\r\nexport const toggleEditClient = () => (dispatch) => {\r\n  dispatch({\r\n    type: TOGGLE_EDIT_CLIENT,\r\n  });\r\n};\r\n\r\n// *************************** RESET EDIT CLIENT *************************** //\r\nexport const resetEditClient = () => (dispatch) => {\r\n  dispatch({\r\n    type: RESET_EDIT_CLIENT,\r\n  });\r\n};\r\n\r\n// *************************** TOGGLE EDIT TASK *************************** //\r\nexport const toggleEditTask = () => (dispatch) => {\r\n  dispatch({\r\n    type: TOGGLE_EDIT_TASK,\r\n  });\r\n};\r\n\r\n// *************************** RESET EDIT TASK *************************** //\r\nexport const resetEditTask = () => (dispatch) => {\r\n  dispatch({\r\n    type: RESET_EDIT_TASK,\r\n  });\r\n};\r\n\r\n","import React, { } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n// *************************** PRIVATE ROUTE COMPONENT *************************** //\r\nconst PrivateRoute = ({ component: Component, isAuthenticated, loading, ...otherProps }) => {\r\n  return (\r\n    <Route\r\n      {...otherProps}\r\n      render={props => !isAuthenticated\r\n        ? (<Redirect to='/' />)\r\n        : (<Component {...props} />)\r\n      }\r\n    />\r\n  )\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  loading: state.auth.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from './alert.module.scss';\r\n\r\n// *************************** ALERT COMPONENT *************************** //\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    (alert !== null && alert.length > 0 )\r\n    &&\r\n    alert.map(alertItem => (\r\n      <div\r\n        key={alertItem.id}\r\n        className={`\r\n          ${alertItem.alertType === 'success' ? style.alertSuccess : ''}\r\n          ${alertItem.alertType === 'warning' ? style.alertWarning : ''}\r\n          ${alertItem.alertType === 'danger' ? style.alertDanger : ''}\r\n          ${style.alert}\r\n        `}\r\n      >\r\n        { alertItem.msg }\r\n      </div>\r\n    ))\r\n  );\r\n};\r\n\r\n// PROP TYPES\r\nAlert.propTypes = {\r\n  alert: PropTypes.array.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  alert: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);","import React, { } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport style from './home-landing.module.scss';\r\n\r\n// *************************** HOME LANDING COMPONENT *************************** //\r\nconst HomeLanding = () => {\r\n  return (\r\n    <section className={style.homeLanding}>\r\n\r\n      <div className={style.landingContainer}>\r\n        <div className={style.textContainer}>\r\n          <h1 className={style.title}>Meet People.</h1>\r\n          <h1 className={style.titleTwo}>Make Clients.</h1>\r\n          <h3 className={style.subtitle}>The Power to Stay Connected</h3>\r\n\r\n          <div className={style.buttonContainer}>\r\n            <NavLink to='/' className={style.link}>\r\n              <button className={style.button}>Features</button>\r\n            </NavLink>\r\n            <NavLink to='/signup' className={style.link}>\r\n              <button className={style.button}>Join Now</button>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={style.imageContainer} />\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default HomeLanding;","import React, { } from 'react';\r\nimport { FaTasks, FaRegCalendarAlt } from 'react-icons/fa';\r\nimport { MdPermContactCalendar } from 'react-icons/md';\r\n\r\nimport style from './home-features.module.scss';\r\n\r\n// *************************** HOME SUMMARY COMPONENT *************************** //\r\nconst HomeFeatures = () => {\r\n  return (\r\n    <section className={style.homeFeatures}>\r\n\r\n      {/* HEADER CONTAINER */}\r\n      <div className={style.headerOuterContainer}>\r\n        <div className={style.headerContainer}>\r\n          <h2 className={style.header}>Designed for the business and individual alike.</h2>\r\n          <p className={style.subHeader}>\r\n            Connect to the information you need with speed and flexibilty.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* SUMMARY CONTAINER */}\r\n      <div className={style.featuresOuterContainer}>\r\n        <div className={style.featuresContainer}>\r\n          {/* FEATURE - CLIENT LIST */}\r\n          <div className={style.feature}>\r\n            <div className={style.iconContainer}>\r\n              <MdPermContactCalendar className={style.icon} />\r\n            </div>\r\n            <h3 className={style.featureHeader}>Client List</h3>\r\n            <p className={style.featureText}>\r\n              An all-in-one client list. Keep track of client details, information on their company and keep a log of any past meetings.\r\n            </p>\r\n          </div>\r\n          {/* FEATURE - CALENDAR INTEGRATION */}\r\n          <div className={style.feature}>\r\n            <div className={style.iconContainer}>\r\n              <FaRegCalendarAlt className={style.icon} />\r\n            </div>\r\n            <h3 className={style.featureHeader}>Calendar Integration</h3>\r\n            <p className={style.featureText}>\r\n              A detailed month-to-month tracker of any past logs or meetings with your clients.\r\n            </p>\r\n          </div>\r\n          {/* FEATURE - TASK MANAGER */}\r\n          <div className={style.feature}>\r\n            <div className={style.iconContainer}>\r\n              <FaTasks className={style.icon} />\r\n            </div>\r\n            <h3 className={style.featureHeader}>Task Manager</h3>\r\n            <p className={style.featureText}>\r\n              A powerful task manager allowing you to stay on top of your business.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default HomeFeatures;","import React, { } from 'react';\r\n\r\nimport HomeLanding from '../../components-home/home-landing/HomeLanding';\r\nimport HomeFeatures from '../../components-home/home-features/HomeFeatures';\r\n\r\nimport style from './home-page.module.scss';\r\n\r\n// *************************** HOME PAGE COMPONENT *************************** //\r\nconst HomePage = () => {\r\n  return (\r\n    <div className={style.homePage} test-attr='component-homepage'>\r\n      \r\n      <HomeLanding />\r\n      <HomeFeatures />\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default HomePage;","import React, { } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from './button.module.scss';\r\n\r\n// *************************** BUTTON COMPONENT *************************** //\r\nconst Button = ({ landingPage, signinPage, signupPage, addButton, deleteButton, addCompany, deleteCompany, clientButton, todoButton, children, onClick, ...otherProps }) => {\r\n  return (\r\n    <button\r\n      className={`\r\n        ${landingPage ? style.landingPage : ''}\r\n        ${signinPage ? style.signinPage : ''}\r\n        ${signupPage ? style.signupPage : ''}\r\n        ${addButton ? style.addButton : ''}\r\n        ${deleteButton ? style.deleteButton : ''}\r\n        ${addCompany ? style.addCompany : ''}\r\n        ${deleteCompany ? style.deleteCompany : ''}\r\n        ${clientButton ? style.clientButton : ''}\r\n        ${todoButton ? style.todoButton : ''}\r\n        ${style.button}\r\n      `}\r\n      onClick={onClick}\r\n      {...otherProps}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nButton.propTypes = { \r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;","import React, { } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from './form-input.module.scss';\r\n\r\n// *************************** FORM INPUT COMPONENT *************************** //\r\nconst FormInput = ({ clientInput, signupInput, signinInput, onChange, ...otherProps }) => {\r\n  return (\r\n    <input \r\n      className={`\r\n        ${clientInput ? style.clientInput : ''}\r\n        ${signupInput ? style.signupInput : ''}\r\n        ${signinInput ? style.signinInput : ''}\r\n        ${style.formInput}\r\n      `}\r\n      onChange={onChange}\r\n      {...otherProps}\r\n    />\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nFormInput.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FormInput;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loginUser } from '../../redux/auth/auth.actions';\r\n\r\nimport Button from '../../components/button/Button';\r\nimport FormInput from '../../components/form-input/FormInput';\r\n\r\nimport style from './signin-page.module.scss';\r\n\r\n// *************************** SIGNIN PAGE COMPONENT *************************** //\r\nconst SigninPage = ({ isAuthenticated, loginUser }) => {\r\n  const history = useHistory()\r\n  const [ formData, setFormData ] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await loginUser(formData.email, formData.password);\r\n    setFormData({ email: '', password: ''});\r\n    history.push('/dashboard');\r\n  };\r\n\r\n  return (\r\n    <div className={style.signinPage}>\r\n      \r\n      {/* FORM SECTION */}\r\n      <div className={style.formContainer}>\r\n        <h2 className={style.formHeader}>Sign in to Agile Client</h2>\r\n        <form className={style.form} onSubmit={onSubmit}>\r\n          <div className={style.inputContainer}>\r\n            <label className={style.inputLabel}>\r\n              Email Address\r\n              <span className={style.requiredText}>(required)</span>\r\n            </label>\r\n            <FormInput\r\n              type='email'\r\n              name='email'\r\n              placeholder='Email'\r\n              autoComplete='off'\r\n              value={formData.email}\r\n              onChange={onChange}\r\n              required\r\n              signupInput\r\n            />\r\n          </div>\r\n          <div className={style.inputContainer}>\r\n            <label className={style.inputLabel}>\r\n              Password\r\n              <span className={style.requiredText}>(required)</span>\r\n            </label>\r\n            <FormInput\r\n              type='password'\r\n              name='password'\r\n              placeholder='Password'\r\n              autoComplete='off'\r\n              value={formData.password}\r\n              onChange={onChange}\r\n              required\r\n              signupInput\r\n            />\r\n          </div>\r\n\r\n          <Button type='submit' signupPage>Sign In</Button>\r\n\r\n          <p className={style.haveAccountText}>\r\n            Not registered?\r\n            <span\r\n              className={style.signinText}\r\n              onClick={() => history.push('/signup')}\r\n            >\r\n              Sign Up\r\n            </span>\r\n          </p>\r\n        </form>\r\n      </div>\r\n\r\n      {/* SIGN UP LANDING SECTION */}\r\n      <div className={style.signinLandingSection}>\r\n        <div className={style.imageContainer} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loginUser: (email, password) => dispatch(loginUser(email, password)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SigninPage);","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { registerUser } from '../../redux/auth/auth.actions';\r\n\r\nimport Button from '../../components/button/Button';\r\nimport FormInput from '../../components/form-input/FormInput';\r\n\r\nimport style from './signup-page.module.scss';\r\n\r\n// *************************** SIGN UP PAGE COMPONENT *************************** //\r\nconst SignupPage = ({ registerUser }) => {\r\n  const [ formData, setFormData ] = useState({\r\n    email: '',\r\n    password: '',\r\n    name: '',\r\n  });\r\n\r\n  const { email, password, name } = formData;\r\n\r\n  const history = useHistory();\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    registerUser({ email, password, name });\r\n    setFormData({email: '', password: '', name: ''});\r\n    history.push('/dashboard');\r\n  };\r\n\r\n  return (\r\n    <div className={style.signupPage}>\r\n      \r\n      {/* SIGN UP LANDING SECTION */}\r\n      <div className={style.signupLandingSection}>\r\n        <div className={style.imageContainer} />\r\n      </div>\r\n      \r\n      {/* FORM SECTION */}\r\n      <div className={style.formContainer}>\r\n        <h2 className={style.formHeader}>Sign up for Agile Client</h2>\r\n        <form className={style.form} onSubmit={onSubmit}>\r\n          <div className={style.inputContainer}>\r\n            <label className={style.inputLabel}>\r\n              Username\r\n              <span className={style.requiredText}>(required)</span>\r\n            </label>\r\n            <FormInput\r\n              type='text'\r\n              name='name'\r\n              placeholder='Username'\r\n              autoComplete='off'\r\n              value={name}\r\n              onChange={onChange}\r\n              required\r\n              signupInput\r\n            />\r\n          </div>\r\n          <div className={style.inputContainer}>\r\n            <label className={style.inputLabel}>\r\n              Email Address\r\n              <span className={style.requiredText}>(required)</span>\r\n            </label>\r\n            <FormInput\r\n              type='email'\r\n              name='email'\r\n              placeholder='Email'\r\n              autoComplete='off'\r\n              value={email}\r\n              onChange={onChange}\r\n              required\r\n              signupInput\r\n            />\r\n          </div>\r\n          <div className={style.inputContainer}>\r\n            <label className={style.inputLabel}>\r\n              Password\r\n              <span className={style.requiredText}>(6+ characters)</span>\r\n            </label>\r\n            <FormInput\r\n              type='password'\r\n              name='password'\r\n              placeholder='Password'\r\n              autoComplete='off'\r\n              value={password}\r\n              onChange={onChange}\r\n              required\r\n              signupInput\r\n            />\r\n          </div>\r\n\r\n          <div className={style.termsAndConditionsContainer}>\r\n            <p className={style.termsAndConditionsText}>\r\n              Creating an account means you're okay with our Terms of Service and Privacy Policy.\r\n            </p>\r\n          </div>\r\n\r\n          <Button type='submit' signupPage>Create Account</Button>\r\n\r\n          <p className={style.haveAccountText}>\r\n            Already a User?\r\n            <span\r\n              className={style.signinText}\r\n              onClick={() => history.push('/signin')}\r\n            >\r\n              Sign In\r\n            </span>\r\n          </p>\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// REDUX\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  registerUser: ({email, password, name}) => dispatch(registerUser({email, password, name})),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignupPage);","import React, { } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport Button from '../../components/button/Button';\r\n\r\nimport style from './page-not-found.module.scss';\r\n\r\n// *************************** PAGE NOT FOUND COMPONENT (404) *************************** //\r\nconst PageNotFound = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={style.pageNotFound}>\r\n      \r\n      <div className={style.textContainer}>\r\n        <div className={style.textItems}>\r\n          <h1 className={style.header}>Page Not Found</h1>\r\n          <p className={style.text}>\r\n            The page you're looking for is not available. Follow the link below to go back to the home page.\r\n          </p>\r\n        </div>\r\n        {/* <Link to='/' className={style.link}>Back Home</Link> */}\r\n        <Button onClick={() => history.push('/')} todoButton>Back Home</Button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default PageNotFound;","import React, { } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { FaTasks, FaRegCalendarAlt } from 'react-icons/fa';\r\nimport { MdPermContactCalendar } from 'react-icons/md';\r\nimport { RiLogoutBoxRLine } from 'react-icons/ri';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { \r\n  toggleHomeMenu, toggleClientsMenu, toggleTasksMenu, toggleCalendarMenu, resetEditTask, \r\n} from '../../redux/dashboard/dashboard.actions';\r\nimport { resetClient } from '../../redux/clients/clients.actions';\r\nimport { resetCalendarDateLogs } from '../../redux/calendar/calendar.actions';\r\nimport { logoutUser } from '../../redux/auth/auth.actions';\r\n\r\nimport style from './dashboard-menu-section.module.scss';\r\n\r\n// *************************** DASHBOARD MENU SECTION COMPONENT *************************** //\r\nconst DashboardMenuSection = ({ homeMenu, clientsMenu, tasksMenu, calendarMenu, toggleHomeMenu, toggleClientsMenu, toggleTasksMenu, toggleCalendarMenu, resetEditTask, resetClient, resetCalendarDateLogs, logoutUser }) =>  {\r\n  const history = useHistory();\r\n\r\n  // const setHomeMenu = () => {\r\n  //   toggleHomeMenu();\r\n  //   resetClient();\r\n  //   resetEditTask();\r\n  //   resetCalendarDateLogs();\r\n  // };\r\n\r\n  const setClientsMenu = () => {\r\n    toggleClientsMenu();\r\n    resetClient();\r\n    resetEditTask();\r\n    resetCalendarDateLogs();\r\n  };\r\n\r\n  const setTasksMenu = () => {\r\n    toggleTasksMenu();\r\n    resetClient();\r\n    resetEditTask();\r\n    resetCalendarDateLogs();\r\n  };\r\n\r\n  const setCalendarMenu = () => {\r\n    toggleCalendarMenu();\r\n    resetClient();\r\n    resetEditTask();\r\n    resetCalendarDateLogs();\r\n  };\r\n\r\n  const onLogout = async () => {\r\n    await logoutUser();\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className={style.dashboardMenuSection}>\r\n\r\n      <div className={style.navigationInnerContainer}>\r\n        <h1 className={style.navigationTitle}>MENU</h1>\r\n\r\n        <div className={style.navigationMenu}>\r\n          <div className={style.menuContainer}>\r\n            {/* CLIENTS SECTION */}\r\n            <div className={style.iconContainer} id={clientsMenu.isActive ? style.isActiveContainer : ''} onClick={setClientsMenu}>\r\n              <MdPermContactCalendar className={style.icon} id={clientsMenu.isActive ? style.isActiveIcon : ''} />\r\n              <span className={style.iconText} id={clientsMenu.isActive ? style.isActiveText : ''}>Clients</span>\r\n            </div>\r\n            {/* CALENDAR SECTION */}\r\n            <div className={style.iconContainer} id={calendarMenu.isActive ? style.isActiveContainer : ''} onClick={setCalendarMenu}>\r\n              <FaRegCalendarAlt className={style.icon} id={calendarMenu.isActive ? style.isActiveIcon : ''} />\r\n              <span className={style.iconText} id={calendarMenu.isActive ? style.isActiveText : ''}>Calendar</span>\r\n            </div>\r\n            {/* TASKS SECTION */}\r\n            <div className={style.iconContainer} id={tasksMenu.isActive ? style.isActiveContainer : ''} onClick={setTasksMenu}>\r\n              <FaTasks className={style.icon} id={tasksMenu.isActive ? style.isActiveIcon : ''} />\r\n              <span className={style.iconText} id={tasksMenu.isActive ? style.isActiveText : ''}>Tasks</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* LOGOUT SECTION */}\r\n          <div className={style.logoutContainer}>\r\n            <div className={style.logoutIconContainer} onClick={onLogout}>\r\n              <RiLogoutBoxRLine className={style.icon} />\r\n              <span className={style.iconText} id={tasksMenu.isActive ? style.isActiveText : ''}>Logout</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nDashboardMenuSection.propTypes = {\r\n  homeMenu: PropTypes.object.isRequired,\r\n  clientsMenu: PropTypes.object.isRequired,\r\n  tasksMenu: PropTypes.object.isRequired,\r\n  calendarMenu: PropTypes.object.isRequired,\r\n  toggleHomeMenu: PropTypes.func.isRequired,\r\n  toggleClientsMenu: PropTypes.func.isRequired,\r\n  toggleTasksMenu: PropTypes.func.isRequired,\r\n  toggleCalendarMenu: PropTypes.func.isRequired,\r\n  resetEditTask: PropTypes.func.isRequired,\r\n  resetClient: PropTypes.func.isRequired,\r\n  resetCalendarDateLogs: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  homeMenu: state.dashboard.homeMenu,\r\n  clientsMenu: state.dashboard.clientsMenu,\r\n  tasksMenu: state.dashboard.tasksMenu,\r\n  calendarMenu: state.dashboard.calendarMenu,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleHomeMenu: () => dispatch(toggleHomeMenu()),\r\n  toggleClientsMenu: () => dispatch(toggleClientsMenu()),\r\n  toggleTasksMenu: () => dispatch(toggleTasksMenu()),\r\n  toggleCalendarMenu: () => dispatch(toggleCalendarMenu()),\r\n  resetEditTask: () => dispatch(resetEditTask()),\r\n  resetClient: () => dispatch(resetClient()),\r\n  resetCalendarDateLogs: () => dispatch(resetCalendarDateLogs()),\r\n  logoutUser: () => dispatch(logoutUser()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardMenuSection);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport uuid from 'uuid/dist/v4';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nimport { getAClient, resetClient } from '../../redux/clients/clients.actions';\r\nimport { resetCompanyState, resetEditClient } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport style from './client-list.module.scss';\r\n\r\n// *************************** CLIENT LIST COMPONENT *************************** //\r\nconst ClientList = ({ clients, getAClient, resetClient, resetCompanyState, resetEditClient }) => {\r\n  // 'clients' array passed down as prop from 'DashboardPage.js'\r\n  \r\n  useEffect(() => {\r\n    \r\n  }, [getAClient]);\r\n\r\n  // Reset 'client' state to allow User to create new 'client' object\r\n  const resetClientState = () => {\r\n    resetClient();\r\n    resetCompanyState();\r\n    resetEditClient();\r\n  };\r\n  \r\n  // Allow User to filter 'clients' array to search for specific Client\r\n  const [ search, setSearch ] = useState('');\r\n  clients = clients.filter(client => {\r\n    return (client.first_name.toLowerCase().includes(search.toLowerCase()) || client.last_name.toLowerCase().includes(search.toLowerCase()))\r\n  });\r\n\r\n  // onChange method for filtering search input\r\n  const onChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  // Retrieve 'client' object from store and set 'client' by id onClick\r\n  const onClickSetClient = (id) => {\r\n    getAClient(id);\r\n    resetEditClient();\r\n    resetCompanyState();\r\n  };\r\n\r\n  // Setup to sort 'clients' by corresponding letter into correct array\r\n  const sortedByLastName = [\r\n    { letter: 'A', sortedClients: [] },\r\n    { letter: 'B', sortedClients: [] },\r\n    { letter: 'C', sortedClients: [] },\r\n    { letter: 'D', sortedClients: [] },\r\n    { letter: 'E', sortedClients: [] },\r\n    { letter: 'F', sortedClients: [] },\r\n    { letter: 'G', sortedClients: [] },\r\n    { letter: 'H', sortedClients: [] },\r\n    { letter: 'I', sortedClients: [] },\r\n    { letter: 'J', sortedClients: [] },\r\n    { letter: 'K', sortedClients: [] },\r\n    { letter: 'L', sortedClients: [] },\r\n    { letter: 'M', sortedClients: [] },\r\n    { letter: 'N', sortedClients: [] },\r\n    { letter: 'O', sortedClients: [] },\r\n    { letter: 'P', sortedClients: [] },\r\n    { letter: 'Q', sortedClients: [] },\r\n    { letter: 'R', sortedClients: [] },\r\n    { letter: 'S', sortedClients: [] },\r\n    { letter: 'T', sortedClients: [] },\r\n    { letter: 'U', sortedClients: [] },\r\n    { letter: 'V', sortedClients: [] },\r\n    { letter: 'W', sortedClients: [] },\r\n    { letter: 'X', sortedClients: [] },\r\n    { letter: 'Y', sortedClients: [] },\r\n    { letter: 'Z', sortedClients: [] },\r\n  ];\r\n\r\n  // Sort 'clients' into separate arrays by 1st letter of 'last_name'\r\n  for (let i = 0; i < clients.length; i++) {\r\n    for (let j = 0; j < sortedByLastName.length; j++) {\r\n      if (clients[i].last_name[0] === sortedByLastName[j].letter) {\r\n        sortedByLastName[j].sortedClients.push(clients[i])\r\n      }\r\n    }\r\n  };\r\n\r\n  // Render sorted 'clients' to ClientList.js page\r\n  const clientsOrderedByLastName = sortedByLastName.map(name => (\r\n    name.sortedClients.length > 0 \r\n      &&\r\n        <div key={uuid()} className={style.clientListItem}>\r\n          <h3 className={style.letter}>{name.letter}</h3>\r\n          {name.sortedClients.map(client => (\r\n            <p \r\n              key={client.id} \r\n              className={style.clientName}\r\n              onClick={() => onClickSetClient(client.id)}\r\n            >\r\n              {client.first_name} {client.last_name}\r\n            </p>\r\n          ))}\r\n        </div>\r\n\r\n  ));\r\n\r\n  // Final Render (if clients exist, render 'clientsOrderedByLastName' : 'noClientText')\r\n  const renderClientList = (\r\n    clients.length > 0\r\n      ? clientsOrderedByLastName\r\n      : <p className={style.noClientText}>\r\n          No clients currently. Use 'Add New Client' form to add a new client. Click the green plus sign to open the 'Add New Client' form again.\r\n        </p>\r\n  )\r\n\r\n  return (\r\n    <div className={style.clientList}>\r\n\r\n      {/* HEADER SECTION */}\r\n      <div className={style.header}>\r\n        <div className={style.headerTop}>\r\n          <h2 className={style.clientListTitle}>Clients</h2>\r\n          <FaPlus className={style.icon} aria-label='Add Client' onClick={() => resetClientState()}/>\r\n        </div>\r\n        <input\r\n          className={style.searchbar} \r\n          type='search'\r\n          placeholder='Search...'\r\n          aria-label='Search through Client list'\r\n          value={search}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n\r\n      {/* CLIENT LIST SECTION */}\r\n      { clients.loading ? <p>Loading...</p> : renderClientList }\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nClientList.propTypes = {\r\n  clients: PropTypes.array,\r\n  getAClient: PropTypes.func.isRequired,\r\n  resetClient: PropTypes.func.isRequired,\r\n  resetCompanyState: PropTypes.func.isRequired,\r\n  resetEditClient: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getAClient: (id) => dispatch(getAClient(id)),\r\n  resetClient: () => dispatch(resetClient()),\r\n  resetCompanyState: () => dispatch(resetCompanyState()),\r\n  resetEditClient: () => dispatch(resetEditClient()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ClientList);","import axios from 'axios';\r\nimport { setAlert } from '../alert/alert.actions';\r\nimport { \r\n  GET_ALL_TASKS, GET_A_TASK, CREATE_TASK, UPDATE_TASK, DELETE_TASK, TASK_ERROR \r\n} from './task.types';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n// const API_URL = 'http://45.55.46.165:8000';\r\n\r\nconst deployOnError = (err, dispatch, msg) => {\r\n  const errors = err.response.statusText;\r\n  errors && dispatch(setAlert(msg || errors, 'danger', 2000));\r\n  dispatch({ type: TASK_ERROR, payload: errors });\r\n};\r\n\r\n// *************************** GET ALL TASKS *************************** //\r\nexport const getAllTasks = () => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Token ${localStorage.token}`\r\n      }\r\n    };\r\n\r\n    const res = await axios.get(`${API_URL}/api/task/tasks/`, config);\r\n\r\n    // Sort 'tasks' by DATE_CREATED with most recent logs last\r\n    const sortedTasksByDate = res.data.sort((a, b) => {\r\n      if (a.date_created < b.date_created) { return -1 }\r\n      if (a.date_created > b.date_created) { return 1}\r\n      return 0\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_ALL_TASKS,\r\n      payload: sortedTasksByDate,\r\n    });\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** GET A TASK (SINGLE) *************************** //\r\nexport const getTask = (id) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n\r\n    const res = await axios.get(`${API_URL}/api/task/tasks/${id}`, config);\r\n\r\n    dispatch({\r\n      type: GET_A_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n}\r\n\r\n\r\n// *************************** CREATE TASK *************************** //\r\nexport const createTask = (title, body, is_complete) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n\r\n    // renamed 'task.body' to 'content' due to sharing namespace with 'body'\r\n    const bodyJSON = JSON.stringify({title, body, is_complete});\r\n\r\n    const res = await axios.post(`${API_URL}/api/task/tasks/`, bodyJSON, config);\r\n    console.log(res);\r\n    dispatch({\r\n      type: CREATE_TASK,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('New Task Added', 'success', 2000));\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n}\r\n\r\n\r\n// *************************** UPDATE TASK *************************** //\r\nexport const updateTask = (id, formData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n    \r\n    const res = await axios.put(`${API_URL}/api/task/tasks/${id}/`, formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_TASK,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Task Updated', 'success', 2000));\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** DELETE TASK *************************** //\r\nexport const deleteTask = (id) => async (dispatch) => {\r\n  if (window.confirm('Confirm you want to delete this task. This action cannot be undone.')) {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Authorization': `Token ${localStorage.token}`,\r\n        }\r\n      };\r\n  \r\n      await axios.delete(`${API_URL}/api/task/tasks/${id}/`, config);\r\n  \r\n      dispatch({\r\n        type: DELETE_TASK,\r\n        payload: id,\r\n      });\r\n      dispatch(setAlert('Task Deleted Successfully', 'success', 2000));\r\n    } catch (err) {\r\n      deployOnError(err, dispatch);\r\n    }\r\n  }\r\n};","import React, { } from 'react';\r\n\r\nimport style from './form-text-area.module.scss';\r\n\r\n// *************************** FORM TEXT AREA COMPONENT *************************** //\r\nconst FormTextArea = ({ clientTextArea, onChange, ...otherProps }) => {\r\n  return (\r\n    <textarea \r\n      className={`\r\n        ${clientTextArea ? clientTextArea : ''}\r\n        ${style.formTextArea}\r\n      `}\r\n      onChange={onChange}\r\n      {...otherProps}\r\n    />\r\n  )\r\n};\r\n\r\nexport default FormTextArea;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MdTitle } from 'react-icons/md';\r\n\r\nimport { createTask } from '../../redux/task/task.actions';\r\n\r\nimport Button from '../../components/button/Button';\r\nimport FormInput from '../../components/form-input/FormInput';\r\nimport FormTextArea from '../../components/form-text-area/FormTextArea';\r\n\r\nimport style from './task-create.module.scss';\r\n\r\n// *************************** TASK CREATE COMPONENT *************************** //\r\nconst TaskCreate = ({ createTask }) => {\r\n  \r\n  const [ formData, setFormData ] = useState({\r\n    title: '',\r\n    body: '',\r\n    date_created: '',\r\n    is_complete: false,\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await createTask(formData.title, formData.body, formData.is_complete);\r\n    setFormData({\r\n      title: '',\r\n      body: '',\r\n      date_create: '',\r\n      is_complete: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={style.taskCreate}>\r\n      \r\n      {/* HEADER SECTION */}\r\n      <div className={style.header}>\r\n        <h2 className={style.title}>Create Task</h2>\r\n      </div>\r\n\r\n      {/* CREATE TASK FORM */}\r\n      <form className={style.form} onSubmit={onSubmit}>\r\n        <label className={style.formLabel}>\r\n          Title <span className={style.requiredText}>(required)</span>\r\n        </label>\r\n        <div className={style.inputContainer}>\r\n          <MdTitle className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='title'\r\n            placeholder='Title'\r\n            autoComplete='off'\r\n            value={formData.title}\r\n            onChange={onChange}\r\n            required\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Body</label>\r\n        <FormTextArea \r\n          type='textarea'\r\n          name='body'\r\n          placeholder='Body'\r\n          autoComplete='off'\r\n          value={formData.body}\r\n          onChange={onChange}\r\n          // className={style.textArea}\r\n          clientTextArea\r\n        />\r\n\r\n        {/* <Button type='submit' todoButton>Add Task</Button> */}\r\n        <Button type='submit' clientButton>Add Task</Button>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n// PROP TYPES\r\nTaskCreate.propTypes = {\r\n  createTask: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createTask: (title, body, is_complete) => dispatch(createTask(title, body, is_complete)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(TaskCreate);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getCalendarDateLogs } from '../../redux/calendar/calendar.actions';\r\n\r\nimport style from './calendar-date-info.module.scss';\r\n\r\n// *************************** CALENDAR DATE INFO COMPONENT *************************** //\r\nconst CalendarDateInfo = ({ calendarDateLogs, calendarDate, loading, clients, getCalendarDateLogs, }) => {\r\n  useEffect(() => {\r\n    getCalendarDateLogs();\r\n  }, [getCalendarDateLogs]);\r\n\r\n  let date = moment(calendarDate).format('MMMM Do YYYY');\r\n\r\n  let calendarDateInfo;\r\n\r\n  // Render when Calendar first displays to User\r\n  if (calendarDateLogs.length === 0 && calendarDate === '') {\r\n    calendarDateInfo = (\r\n      <p className={style.loadingText}>Pick a date from the calendar.</p>\r\n    );\r\n  };\r\n\r\n  // Render if no 'calendarDateLog' object for selected 'date'\r\n  if (calendarDateLogs.length === 0 && calendarDate !== '') {\r\n    calendarDateInfo = (\r\n      <p className={style.loadingText}>No logs for {date}.</p>\r\n    );\r\n  };\r\n\r\n  // Render 'calendarDateInfo' for each Event object\r\n  if (calendarDateLogs.length > 0 && calendarDate !== '') {\r\n    calendarDateInfo = (\r\n      calendarDateLogs.map(log => (\r\n        <div key={log.id} className={style.calendarDateInfoContainer}>\r\n          {/* Map through 'clients' to render 'log.associated_client' first_name + last_name */}\r\n          {\r\n            clients.map(client => (\r\n              client.id === log.associated_client\r\n                && <p key={client.id} className={style.logClient}>{client.first_name} {client.last_name}</p>\r\n            ))\r\n          }\r\n          <p className={style.logType}>{log.title}</p>\r\n          <p className={style.logText}>{log.details}</p>\r\n        </div>\r\n      ))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={style.calendarDateInfo}>\r\n      <h2 className={style.header}>\r\n        LOGS\r\n        <span className={style.headerDate}>{calendarDate !== '' ?  date : ''}</span>\r\n      </h2>\r\n      { \r\n        loading\r\n          ? <p className={style.loadingText}>Loading...</p>\r\n          : calendarDateInfo\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nCalendarDateInfo.propTypes = {\r\n  calendarDateLogs: PropTypes.array.isRequired,\r\n  calendarDate: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  clients: PropTypes.array,\r\n  getCalendarDateLogs: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  calendarDateLogs: state.calendar.calendarDateLogs,\r\n  calendarDate: state.calendar.calendarDate,\r\n  loading: state.calendar.loading,\r\n  clients: state.clients.clients,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCalendarDateLogs: () => dispatch(getCalendarDateLogs()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarDateInfo);","import React, { } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ClientList from '../../components-dashboard-client/client-list/ClientList';\r\nimport TaskCreate from '../../components-dashboard-tasks/task-create/TaskCreate';\r\nimport CalendarDateInfo from '../../components-dashboard-calendar/calendar-date-info/CalendarDateInfo';\r\n\r\nimport style from './dashboard-small-section.module.scss';\r\n\r\n// *************************** DASHBOARD SMALL SECTION COMPONENT *************************** //\r\nconst DashboardSmallSection = ({ clients, homeMenu, clientsMenu, tasksMenu, calendarMenu }) => {\r\n  // 'clients' array passed down as prop via 'DashboardPage.js'\r\n  return (\r\n    <div className={style.dashboardSmallSection}>\r\n\r\n      <div className={style.smallInnerContainer}>\r\n        { homeMenu.isActive && <h2>HOME SECTION</h2> }\r\n        { clientsMenu.isActive && <ClientList clients={clients} />}\r\n        { tasksMenu.isActive && <TaskCreate /> }\r\n        { calendarMenu.isActive && <CalendarDateInfo /> }\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nDashboardSmallSection.propTypes = {\r\n  clients: PropTypes.array,\r\n  homeMenu: PropTypes.object.isRequired,\r\n  clientsMenu: PropTypes.object.isRequired,\r\n  tasksMenu: PropTypes.object.isRequired,\r\n  calendarMenu: PropTypes.object.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  homeMenu: state.dashboard.homeMenu,\r\n  clientsMenu: state.dashboard.clientsMenu,\r\n  tasksMenu: state.dashboard.tasksMenu,\r\n  calendarMenu: state.dashboard.calendarMenu,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DashboardSmallSection);","import axios from 'axios';\r\nimport { setAlert } from '../alert/alert.actions';\r\nimport { \r\n  GET_ALL_COMPANIES, GET_COMPANY, CREATE_COMPANY, UPDATE_COMPANY, DELETE_COMPANY, COMPANY_ERROR \r\n} from './company.types';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n// const API_URL = 'http://45.55.46.165:8000';\r\n\r\nconst deployOnError = (err, dispatch, msg) => {\r\n  const errors = err.response.statusText;\r\n  errors && dispatch(setAlert(msg || errors, 'danger', 2000));\r\n  dispatch({ type: COMPANY_ERROR, payload: errors });\r\n};\r\n\r\n// *************************** GET ALL COMPANIES *************************** //\r\nexport const getAllCompanies = () => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Token ${localStorage.token}`\r\n      }\r\n    };\r\n\r\n    const res = await axios.get(`${API_URL}/api/client/company/`, config);\r\n    dispatch({\r\n      type: GET_ALL_COMPANIES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** GET COMPANY *************************** //\r\nexport const getCompany = (companyId) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n\r\n    const res = await axios.get(`${API_URL}/api/client/company/${companyId}/`, config);\r\n\r\n    dispatch({\r\n      type: GET_COMPANY,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** CREATE COMPANY *************************** //\r\nexport const createCompany = ({ company_name, website, company_number, address, company_notes, associated_client }) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({ company_name, website, company_number, address, company_notes, associated_client });\r\n\r\n    const res = await axios.post(`${API_URL}/api/client/company/`, body, config);\r\n\r\n    dispatch({\r\n      type: CREATE_COMPANY,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('New Company Added', 'success', 2000));\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** DELETE COMPANY *************************** //\r\nexport const deleteCompany = (companyId) => async (dispatch) => {\r\n  if (window.confirm('Please confirm you want to delete this company. This action cannot be undone.')) {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Authorization': `Token ${localStorage.token}`,\r\n        }\r\n      };\r\n      await axios.delete(`${API_URL}/api/client/company/${companyId}/`, config);\r\n      dispatch({\r\n        type: DELETE_COMPANY,\r\n        payload: companyId,\r\n      });\r\n      dispatch(setAlert('Company Deleted Successfully', 'success', 2000));\r\n    } catch (err) {\r\n      deployOnError(err, dispatch);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// *************************** UPDATE COMPANY *************************** //\r\nexport const updateCompany = (companyId, formData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n\r\n    const res = await axios.put(`${API_URL}/api/client/company/${companyId}/`, formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_COMPANY,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Company Updated', 'success', 2000));\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};","import React, { } from 'react';\r\nimport { MdKeyboardReturn } from 'react-icons/md';\r\n\r\nimport style from './return-container.module.scss';\r\n\r\n// *************************** RETURN CONTAINER COMPONENT *************************** //\r\nconst ReturnContainer = ({ onClick, returnToClient, returnToTasks }) => {\r\n  // 'onClick' functions passed as props from parent components\r\n\r\n  let text;\r\n\r\n  if (returnToClient) text = 'Return to Client';\r\n  if (returnToTasks) text = 'Return to Tasks';\r\n\r\n  return (\r\n    <div \r\n      className={style.returnContainer}\r\n      onClick={onClick}\r\n    >\r\n      <MdKeyboardReturn className={style.returnIcon} aria-label='Return to Client' />\r\n      <p className={style.returnText}>\r\n        {text}\r\n      </p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ReturnContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MdPerson, MdEmail, MdPhoneInTalk, MdDeleteForever } from 'react-icons/md'\r\nimport { FaUserTie } from 'react-icons/fa';\r\n\r\nimport { getAClient, updateClient, deleteClient, resetClient } from '../../redux/clients/clients.actions';\r\nimport { toggleEditClient } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport Button from '../../components/button/Button';\r\nimport FormInput from '../../components/form-input/FormInput';\r\nimport FormTextArea from '../../components/form-text-area/FormTextArea';\r\nimport ReturnContainer from '../../components/return-container/ReturnContainer';\r\n\r\nimport style from './client-edit.module.scss';\r\n\r\n// *************************** CLIENT EDIT COMPONENT *************************** //\r\nconst ClientEdit = ({ client, loading, getAClient, updateClient, deleteClient, resetClient, toggleEditClient }) => {\r\n\r\n  useEffect(() => {\r\n    getAClient(client.id);\r\n    updateClient();\r\n  }, [getAClient, updateClient, deleteClient, client.id]);\r\n\r\n  // Set initial form state with 'client' info if available\r\n  const [ formData, setFormData ] = useState({\r\n    first_name: client.first_name ? client.first_name : '',\r\n    last_name: client.last_name ? client.last_name : '',\r\n    email: client.email ? client.email : '',\r\n    phone_number: client.phone_number ? client.phone_number : '',\r\n    job_title: client.job_title ? client.job_title : '',\r\n    notes: client.notes ? client.notes : ''\r\n  });\r\n\r\n  const onClientDelete = () => {\r\n    deleteClient(client.id);\r\n    resetClient();\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateClient(client.id, formData);\r\n  };\r\n\r\n  // Render ClientForm to User\r\n  const updateClientForm = (\r\n    <div className={style.clientEdit}>\r\n      <div className={style.headerContainer}>\r\n        <h2 className={style.header}>Update Info</h2>\r\n        <div className={style.iconContainer} onClick={onClientDelete}>\r\n          <MdDeleteForever className={style.deleteIcon} aria-label='Delete Client' /> \r\n          <span className={style.deleteText}>Delete Client</span>\r\n        </div>\r\n      </div>\r\n\r\n      <form className={style.form} onSubmit={onSubmit}>\r\n        <label className={style.formLabel}>\r\n          First Name <span className={style.requiredText}>(required)</span>\r\n        </label>\r\n        <div className={style.inputContainer}>\r\n          <MdPerson className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='first_name'\r\n            placeholder='First Name'\r\n            autoComplete='off'\r\n            value={formData.first_name}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>\r\n          Last Name <span className={style.requiredText}>(required)</span>\r\n        </label>\r\n        <div className={style.inputContainer}>\r\n          <MdPerson className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='last_name'\r\n            placeholder='Last Name'\r\n            autoComplete='off'\r\n            value={formData.last_name}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Email</label>\r\n        <div className={style.inputContainer}>\r\n          <MdEmail className={style.inputIcon} />\r\n          <FormInput \r\n            type='email'\r\n            name='email'\r\n            placeholder='Email'\r\n            autoComplete='off'\r\n            value={formData.email}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Phone Number</label>\r\n        <div className={style.inputContainer}>\r\n          <MdPhoneInTalk className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='phone_number'\r\n            placeholder='Phone Number'\r\n            autoComplete='off'\r\n            value={formData.phone_number}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Job Title</label>\r\n        <div className={style.inputContainer}>\r\n          <FaUserTie className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='job_title'\r\n            placeholder='Job Title'\r\n            autoComplete='off'\r\n            value={formData.job_title}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Notes</label>\r\n        <FormTextArea \r\n          type='textarea'\r\n          name='notes'\r\n          placeholder='Notes'\r\n          autoComplete='off'\r\n          value={formData.notes}\r\n          onChange={onChange}\r\n          clientTextArea\r\n        />\r\n\r\n        <Button type='submit' clientButton>Update</Button>\r\n      </form>\r\n\r\n      <ReturnContainer returnToClient onClick={() => toggleEditClient()} />\r\n\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    (client === null || loading)\r\n      ? <p>Loading...</p>\r\n      : updateClientForm\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nClientEdit.propTypes = {\r\n  client: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  getAClient: PropTypes.func.isRequired,\r\n  updateClient: PropTypes.func.isRequired,\r\n  deleteClient: PropTypes.func.isRequired,\r\n  resetClient: PropTypes.func.isRequired,\r\n  toggleEditClient: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  client: state.clients.client,\r\n  loading: state.clients.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getAClient: (id) => dispatch(getAClient(id)),\r\n  updateClient: (id, formData) => dispatch(updateClient(id, formData)),\r\n  deleteClient: (id) => dispatch(deleteClient(id)),\r\n  resetClient: () => dispatch(resetClient()),\r\n  toggleEditClient: () => dispatch(toggleEditClient()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientEdit);","import React, { } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MdRemoveRedEye, MdDeleteForever, MdEdit } from 'react-icons/md';\r\nimport { FaPlusCircle } from 'react-icons/fa';\r\n\r\nimport { deleteCompany } from '../../redux/company/company.actions';\r\nimport { toggleCreateCompany, toggleEditCompany } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport style from './company-item.module.scss';\r\n\r\n// *************************** COMPANY ITEM PAGE COMPONENT *************************** //\r\nconst CompanyItem = ({ client, currentCompany, loading, deleteCompany, toggleCreateCompany, toggleEditCompany }) => {\r\n  // 'client' passed down as object via 'ClientPage.js' to allow Company filtering\r\n\r\n  const navigateToCompany = () => {\r\n    toggleEditCompany();\r\n  };\r\n\r\n  const navigateToCreateCompany = () => {\r\n    toggleCreateCompany();\r\n  };\r\n\r\n  // Render correct 'currentCompany' object for 'client' object\r\n  const companyContainer = (\r\n    (currentCompany !== null && (currentCompany.associated_client === client.id))\r\n      ?\r\n        <div key={currentCompany.id} className={style.companyContainer}>\r\n          <h4 className={style.companyTitle}>{currentCompany.company_name}</h4>\r\n          <p className={style.companyText}>\r\n            <a href={`https://${currentCompany.website}`} target='_blank' rel='noopener noreferrer' className={style.link}>\r\n              {currentCompany.website}\r\n            </a>\r\n          </p>\r\n          <p className={style.companyText}>{currentCompany.address}</p>\r\n          <p className={style.companyText}>{currentCompany.company_number}</p>\r\n          {\r\n            currentCompany.company_notes \r\n            && <h4 className={style.companyTitleTwo}>Who is {currentCompany.company_name}?</h4>\r\n          }\r\n          <p className={style.companyText}>{currentCompany.company_notes}</p>\r\n          <div className={style.buttonContainer}>\r\n            <div \r\n              className={style.viewIconContainer} \r\n              onClick={() => navigateToCompany()}\r\n            >\r\n              <MdRemoveRedEye className={style.viewIcon} aria-label='View Company' />\r\n              <span className={style.viewText}>View Company</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      :\r\n        <div className={style.companyContainer}>\r\n          <p className={style.companyText}>\r\n            No company added currently. Click below if you would like to add a company for {client.first_name} {client.last_name}\r\n          </p>\r\n          <div className={style.buttonContainer}>\r\n            <div \r\n              className={style.addIconContainer} \r\n              onClick={() => navigateToCreateCompany()}\r\n            >\r\n              <FaPlusCircle className={style.addIcon} aria-label='Add Company' />\r\n              <span className={style.addText}>Add Company</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  );\r\n\r\n  return (\r\n    <div className={style.companyItem}>\r\n      {\r\n        loading ? <p>Loading...</p> : companyContainer\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nCompanyItem.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  currentCompany: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  deleteCompany: PropTypes.func.isRequired,\r\n  toggleCreateCompany: PropTypes.func.isRequired,\r\n  toggleEditCompany: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  currentCompany: state.company.currentCompany,\r\n  loading: state.company.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteCompany: (companyId) => dispatch(deleteCompany(companyId)),\r\n  toggleCreateCompany: () => dispatch(toggleCreateCompany()),\r\n  toggleEditCompany: () => dispatch(toggleEditCompany()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyItem);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MdPerson, MdWeb, MdPhoneInTalk, MdPlace } from 'react-icons/md';\r\n\r\nimport { createCompany } from '../../redux/company/company.actions';\r\nimport { resetCompanyState } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport Button from '../../components/button/Button';\r\nimport FormInput from '../../components/form-input/FormInput';\r\nimport FormTextArea from '../../components/form-text-area/FormTextArea';\r\nimport ReturnContainer from '../../components/return-container/ReturnContainer';\r\n\r\nimport style from './company-create.module.scss';\r\n\r\n// *************************** COMPANY CREATE COMPONENT *************************** //\r\nconst CompanyCreate = ({ client, createCompany, resetCompanyState }) => {\r\n  // 'client' object passed down as prop from 'ClientPage.js' component\r\n\r\n  const [ formData, setFormData ] = useState({\r\n    company_name: '',\r\n    website: '',\r\n    company_number: '',\r\n    address: '',\r\n    company_notes: '',\r\n    associated_client: client.id,\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await createCompany(formData);\r\n    setFormData({\r\n      company_name: '',\r\n      website: '',\r\n      company_number: '',\r\n      address: '',\r\n      company_notes: '',\r\n      associated_client: client.id,\r\n    });\r\n    resetCompanyState();\r\n  };\r\n\r\n  return (\r\n    <div className={style.companyCreate}>\r\n      <h2 className={style.header}>Create Company</h2>\r\n\r\n      <form className={style.form} onSubmit={onSubmit}>\r\n\r\n        <label className={style.formLabel}>\r\n          Company Name <span className={style.requiredText}>(required)</span>\r\n        </label>\r\n        <div className={style.inputContainer}>\r\n          <MdPerson className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='company_name'\r\n            placeholder='Company Name'\r\n            autoComplete='off'\r\n            value={createCompany.company_name}\r\n            onChange={onChange}\r\n            required\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Company Website</label>\r\n        <div className={style.inputContainer}>\r\n          <MdWeb className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='website'\r\n            placeholder='Company Website'\r\n            autoComplete='off'\r\n            value={createCompany.website}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Company Number</label>\r\n        <div className={style.inputContainer}>\r\n          <MdPhoneInTalk className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='company_number'\r\n            placeholder='Company Number'\r\n            autoComplete='off'\r\n            value={createCompany.company_number}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Company Address</label>\r\n        <div className={style.inputContainer}>\r\n          <MdPlace className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='address'\r\n            placeholder='Company Address'\r\n            autoComplete='off'\r\n            value={createCompany.address}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Company Notes</label>\r\n        <FormTextArea \r\n          type='textarea'\r\n          name='company_notes'\r\n          placeholder='Company Notes'\r\n          autoComplete='off'\r\n          value={createCompany.company_notes}\r\n          onChange={onChange}\r\n          clientTextArea\r\n        />\r\n        \r\n        <Button type='submit' clientButton>Create</Button>\r\n      </form>\r\n\r\n      <ReturnContainer returnToClient onClick={() => resetCompanyState()} />\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nCompanyCreate.propTypes = {\r\n  client: PropTypes.object,\r\n  createCompany: PropTypes.func.isRequired,\r\n  resetCompanyState: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createCompany: ({ company_name, website, company_number, address, company_notes, associated_client }) => dispatch(createCompany({ company_name, website, company_number, address, company_notes, associated_client })),\r\n  resetCompanyState: () => dispatch(resetCompanyState()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CompanyCreate);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MdPerson, MdWeb, MdPhoneInTalk, MdPlace, MdDeleteForever } from 'react-icons/md';\r\n\r\nimport { getCompany, updateCompany, deleteCompany } from '../../redux/company/company.actions';\r\nimport { resetCompanyState } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport Button from '../../components/button/Button';\r\nimport FormInput from '../../components/form-input/FormInput';\r\nimport FormTextArea from '../../components/form-text-area/FormTextArea';\r\nimport ReturnContainer from '../../components/return-container/ReturnContainer';\r\n\r\nimport style from './company-edit.module.scss';\r\n\r\n// *************************** COMPANY EDIT COMPONENT *************************** //\r\nconst CompanyEdit = ({ client, currentCompany, loading, getCompany, updateCompany, deleteCompany, resetCompanyState }) => {\r\n  // 'client' object passed down as prop from 'ClientPage.js' component\r\n\r\n  useEffect(() => {\r\n    getCompany(currentCompany.id);\r\n  }, [getCompany]);\r\n\r\n  const [ formData, setFormData ] = useState({\r\n    company_name: currentCompany.company_name ? currentCompany.company_name : '',\r\n    website: currentCompany.website ? currentCompany.website : '',\r\n    company_number: currentCompany.company_number ? currentCompany.company_number : '',\r\n    address: currentCompany.address ? currentCompany.address : '',\r\n    company_notes: currentCompany.company_notes ? currentCompany.company_notes : '',\r\n    associated_client: currentCompany.associated_client ? currentCompany.associated_client : '',\r\n  });\r\n\r\n  const onCompanyDelete = () => {\r\n    deleteCompany(currentCompany.id);\r\n    resetCompanyState();\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateCompany(currentCompany.id, formData);\r\n  };\r\n\r\n  const editCompanyForm = (\r\n    <div className={style.companyEdit}>\r\n      <div className={style.headerContainer}>\r\n        <h2 className={style.header}>Update Company</h2>\r\n        <div className={style.iconContainer} onClick={onCompanyDelete}>\r\n          <MdDeleteForever className={style.deleteIcon} aria-label='Delete Client' /> \r\n          <span className={style.deleteText}>Delete Company</span>\r\n        </div>\r\n      </div>\r\n\r\n      <form className={style.form} onSubmit={onSubmit}>\r\n        <label className={style.formLabel}>\r\n          Company Name <span className={style.requiredText}>(required)</span>\r\n        </label>\r\n        <div className={style.inputContainer}>\r\n          <MdPerson className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='company_name'\r\n            placeholder='Company Name'\r\n            autoComplete='off'\r\n            value={formData.company_name}\r\n            onChange={onChange}\r\n            required\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Company Website</label>\r\n        <div className={style.inputContainer}>\r\n          <MdWeb className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='website'\r\n            placeholder='Company Website'\r\n            autoComplete='off'\r\n            value={formData.website}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Company Number</label>\r\n        <div className={style.inputContainer}>\r\n          <MdPhoneInTalk className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='company_number'\r\n            placeholder='Company Number'\r\n            autoComplete='off'\r\n            value={formData.company_number}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Company Address</label>\r\n        <div className={style.inputContainer}>\r\n          <MdPlace className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='address'\r\n            placeholder='Company Address'\r\n            autoComplete='off'\r\n            value={formData.address}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Company Notes</label>\r\n        <FormTextArea \r\n          type='textarea'\r\n          name='company_notes'\r\n          placeholder='Company Notes'\r\n          autoComplete='off'\r\n          value={formData.company_notes}\r\n          onChange={onChange}\r\n          clientTextArea\r\n        />\r\n\r\n        <Button type='submit' clientButton>Update</Button>\r\n      </form>\r\n\r\n      <ReturnContainer returnToClient onClick={() => resetCompanyState()} />\r\n\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    (currentCompany === {} || loading)\r\n      ? <p>Loading...</p>\r\n      : editCompanyForm\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nCompanyEdit.propTypes = {\r\n  client: PropTypes.object,\r\n  currentCompany: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  getCompany: PropTypes.func.isRequired,\r\n  updateCompany: PropTypes.func.isRequired,\r\n  deleteCompany: PropTypes.func.isRequired,\r\n  resetCompanyState: PropTypes.func.isRequired,\r\n}\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  currentCompany: state.company.currentCompany,\r\n  loading: state.company.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCompany: (companyId) => dispatch(getCompany(companyId)),\r\n  updateCompany: (companyId, formData) => dispatch(updateCompany(companyId, formData)),\r\n  deleteCompany: (companyId) => dispatch(deleteCompany(companyId)),\r\n  resetCompanyState: () => dispatch(resetCompanyState()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyEdit);","import axios from 'axios';\r\nimport { setAlert } from '../alert/alert.actions';\r\nimport { \r\n  GET_ALL_LOGS, GET_CLIENT_LOGS, GET_LOG, CREATE_LOG, DELETE_LOG, UPDATE_LOG, LOG_ERROR\r\n} from './log.types';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n// const API_URL = 'http://45.55.46.165:8000';\r\n\r\nconst deployOnError = (err, dispatch, msg) => {\r\n  const errors = err.response.statusText;\r\n  errors && dispatch(setAlert(msg || errors, 'danger', 2000));\r\n  dispatch({ type: LOG_ERROR, payload: errors });\r\n};\r\n\r\n// *************************** GET ALL LOGS *************************** //\r\nexport const getAllLogs = () => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n\r\n    const res = await axios.get(`${API_URL}/api/client/logs/`, config);\r\n\r\n    dispatch({\r\n      type: GET_ALL_LOGS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** GET CLIENT LOGS *************************** //\r\nexport const getClientLogs = (clientId) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n\r\n    const res = await axios.get(`${API_URL}/api/client/logs/?associated_client=${clientId}`, config);\r\n\r\n    // Sort 'clientLogs' by LOG_DATE with most recent logs first\r\n    const sortedClientLogsByDate = res.data.sort((a, b) => {\r\n      if (a.log_date > b.log_date) { return -1 }\r\n      if (a.log_date < b.log_date) { return 1}\r\n      return 0\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_CLIENT_LOGS,\r\n      payload: sortedClientLogsByDate,\r\n    });\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** GET LOG *************************** //\r\nexport const getLog = (logId) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Token ${localStorage.token}`\r\n      }\r\n    };\r\n\r\n    const res = await axios.get(`${API_URL}/api/client/logs/${logId}/`, config);\r\n\r\n    dispatch({\r\n      type: GET_LOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** CREATE LOG *************************** //\r\nexport const createLog = ({ type, details, associated_client }) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      'headers': {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n    \r\n    const body = JSON.stringify({ type, details, associated_client });\r\n    const res = await axios.post(`${API_URL}/api/client/logs/`, body, config);\r\n\r\n    dispatch({\r\n      type: CREATE_LOG,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('New Log Added', 'success', 2000));\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n\r\n\r\n// *************************** DELETE LOG *************************** //\r\nexport const deleteLog = (logId) => async (dispatch) => {\r\n  if (window.confirm('Please confirm you want to delete this log. This action cannot be undone.')) {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Authorization': `Token ${localStorage.token}`,\r\n        }\r\n      };\r\n  \r\n      await axios.delete(`${API_URL}/api/client/logs/${logId}/`, config);\r\n  \r\n      dispatch({\r\n        type: DELETE_LOG,\r\n        payload: logId,\r\n      });\r\n      dispatch(setAlert('Log Deleted Successfully', 'success', 2000));\r\n    } catch (err) {\r\n      deployOnError(err, dispatch);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// *************************** UPDATE LOG *************************** //\r\nexport const updateLog = (logId, formData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      'headers': {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.token}`,\r\n      }\r\n    };\r\n\r\n    const res = await axios.put(`${API_URL}/api/client/logs/${logId}/`, formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Log Updated', 'success', 2000));\r\n  } catch (err) {\r\n    deployOnError(err, dispatch);\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { MdEdit, MdDeleteForever } from 'react-icons/md';\r\nimport { FaPlusCircle } from 'react-icons/fa';\r\n\r\nimport { getClientLogs, getLog, deleteLog } from '../../redux/log/log.actions';\r\nimport { toggleCreateLog, toggleEditLog } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport style from './log-item.module.scss';\r\n\r\n// *************************** LOG ITEM COMPONENT *************************** //\r\nconst LogItem = ({ client, loading, clientLogs, getLog, getClientLogs, deleteLog, toggleCreateLog, toggleEditLog }) => {\r\n  useEffect(() => {\r\n    getClientLogs(client.id)\r\n  }, [getClientLogs, client.id, getLog]);\r\n\r\n  // Will toggle 'logMenu.isEditing' state to render 'LogEdit.js' component in 'ClientPage.js'\r\n  const navigateToEditLog = async (logId) => {\r\n    await getLog(logId);\r\n    toggleEditLog();\r\n  };\r\n  // Will toggle 'logMenu.isCreating' state to render 'LogCreate.js' component in 'ClientPage.js'\r\n  const navigateToCreateLog = () => {\r\n    toggleCreateLog();\r\n  };\r\n\r\n  let logContainer;\r\n\r\n  // 'clientLogs' exists ? show User the 3 most recent logs : give User option to add new Log\r\n  if (clientLogs.length > 0) {\r\n    logContainer = (\r\n      clientLogs.slice(0, 3).map(log => (\r\n        <div key={log.id} className={style.logContainer}>\r\n          <div className={style.headerContainer}>\r\n            <h4 className={style.logType}>{log.type}</h4>\r\n          </div>\r\n          <p className={style.logText}>{log.details}</p>\r\n          <p className={style.logDateText}>{moment(log.log_date).format('MMMM Do YYYY')}</p>\r\n          {/* <p className={style.logText}>{log.log_date}</p> */}\r\n          {/* <p className={style.logText}>{log.associated_client}</p> */}\r\n          <div className={style.buttonContainer}>\r\n            <div className={style.editIconContainer} onClick={() => navigateToEditLog(log.id)}>\r\n              <MdEdit className={style.editIcon} aria-label='Edit Log' />\r\n              <span className={style.editText}>Edit</span>\r\n            </div>\r\n            <div className={style.deleteIconContainer} onClick={() => deleteLog(log.id)}>\r\n              <MdDeleteForever className={style.deleteIcon} aria-label='Delete Log' />\r\n              <span className={style.deleteText}>Delete</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))\r\n    );\r\n  } else {\r\n    logContainer = (\r\n      <div className={style.addLogContainer}>\r\n        <p className={style.addLogText}>\r\n          No logs added currently. Click below if you would like to add a log for {client.first_name} {client.last_name}\r\n        </p>\r\n        <div className={style.addButtonContainer}>\r\n          <div \r\n            className={style.addIconContainer} \r\n            onClick={() => navigateToCreateLog()}\r\n          >\r\n            <FaPlusCircle className={style.addIcon} aria-label='Add Log' />\r\n            <span className={style.addText}>Add New Log</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className={style.logItem}>\r\n      {\r\n        loading\r\n          ? <p>Loading...</p>\r\n          : logContainer\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nLogItem.propTypes = {\r\n  client: PropTypes.object,\r\n  clientLogs: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  getClientLogs: PropTypes.func.isRequired,\r\n  getLog: PropTypes.func.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  toggleCreateLog: PropTypes.func.isRequired,\r\n  toggleEditLog: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  client: state.clients.client,\r\n  clientLogs: state.log.clientLogs,\r\n  loading: state.log.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getClientLogs: (clientId) => dispatch(getClientLogs(clientId)),\r\n  getLog: (logId) => dispatch(getLog(logId)),\r\n  deleteLog: (logId) => dispatch(deleteLog(logId)),\r\n  toggleCreateLog: () => dispatch(toggleCreateLog()),\r\n  toggleEditLog: () => dispatch(toggleEditLog()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogItem);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MdInfoOutline, MdKeyboardReturn } from 'react-icons/md';\r\nimport { FaRegCalendarAlt } from 'react-icons/fa';\r\n\r\nimport { createLog } from '../../redux/log/log.actions';\r\nimport { resetLogState } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport Button from '../../components/button/Button';\r\nimport FormInput from '../../components/form-input/FormInput';\r\nimport FormTextArea from '../../components/form-text-area/FormTextArea';\r\n\r\nimport style from './log-create.module.scss';\r\n\r\n// *************************** LOG CREATE COMPONENT *************************** //\r\nconst LogCreate = ({ removeReturnContainer, client, createLog, resetLogState }) => {\r\n  // 'removeReturnContainer' passed as prop from 'LogAllItems.js' component to remove duplicate return container div\r\n  const [ formData, setFormData ] = useState({\r\n    type: '',\r\n    details: '',\r\n    log_date: '',\r\n    associated_client: client.id,\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await createLog(formData);\r\n    setFormData({\r\n      type: '',\r\n      details: '',\r\n      log_date: '',\r\n      associated_client: client.id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={style.logCreate}>\r\n      <h2 className={style.header}>Create Log</h2>\r\n\r\n      <form className={style.form} onSubmit={onSubmit}>\r\n\r\n        <label className={style.formLabel}>\r\n          Log Type <span className={style.requiredText}>(required)</span>\r\n        </label>\r\n        <div className={style.inputContainer}>\r\n          <MdInfoOutline className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='type'\r\n            placeholder='Type'\r\n            autoComplete='off'\r\n            value={formData.type}\r\n            onChange={onChange}\r\n            required\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        {/* <label className={style.formLabel}>Date</label>\r\n        <div className={style.inputContainer}>\r\n          <FaRegCalendarAlt className={style.inputIcon} />\r\n          <FormInput \r\n            type='date'\r\n            name='log_date'\r\n            placeholder='Date'\r\n            autoComplete='off'\r\n            value={formData.log_date}\r\n            onChange={onChange}\r\n          />\r\n        </div> */}\r\n\r\n        <label className={style.formLabel}>Details</label>\r\n        <FormTextArea \r\n          type='textarea'\r\n          name='details'\r\n          placeholder='Details'\r\n          autoComplete='off'\r\n          value={formData.details}\r\n          onChange={onChange}\r\n          clientTextArea\r\n        />\r\n\r\n        <Button type='submit' clientButton>Create</Button>\r\n      </form>\r\n\r\n      {/* If 'removeReturnContainer' passed as prop, div does not display to remove duplicates */}\r\n      {\r\n        removeReturnContainer\r\n          ? ''\r\n          :\r\n            <div className={style.returnContainer} onClick={() => resetLogState()}>\r\n              <MdKeyboardReturn className={style.returnIcon} aria-label='Return to Client' />\r\n              <p className={style.returnText}>Return to Client</p>\r\n            </div>\r\n      }\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nLogCreate.propTypes = {\r\n  client: PropTypes.object,\r\n  createLog: PropTypes.func.isRequired,\r\n  resetLogState: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  client: state.clients.client,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createLog: ({type, details, associated_client}) => dispatch(createLog({type, details, associated_client})),\r\n  resetLogState: () => dispatch(resetLogState()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogCreate);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MdInfoOutline } from 'react-icons/md';\r\nimport { FaRegCalendarAlt } from 'react-icons/fa';\r\n\r\nimport { getLog, updateLog } from '../../redux/log/log.actions';\r\nimport { resetLogState } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport Button from '../../components/button/Button';\r\nimport FormInput from '../../components/form-input/FormInput';\r\nimport FormTextArea from '../../components/form-text-area/FormTextArea';\r\nimport ReturnContainer from '../../components/return-container/ReturnContainer';\r\n\r\nimport style from './log-edit.module.scss';\r\n\r\n// *************************** LOG EDIT COMPONENT *************************** //\r\nconst LogEdit = ({ currentLog, loading, getLog, updateLog, resetLogState }) => {\r\n  useEffect(() => {\r\n    getLog(currentLog.id);\r\n  }, [getLog]);\r\n\r\n  const [ formData, setFormData ] = useState({\r\n    type: currentLog.type ? currentLog.type : '',\r\n    details: currentLog.details ? currentLog.details : '',\r\n    log_date: currentLog.log_date ? currentLog.log_date : '',\r\n    associated_client: currentLog.associated_client ? currentLog.associated_client : '',\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateLog(currentLog.id, formData);\r\n  };\r\n\r\n  const logEditForm = (\r\n    <div className={style.logEdit}>\r\n      <h2 className={style.header}>Update Log</h2>\r\n\r\n      <form className={style.form} onSubmit={onSubmit}>\r\n\r\n        <label className={style.formLabel}>\r\n          Log Type <span className={style.requiredText}>(required)</span>\r\n        </label>\r\n        <div className={style.inputContainer}>\r\n          <MdInfoOutline className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='type'\r\n            placeholder='Type'\r\n            autoComplete='off'\r\n            value={formData.type}\r\n            onChange={onChange}\r\n            required\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        {/* <label className={style.formLabel}>Date</label>\r\n        <div className={style.inputContainer}>\r\n          <FaRegCalendarAlt className={style.inputIcon} />\r\n          <FormInput \r\n            type='date'\r\n            name='log_date'\r\n            placeholder='Date'\r\n            autoComplete='off'\r\n            value={formData.log_date}\r\n            onChange={onChange}\r\n          />\r\n        </div> */}\r\n\r\n        <label className={style.formLabel}>Details</label>\r\n        <FormTextArea \r\n          type='textarea'\r\n          name='details'\r\n          placeholder='Details'\r\n          autoComplete='off'\r\n          value={formData.details}\r\n          onChange={onChange}\r\n          clientTextArea\r\n        />\r\n\r\n        <Button type='submit' clientButton>Update</Button>\r\n      </form>\r\n\r\n      <ReturnContainer returnToClient onClick={() => resetLogState()} />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    (currentLog === {} || loading)\r\n      ? <p>Loading...</p>\r\n      : logEditForm\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nLogEdit.propTypes = {\r\n  currentLog: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  getLog: PropTypes.func.isRequired,\r\n  updateLog: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  currentLog: state.log.currentLog,\r\n  loading: state.log.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getLog: (logId) => dispatch(getLog(logId)),\r\n  updateLog: (logId, formData) => dispatch(updateLog(logId, formData)),\r\n  resetLogState: () => dispatch(resetLogState()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogEdit);","import React, { } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { MdEdit, MdDeleteForever } from 'react-icons/md';\r\n\r\nimport { getLog, deleteLog } from '../../redux/log/log.actions';\r\nimport { toggleEditLog, resetLogState } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport LogCreate from '../log-create/LogCreate';\r\nimport ReturnContainer from '../../components/return-container/ReturnContainer';\r\n\r\nimport style from './log-all-items.module.scss';\r\n\r\n// *************************** LOG ALL ITEMS COMPONENT *************************** //\r\nconst LogAllItems = ({ clientLogs, getLog, deleteLog, toggleEditLog, resetLogState }) => {\r\n\r\n  // Will toggle 'logMenu.isEditing' state to render 'LogEdit.js' component in 'ClientPage.js'\r\n  const navigateToEditLog = async (logId) => {\r\n    await getLog(logId);\r\n    toggleEditLog();\r\n  };\r\n\r\n  // Renders 'clientLogs' for current Client\r\n  const clientLogsContainer = (\r\n    clientLogs.map(clientLog => (\r\n      <div className={style.clientLogItem} key={clientLog.id}>\r\n          <div className={style.headerContainer}>\r\n            <h4 className={style.logType}>{clientLog.type}</h4>\r\n          </div>\r\n          <p className={style.logText}>{clientLog.details}</p>\r\n          {/* <p className={style.logDateText}>{clientLog.log_date}</p> */}\r\n          <p className={style.logDateText}>{moment(clientLog.log_date).format('MMMM Do YYYY')}</p>\r\n          {/* <p className={style.logText}>{log.associated_client}</p> */}\r\n          <div className={style.buttonContainer}>\r\n            <div className={style.editIconContainer} onClick={() => navigateToEditLog(clientLog.id)}>\r\n              <MdEdit className={style.editIcon} aria-label='Edit Log' />\r\n              <span className={style.editText}>Edit</span>\r\n            </div>\r\n            <div className={style.deleteIconContainer} onClick={() => deleteLog(clientLog.id)}>\r\n              <MdDeleteForever className={style.deleteIcon} aria-label='Delete Log' />\r\n              <span className={style.deleteText}>Delete</span>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    ))\r\n  );\r\n\r\n  return (\r\n    <div className={style.logAllItems}>\r\n\r\n      <LogCreate removeReturnContainer />\r\n\r\n      <div className={style.clientLogsContainer}>\r\n        <h2 className={style.header}>All Logs</h2>\r\n        { clientLogsContainer }\r\n      </div>\r\n\r\n      <ReturnContainer returnToClient onClick={() => resetLogState()} />\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nLogAllItems.propTypes = {\r\n  clientLogs: PropTypes.array,\r\n  resetLogState: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  clientLogs: state.log.clientLogs,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getLog: (logId) => dispatch(getLog(logId)),\r\n  deleteLog: (logId) => dispatch(deleteLog(logId)),\r\n  toggleEditLog: () => dispatch(toggleEditLog()),\r\n  resetLogState: () => dispatch(resetLogState()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogAllItems);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MdEmail, MdPhoneInTalk, MdEdit, MdRemoveRedEye } from 'react-icons/md';\r\n\r\nimport { getAllCompanies, getCompany } from '../../redux/company/company.actions';\r\nimport { resetCompanyState, toggleEditClient, toggleAllLogs } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport ClientEdit from '../client-edit/ClientEdit';\r\nimport CompanyItem from '../../components-dashboard-company/company-item/CompanyItem';\r\nimport CompanyCreate from '../../components-dashboard-company/company-create/CompanyCreate';\r\nimport CompanyEdit from '../../components-dashboard-company/company-edit/CompanyEdit';\r\nimport LogItem from '../../components-dashboard-logs/log-item/LogItem';\r\nimport LogCreate from '../../components-dashboard-logs/log-create/LogCreate';\r\nimport LogEdit from '../../components-dashboard-logs/log-edit/LogEdit';\r\nimport LogAllItems from '../../components-dashboard-logs/log-all-items/LogAllItems';\r\n\r\nimport style from './client-page.module.scss';\r\n\r\n// *************************** CLIENT PAGE COMPONENT *************************** //\r\nconst ClientPage = ({ client, companies, clientLogs, companyMenu, logMenu, editingClient, getAllCompanies, getCompany, resetCompanyState, toggleEditClient, toggleAllLogs, }) => {\r\n  // 'client' object passed as prop from 'DashboardPage.js'\r\n  const { id, first_name, last_name, email, phone_number, job_title, notes, client_company, logs, loading } = client;\r\n\r\n  // Toggle whether User is currently editing 'client' object info\r\n  const onClickEditClient = () => {\r\n    resetCompanyState();\r\n    toggleEditClient();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllCompanies();\r\n  }, []);\r\n\r\n  // Loop through 'companies' and set 'currentCompany' if matches 'client.id' \r\n  companies.map(company => {\r\n    if (company.associated_client === client.id) {\r\n      getCompany(company.id);\r\n    }\r\n  });\r\n\r\n  // ClientPage header (doesnt change as other Client items are being rendered)\r\n  // Displays 'Client' => first_name + last_name + job_title\r\n  const clientHeader = (\r\n    <div className={style.clientHeader}>\r\n      <div className={style.nameContainer}>\r\n        <h2 className={style.clientName}>{first_name} {last_name}</h2>\r\n        <div className={style.jobTitleContainer}>\r\n          <p className={style.jobTitle}>{job_title}</p>\r\n          <div className={style.iconContainer} onClick={() => onClickEditClient()}>\r\n            {\r\n              !editingClient && \r\n              <>\r\n                <MdEdit className={style.editIcon} /> \r\n                <span className={style.editText}>Edit</span>\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Render Client Info to page (Initial 'clientInfo' data that renders)\r\n  let clientInfo = (\r\n    <div className={style.clientPage}>\r\n      {/* CLIENT HEADER SECTION */}\r\n      { clientHeader }\r\n      {/* CLIENT CONTACT INFO SECTION */}\r\n      <div className={style.sectionContainer}>\r\n        <h3 className={style.sectionTitle}>Contact Info</h3>\r\n        <div className={style.infoContainer}>\r\n          <MdPhoneInTalk aria-label='Phone Number' className={style.icon} />\r\n          <p className={style.infoText}>\r\n            {phone_number ? phone_number : 'N/A'}\r\n          </p>\r\n        </div>\r\n        <div className={style.infoContainer}>\r\n          <MdEmail aria-label='Email Address' className={style.icon} />\r\n          <p className={style.infoText}>\r\n            {email ? email : 'N/A'}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {/* CLIENT NOTES SECTION */}\r\n      <div className={style.sectionContainer}>\r\n        <h3 className={style.sectionTitle}>Notes</h3>\r\n        <p className={style.noteText}>\r\n          { notes ? notes : 'No client notes added...'}\r\n        </p>\r\n      </div>\r\n      {/* CLIENT COMPANY SECTION */}\r\n      <div className={style.sectionContainer}>\r\n        <h3 className={style.sectionTitle}>Company Info</h3>\r\n        <CompanyItem client={client} />\r\n      </div>\r\n      {/* CLIENT LOGS SECTION */}\r\n      <div className={style.sectionContainer}>\r\n        {\r\n          (clientLogs.length > 0)\r\n            ?\r\n              <div className={style.titleHeader}>\r\n                <h3 className={style.sectionTitle}>Recent Logs</h3>\r\n                <div className={style.viewAllIconContainer} onClick={() => toggleAllLogs()}>\r\n                  <MdRemoveRedEye className={style.viewAllIcon} />\r\n                  <span className={style.viewAllText}>View / Add Logs</span>\r\n                </div>\r\n              </div>\r\n            : <h3 className={style.sectionTitle}>Recent Logs</h3>\r\n        }\r\n        <LogItem />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // if User selects 'toggleCreateCompany' in 'CompanyItem' render 'CompanyCreate' component to screen\r\n  if (companyMenu.isCreating) {\r\n    clientInfo = (\r\n      <div className={style.clientPage}>\r\n        { clientHeader }\r\n        <CompanyCreate client={client} />\r\n      </div>\r\n    )\r\n  };\r\n\r\n  // if User selects 'toggleEditCompany' in 'CompanyItem' render 'CompanyEdit' component to screen\r\n  if (companyMenu.isEditing) {\r\n    clientInfo = (\r\n      <div className={style.clientPage}>\r\n        { clientHeader }\r\n        <CompanyEdit />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // if User selects 'toggleCreateLog' in 'CompanyItem' render 'LogCreate' component to screen\r\n  if (logMenu.isCreating) {\r\n    clientInfo = (\r\n      <div className={style.clientPage}>\r\n        { clientHeader }\r\n        <LogCreate />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  // if User selects 'toggleEditLog' in 'CompanyItem' render 'LogEdit' component to screen\r\n  if (logMenu.isEditing) {\r\n    clientInfo = (\r\n      <div className={style.clientPage}>\r\n        { clientHeader }\r\n        <LogEdit />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // if User selects 'toggleAllLogs' in 'ClientPage' => Client Logs Section render 'LogAllItems' component to screen\r\n  if (logMenu.isViewingAllLogs) {\r\n    clientInfo = (\r\n      <div className={style.clientPage}>\r\n        { clientHeader }\r\n        <LogAllItems />\r\n      </div>\r\n    )\r\n  };\r\n\r\n  // Render 'ClientEdit.js' component if editingClient === true\r\n  const renderClientEdit = (\r\n    <div className={style.clientPage}>\r\n      { clientHeader }\r\n      {/* CLIENT EDIT COMPONENT */}\r\n      <ClientEdit client={client} />\r\n    </div>\r\n  );\r\n\r\n  // Final render options for screen\r\n  const renderToScreen = (\r\n    editingClient ? renderClientEdit : clientInfo\r\n  );\r\n\r\n  return (\r\n    loading ? <p>Loading...</p> : renderToScreen\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nClientPage.propTypes = {\r\n  client: PropTypes.object,\r\n  companies: PropTypes.array,\r\n  clientLogs: PropTypes.array,\r\n  companyMenu: PropTypes.object,\r\n  logMenu: PropTypes.object,\r\n  editingClient: PropTypes.bool.isRequired,\r\n  getAllCompanies: PropTypes.func.isRequired,\r\n  getCompany: PropTypes.func.isRequired,\r\n  resetCompanyState: PropTypes.func.isRequired,\r\n  toggleEditClient: PropTypes.func.isRequired,\r\n  toggleAllLogs: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  companies: state.company.companies,\r\n  clientLogs: state.log.clientLogs,\r\n  companyMenu: state.dashboard.companyMenu,\r\n  logMenu: state.dashboard.logMenu,\r\n  editingClient: state.dashboard.editingClient,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getAllCompanies: () => dispatch(getAllCompanies()),\r\n  getCompany: (companyId) => dispatch(getCompany(companyId)),\r\n  resetCompanyState: () => dispatch(resetCompanyState()),\r\n  toggleEditClient: () => dispatch(toggleEditClient()),\r\n  toggleAllLogs: () => dispatch(toggleAllLogs()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientPage);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MdPerson, MdEmail, MdPhoneInTalk } from 'react-icons/md';\r\nimport { FaUserTie } from 'react-icons/fa';\r\n\r\nimport { createClient } from '../../redux/clients/clients.actions';\r\n\r\nimport FormInput from '../../components/form-input/FormInput';\r\nimport Button from '../../components/button/Button';\r\nimport FormTextArea from '../../components/form-text-area/FormTextArea';\r\n\r\nimport style from './client-create.module.scss';\r\n\r\n// *************************** CLIENT CREATE COMPONENT *************************** //\r\nconst ClientCreate = ({ createClient }) => {\r\n  const [ formData, setFormData ] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    phone_number: '',\r\n    job_title: '',\r\n    notes: '',\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await createClient(formData);\r\n    setFormData({\r\n      first_name: '',\r\n      last_name: '',\r\n      email: '',\r\n      phone_number: '',\r\n      job_title: '',\r\n      notes: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={style.clientCreate}>\r\n      <h2 className={style.header}>Add New Client</h2>\r\n\r\n      <form className={style.form} onSubmit={onSubmit}>\r\n\r\n        <label className={style.formLabel}>\r\n          First Name <span className={style.requiredText}>(required)</span>\r\n        </label>\r\n        <div className={style.inputContainer}>\r\n          <MdPerson className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='first_name'\r\n            placeholder='First Name'\r\n            autoComplete='off'\r\n            value={formData.first_name}\r\n            onChange={onChange}\r\n            required\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>\r\n          Last Name <span className={style.requiredText}>(required)</span>\r\n        </label>\r\n        <div className={style.inputContainer}>\r\n          <MdPerson className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='last_name'\r\n            placeholder='Last Name'\r\n            autoComplete='off'\r\n            value={formData.last_name}\r\n            onChange={onChange}\r\n            required\r\n            clientInput\r\n          />\r\n        </div>\r\n        \r\n        <label className={style.formLabel}>Email</label>\r\n        <div className={style.inputContainer}>\r\n          <MdEmail className={style.inputIcon} />\r\n          <FormInput \r\n            type='email'\r\n            name='email'\r\n            placeholder='Email'\r\n            autoComplete='off'\r\n            value={formData.email}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Phone Number</label>\r\n        <div className={style.inputContainer}>\r\n          <MdPhoneInTalk className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='phone_number'\r\n            placeholder='Phone Number'\r\n            autoComplete='off'\r\n            value={formData.phone_number}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Job Title</label>\r\n        <div className={style.inputContainer}>\r\n          <FaUserTie className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='job_title'\r\n            placeholder='Job Title'\r\n            autoComplete='off'\r\n            value={formData.job_title}\r\n            onChange={onChange}\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Notes</label>\r\n        <FormTextArea \r\n          type='textarea'\r\n          name='notes'\r\n          placeholder='Notes'\r\n          autoComplete='off'\r\n          value={formData.notes}\r\n          onChange={onChange}\r\n          clientTextArea\r\n        />\r\n\r\n        <Button type='submit' clientButton>Add Client</Button>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nClientCreate.propTypes = {\r\n  createClient: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createClient: ({first_name, last_name, email, phone_number, job_title, notes}) => dispatch(createClient({first_name, last_name, email, phone_number, job_title, notes})),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ClientCreate);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { MdEdit, MdDeleteForever } from 'react-icons/md';\r\n\r\nimport { getTask, updateTask, deleteTask } from '../../redux/task/task.actions';\r\nimport { toggleEditTask } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport style from './task-item.module.scss';\r\n\r\n// *************************** TASK ITEM COMPONENT *************************** //\r\nconst TaskItem = ({ task, getTask, updateTask, deleteTask, toggleEditTask }) => {\r\n  const { id, title, body, date_created, is_complete } = task;\r\n\r\n  useEffect(() => {\r\n    getTask(id)\r\n  }, [getTask, id]);\r\n  \r\n  const [ formData, setFormData ] = useState({\r\n    title: title,\r\n    body: body,\r\n    date_created: date_created,\r\n    is_complete: is_complete,\r\n  });\r\n\r\n  // Will toggle 'taskMenu.isEditing' state to render 'TaskEdit.js' component in 'TaskPage.js'\r\n  const navigateToEditTask = async (taskId) => {\r\n    await getTask(taskId);\r\n    toggleEditTask();\r\n  };\r\n\r\n  const onChange = async () => {\r\n    const isChecked = formData.is_complete = !formData.is_complete;\r\n    setFormData({\r\n      ...formData,\r\n      is_complete: isChecked,\r\n    });\r\n    await updateTask(id, formData);\r\n  };\r\n\r\n  return (\r\n    <div className={style.taskItem}>\r\n      <div key={id} className={style.taskContainer}>\r\n          <div className={style.headerContainer}>\r\n            <h4 className={style.taskType}>{title}</h4>\r\n          </div>\r\n          <p className={style.taskText}>{body}</p>\r\n          <p className={style.taskDateText}>{moment(date_created).format('MMMM Do YYYY')}</p>\r\n          <div className={style.buttonContainer}>\r\n            <div className={style.isCompleteContainer}>\r\n              <input \r\n                type='checkbox'\r\n                name='is_complete'\r\n                checked={formData.is_complete}\r\n                onChange={onChange}\r\n                className={style.checkbox}\r\n              />\r\n              <label className={style.isCompleteText}>Completed</label>\r\n            </div>\r\n            <div className={style.iconsContainer}>\r\n              <div className={style.editIconContainer} onClick={() => navigateToEditTask(id)}>\r\n                <MdEdit className={style.editIcon} aria-label='Edit Task' />\r\n                <span className={style.editText}>Edit</span>\r\n              </div>\r\n              <div className={style.deleteIconContainer} onClick={() => deleteTask(id)}>\r\n                <MdDeleteForever className={style.deleteIcon} aria-label='Delete Task' />\r\n                <span className={style.deleteText}>Delete</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nTaskItem.propTypes = {\r\n  getTask: PropTypes.func.isRequired,\r\n  updateTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired,\r\n  toggleEditTask: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getTask: (id) => dispatch(getTask(id)),\r\n  updateTask: (id, formData) => dispatch(updateTask(id, formData)),\r\n  deleteTask: (id) => dispatch(deleteTask(id)),\r\n  toggleEditTask: () => dispatch(toggleEditTask()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(TaskItem);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MdTitle } from 'react-icons/md';\r\n\r\nimport { getAllTasks, updateTask } from '../../redux/task/task.actions';\r\nimport { resetEditTask } from '../../redux/dashboard/dashboard.actions';\r\n\r\nimport Button from '../../components/button/Button';\r\nimport FormInput from '../../components/form-input/FormInput';\r\nimport FormTextArea from '../../components/form-text-area/FormTextArea';\r\nimport ReturnContainer from '../../components/return-container/ReturnContainer';\r\n\r\nimport style from './task-edit.module.scss';\r\n\r\n// *************************** TASK EDIT COMPONENT *************************** //\r\nconst TaskEdit = ({ task, getAllTasks, updateTask, resetEditTask }) => {\r\n  const [ formData, setFormData ] = useState({\r\n    title: task.title ? task.title : '',\r\n    body: task.body ? task.body : '',\r\n    date_created: task.date_created,\r\n    is_complete: task.is_complete,\r\n  });\r\n\r\n  const onChangeIsComplete = async () => {\r\n    const isChecked = formData.is_complete = !formData.is_complete;\r\n    setFormData({\r\n      ...formData,\r\n      is_complete: isChecked,\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateTask(task.id, formData);\r\n    getAllTasks();\r\n  };\r\n\r\n  return (\r\n    <div className={style.taskEdit}>\r\n      \r\n      <h2 className={style.header}>Update Task</h2>\r\n\r\n      <form className={style.form} onSubmit={onSubmit}>\r\n        <label className={style.formLabel}>\r\n          Title <span className={style.requiredText}>(required)</span>\r\n        </label>\r\n        <div className={style.inputContainer}>\r\n          <MdTitle className={style.inputIcon} />\r\n          <FormInput \r\n            type='text'\r\n            name='title'\r\n            placeholder='Title'\r\n            autoComplete='off'\r\n            value={formData.title}\r\n            onChange={onChange}\r\n            required\r\n            clientInput\r\n          />\r\n        </div>\r\n\r\n        <label className={style.formLabel}>Details</label>\r\n        <FormTextArea \r\n          type='textarea'\r\n          name='body'\r\n          placeholder='Body'\r\n          autoComplete='off'\r\n          value={formData.body}\r\n          onChange={onChange}\r\n          clientTextArea\r\n        />\r\n\r\n        {/* <label className={style.formLabel}>Date</label>\r\n        <div className={style.inputContainer}>\r\n          <MdTitle className={style.inputIcon} />\r\n          <FormInput \r\n            type='date'\r\n            name='date_created'\r\n            placeholder='Date Created'\r\n            autoComplete='off'\r\n            value={formData.date_created}\r\n            onChange={onChange}\r\n          />\r\n        </div> */}\r\n\r\n        <div className={style.isCompleteContainer}>\r\n          <input \r\n            type='checkbox'\r\n            name='is_complete'\r\n            checked={formData.is_complete}\r\n            onChange={onChangeIsComplete}\r\n            className={style.checkbox}\r\n          />\r\n          <label className={style.isCompleteText}>Completed</label>\r\n        </div>\r\n\r\n        {/* <Button type='submit' todoButton>Update</Button> */}\r\n        <Button type='submit' clientButton>Update</Button>\r\n      </form>\r\n\r\n      <ReturnContainer returnToClient onClick={() => resetEditTask()} />\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nTaskEdit.propTypes = {\r\n  task: PropTypes.object,\r\n  getAllTasks: PropTypes.func.isRequired,\r\n  updateTask: PropTypes.func.isRequired,\r\n  resetEditTask: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  task: state.task.task,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getAllTasks: () => dispatch(getAllTasks()),\r\n  updateTask: (taskId, formData) => dispatch(updateTask(taskId, formData)),\r\n  resetEditTask: () => dispatch(resetEditTask()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskEdit);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getAllTasks } from '../../redux/task/task.actions';\r\n\r\nimport TaskItem from '../task-item/TaskItem';\r\nimport TaskEdit from '../task-edit/TaskEdit';\r\n\r\nimport style from './task-page.module.scss';\r\n\r\n// *************************** TASK PAGE COMPONENT *************************** //\r\nconst TaskPage = ({ taskState, editingTask, getAllTasks }) => {\r\n  const { tasks, task, loading, error } = taskState;\r\n\r\n  useEffect(() => {\r\n    getAllTasks()\r\n  }, [getAllTasks]);\r\n\r\n  let renderTaskToPage = (\r\n    <>\r\n      <div className={style.pendingTodoContainer}>\r\n        { tasks.length > 0 \r\n          ? <h3 className={style.sectionTitle}>Current Tasks</h3>\r\n          : <h3 className={style.emptyTitle}>\r\n              No tasks currently. Use 'Create Task' form to add a new task.\r\n            </h3>\r\n        }\r\n        {/* ONLY SHOW TASKS WHICH HAVE NOT BEEN COMPLETED */}\r\n        {\r\n          tasks.map(task => (\r\n            !task.is_complete && <TaskItem key={task.id} task={task} />\r\n          ))\r\n        }\r\n      </div>\r\n    \r\n      {\r\n        tasks.length > 0 &&\r\n        <div className={style.completedTodoContainer}>\r\n          <h3 className={style.sectionTitle}>Recently Completed</h3>\r\n          {/* ONLY SHOW TASKS WHICH HAVE BEEN COMPLETED */}\r\n          { tasks.map(task => (\r\n            task.is_complete && <TaskItem key={task.id} task={task} />\r\n          ))}\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n\r\n  if (editingTask) {\r\n    renderTaskToPage = <TaskEdit />\r\n  };\r\n\r\n  return (\r\n    <div className={style.taskPage}>\r\n      <h2 className={style.header}>Task List</h2>\r\n      { loading ? <p>Loading...</p> : renderTaskToPage }\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nTaskPage.propTypes = {\r\n  taskState: PropTypes.object,\r\n  editingTask: PropTypes.bool.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  taskState: state.task,\r\n  editingTask: state.dashboard.editingTask,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getAllTasks: () => dispatch(getAllTasks()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskPage);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\nimport { getAllLogs } from '../../redux/log/log.actions';\r\nimport { addCalendarDateLog, resetCalendarDateLogs, setCalendarDate, } from '../../redux/calendar/calendar.actions';\r\n\r\nimport style from './calendar-logs.module.scss';\r\n\r\n// *************************** CALENDAR LOGS COMPONENT *************************** //\r\nconst CalendarLogs = ({ logs, getAllLogs, addCalendarDateLog, resetCalendarDateLogs, setCalendarDate, }) => {\r\n  useEffect(() => {\r\n    getAllLogs()\r\n  }, [setCalendarDate]);\r\n\r\n  let formData = [];\r\n\r\n  // Map 'logs' objects into correct format in 'formData' array for 'fullcalendar' to parse\r\n  logs.map(log => (\r\n    formData.push({\r\n      id: log.id,\r\n      title: log.type,\r\n      details: log.details,\r\n      date: moment(log.log_date).format('YYYY-MM-DD'),\r\n      associated_client: log.associated_client,\r\n      // backgroundColor: '#3082E2',\r\n    })\r\n  ));\r\n\r\n  const onDateClick = (arg) => {\r\n    resetCalendarDateLogs();\r\n    setCalendarDate(arg.dateStr)\r\n    formData.map(log => (\r\n      log.date === arg.dateStr\r\n        && addCalendarDateLog(log)\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className={style.calendarLogs}>\r\n\r\n      {/* HEADER SECTION */}\r\n      <div className={style.headerContainer}>\r\n        <h2 className={style.header}>Logs Calendar</h2>\r\n      </div>\r\n\r\n      {/* CALENDAR SECTION */}\r\n      <FullCalendar \r\n        defaultView='dayGridMonth'\r\n        plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin ]}\r\n        weekends={true}\r\n        events={formData.length > 0 ? formData : []}\r\n        dateClick={onDateClick}\r\n        height={'auto'}\r\n        buttonText={{\r\n          today: 'Today',\r\n        }}\r\n        eventOrder={'start'}\r\n        eventColor={'#3082E2'}\r\n      />\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES \r\nCalendarLogs.propTypes = {\r\n  getAllLogs: PropTypes.func.isRequired,\r\n  addCalendarDateLog: PropTypes.func.isRequired,\r\n  resetCalendarDateLogs: PropTypes.func.isRequired,\r\n  setCalendarDate: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  logs: state.log.logs,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getAllLogs: () => dispatch(getAllLogs()),\r\n  addCalendarDateLog: (log) => dispatch(addCalendarDateLog(log)),\r\n  resetCalendarDateLogs: () => dispatch(resetCalendarDateLogs()),\r\n  setCalendarDate: (logDate) => dispatch(setCalendarDate(logDate)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarLogs);","import React, { } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ClientPage from '../../components-dashboard-client/client-page/ClientPage';\r\nimport ClientCreate from '../../components-dashboard-client/client-create/ClientCreate';\r\nimport TaskPage from '../../components-dashboard-tasks/task-page/TaskPage';\r\nimport CalendarLogs from '../../components-dashboard-calendar/calendar-logs/CalendarLogs';\r\n\r\nimport style from './dashboard-large-section.module.scss';\r\n\r\n// *************************** DASHBOARD LARGE SECTION COMPONENT *************************** //\r\nconst DashboardLargeSection = ({ client, homeMenu, clientsMenu, tasksMenu, calendarMenu }) => {\r\n  // 'client' object passed down as prop via 'DashboardPage.js'\r\n  return (\r\n    <div className={style.dashboardLargeSection}>\r\n\r\n      <div className={style.largeInnerContainer}>\r\n        { homeMenu.isActive && <h2>HOME SECTION</h2> }\r\n\r\n        {/* If 'client' is NULL, render 'ClientCreate.js' component for User */}\r\n        { \r\n          clientsMenu.isActive && \r\n          (client !== null ? <ClientPage client={client} /> : <ClientCreate />) \r\n        }\r\n\r\n        { tasksMenu.isActive && <TaskPage /> }\r\n        \r\n        { calendarMenu.isActive && <CalendarLogs /> }\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nDashboardLargeSection.propTypes = {\r\n  client: PropTypes.object,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  homeMenu: state.dashboard.homeMenu,\r\n  clientsMenu: state.dashboard.clientsMenu,\r\n  tasksMenu: state.dashboard.tasksMenu,\r\n  calendarMenu: state.dashboard.calendarMenu,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DashboardLargeSection);","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getAllClients } from '../../redux/clients/clients.actions';\r\n\r\nimport DashboardMenuSection from '../../components-dashboard/dashboard-menu-section/DashboardMenuSection';\r\nimport DashboardSmallSection from '../../components-dashboard/dashboard-small-section/DashboardSmallSection';\r\nimport DashboardLargeSection from '../../components-dashboard/dashboard-large-section/DashboardLargeSection';\r\n\r\nimport style from './dashboard-page.module.scss';\r\n\r\n// *************************** DASHBOARD TEST PAGE COMPONENT *************************** //\r\nconst DashboardPage = ({ clients, client, loading, getAllClients }) => {\r\n  useEffect(() => {\r\n    getAllClients();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.dashboardPage}>\r\n\r\n      {/* DASHBOARD MENU SECTION */}\r\n      <div className={style.dashboardMenuContainer}>\r\n        <DashboardMenuSection />\r\n      </div>\r\n      {/* DASHBOARD SMALL SECTION */}\r\n      <div className={style.dashboardSmallContainer}>\r\n        <DashboardSmallSection clients={clients} />\r\n      </div>\r\n      {/* DASHBOARD LARGE SECTION */}\r\n      <div className={style.dashboardLargeContainer}>\r\n        <DashboardLargeSection client={client} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n// PROP TYPES\r\nDashboardPage.propTypes = {\r\n  clients: PropTypes.array,\r\n  client: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  getAllClients: PropTypes.func.isRequired,\r\n};\r\n\r\n// REDUX\r\nconst mapStateToProps = (state) => ({\r\n  clients: state.clients.clients,\r\n  client: state.clients.client,\r\n  loading: state.clients.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getAllClients: () => dispatch(getAllClients()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardPage);","import React, { } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from '../redux/store';\r\n\r\n// APP PAGES\r\nimport Navbar from '../pages/navbar/Navbar';\r\nimport NavbarMobile from '../pages/navbar-mobile/NavbarMobile';\r\nimport Footer from '../pages/footer/Footer';\r\nimport PrivateRoute from '../components/private-route/PrivateRoute';\r\nimport Alert from '../components/alert/Alert';\r\n\r\n// NOT AUTHENTICATED PAGES\r\nimport HomePage from '../pages/home-page/HomePage';\r\nimport SigninPage from '../pages/signin-page/SigninPage';\r\nimport SignupPage from '../pages/signup-page/SignupPage';\r\nimport PageNotFound from '../pages/404-page/PageNotFound';\r\n\r\n// AUTHENTICATED PAGES\r\nimport DashboardPage from '../pages/dashboard-page/DashboardPage';\r\n\r\nimport style from './app.modules.scss';\r\n\r\n// *************************** APP COMPONENT *************************** //\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n\r\n      <div className={style.app}>\r\n        <BrowserRouter basename='/agile-client'>\r\n\r\n          <div className={style.content}>\r\n            <Alert />\r\n            <Navbar />\r\n            <Switch>\r\n              <Route exact path='/' component={HomePage} />\r\n              <Route exact path='/signin' component={SigninPage} />\r\n              <Route exact path='/signup' component={SignupPage} />\r\n\r\n              {/* PRIVATE ROUTES */}\r\n              <PrivateRoute exact path='/dashboard' component={DashboardPage} />\r\n\r\n              {/* 404 PAGE */}\r\n              <Route component={PageNotFound} />\r\n\r\n            </Switch>\r\n          </div>\r\n\r\n          <NavbarMobile />\r\n          {/* <Footer /> */}\r\n\r\n        </BrowserRouter>\r\n      </div>\r\n      \r\n    </Provider>\r\n  )\r\n};\r\n\r\nexport default App;","import React, { } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/styles.scss';\r\n\r\nimport App from './routes/App';\r\n\r\nconst jsx = (\r\n  <App />\r\n);\r\n\r\nReactDOM.render(jsx, document.getElementById('root'));"],"sourceRoot":""}